{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irisregion.json",
    "description": "Represents an iris region",
    "type": "object",
    "properties": {
        "preprocessors": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzscripts"},
            "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
        },
        "name": {
            "type": "string",
            "minLength": 2,
            "description": "name\nThe name of the region\n   \nText\n\n    \n* Default Value is A Region\n* Minimum Length allowed is 2"
        },
        "jigsawStructures": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisjigsawstructureplacement"},
            "description": "jigsawStructures\nJigsaw structures\n   \nList of JigsawStructurePlacements (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "effects": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriseffect"},
            "description": "effects\nEffects are ambient effects such as potion effects, random sounds, or even particles around each player. All of these effects are played via packets so two players won't see/hear each others effects.\nDue to performance reasons, effects will play arround the player even if where the effect was played is no longer in the biome the player is in.\n   \nList of Effects (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "entitySpawners": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzspawners"},
            "description": "entitySpawners\nSpawn Entities in this region over time. Iris will continually replenish these mobs just like vanilla does.\n   \nList<Spawner>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Spawner (use ctrl+space for auto complete!)"
        },
        "rarity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 128,
            "description": "rarity\nThe rarity of the region\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1\n* Maximum allowed is 128"
        },
        "blockDrops": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdrops"},
            "description": "blockDrops\nDefine custom block drops for this region\n   \nList of BlockDropss (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "objects": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectplacement"},
            "description": "objects\nObjects define what schematics (iob files) iris will place in this region\n   \nList of ObjectPlacements (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "shoreHeightMin": {
            "type": "number",
            "minimum": 0,
            "description": "shoreHeightMin\nThe min shore height\n   \nNumber\n\n    \n* Default Value is 1.2\n* Minimum allowed is 0.0"
        },
        "loot": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislootreference",
                    "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot-registry",
                    "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "shoreHeightMax": {
            "type": "number",
            "minimum": 0,
            "description": "shoreHeightMax\nThe the max shore height\n   \nNumber\n\n    \n* Default Value is 3.2\n* Minimum allowed is 0.0"
        },
        "shoreHeightZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "description": "shoreHeightZoom\nThe varience of the shore height\n   \nNumber\n\n    \n* Default Value is 3.14\n* Minimum allowed is 1.0E-4"
        },
        "landBiomeZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "description": "landBiomeZoom\nHow large land biomes are in this region\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
        },
        "shoreBiomeZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "description": "shoreBiomeZoom\nHow large shore biomes are in this region\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
        },
        "seaBiomeZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "description": "seaBiomeZoom\nHow large sea biomes are in this region\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
        },
        "caveBiomeZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "description": "caveBiomeZoom\nHow large cave biomes are in this region\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
        },
        "carving": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscarving",
                    "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-carving",
                    "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "fluidBodies": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisfluidbodies",
                    "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-fluid-bodies",
                    "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "landBiomes": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzbiomes"},
            "description": "landBiomes\nA list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.\n   \nList<Biome>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Biome (use ctrl+space for auto complete!)"
        },
        "seaBiomes": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzbiomes"},
            "description": "seaBiomes\nA list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.\n   \nList<Biome>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Biome (use ctrl+space for auto complete!)"
        },
        "shoreBiomes": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzbiomes"},
            "description": "shoreBiomes\nA list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.\n   \nList<Biome>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Biome (use ctrl+space for auto complete!)"
        },
        "caveBiomes": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzbiomes"},
            "description": "caveBiomes\nA list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.\n   \nList<Biome>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Biome (use ctrl+space for auto complete!)"
        },
        "deposits": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisdepositgenerator"},
            "description": "deposits\nDefine regional deposit generators that add onto the global deposit generators\n   \nList of DepositGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "riverStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "riverStyle\nThe style of rivers\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "riverStyle\nThe style of rivers\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "riverStyle\nThe style of rivers\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "lakeStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "lakeStyle\nThe style of lakes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "lakeStyle\nThe style of lakes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "lakeStyle\nThe style of lakes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "color": {
            "type": "string",
            "description": "color\nA color for visualizing this region with a color. I.e. #F13AF5. This will show up on the map.\n   \nText\n"
        },
        "ores": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisoregenerator"},
            "description": "ores\nCollection of ores to be generated\n   \nList of OreGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        }
    },
    "definitions": {
        "enum-snippet-worm": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisrange": {"anyOf": [
            {
                "description": "Represents a range",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-attribute-attribute": {"enum": [
            "GENERIC_MAX_HEALTH",
            "GENERIC_FOLLOW_RANGE",
            "GENERIC_KNOCKBACK_RESISTANCE",
            "GENERIC_MOVEMENT_SPEED",
            "GENERIC_FLYING_SPEED",
            "GENERIC_ATTACK_DAMAGE",
            "GENERIC_ATTACK_KNOCKBACK",
            "GENERIC_ATTACK_SPEED",
            "GENERIC_ARMOR",
            "GENERIC_ARMOR_TOUGHNESS",
            "GENERIC_LUCK",
            "HORSE_JUMP_STRENGTH",
            "ZOMBIE_SPAWN_REINFORCEMENTS"
        ]},
        "obj-com-volmit-iris-engine-object-iriseffect": {"anyOf": [
            {
                "description": "An iris effect",
                "type": "object",
                "properties": {
                    "potionEffect": {
                        "type": "string",
                        "description": "potionEffect\nThe potion effect to apply in this area\n   \nText\n\n    \n* Default Value is "
                    },
                    "particleEffect": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-particle",
                        "description": "particleEffect\nThe particle effect to apply in the area\n   \nParticle\n\nMust be a valid Particle (use ctrl+space for auto complete!)"
                    },
                    "particleOffset": {
                        "type": "integer",
                        "minimum": -32,
                        "maximum": 32,
                        "description": "particleOffset\nRandomly offset from the surface to this surface+value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -32\n* Maximum allowed is 32"
                    },
                    "particleAltX": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltX\nThe alt x, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "particleAltY": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltY\nThe alt y, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "particleAltZ": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltZ\nThe alt z, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "randomAltX": {
                        "type": "boolean",
                        "description": "randomAltX\nRandomize the altX by -altX to altX\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "randomAltY": {
                        "type": "boolean",
                        "description": "randomAltY\nRandomize the altY by -altY to altY\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "randomAltZ": {
                        "type": "boolean",
                        "description": "randomAltZ\nRandomize the altZ by -altZ to altZ\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sound": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-sound",
                        "description": "sound\nThe sound to play\n   \nSound\n\nMust be a valid Sound (use ctrl+space for auto complete!)"
                    },
                    "soundDistance": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 512,
                        "description": "soundDistance\nThe max distance from the player the sound will play\n   \nInteger\n\n    \n* Default Value is 12\n* Minimum allowed is 0\n* Maximum allowed is 512"
                    },
                    "minPitch": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 1.99,
                        "description": "minPitch\nThe minimum sound pitch\n   \nNumber\n\n    \n* Default Value is 0.5\n* Minimum allowed is 0.01\n* Maximum allowed is 1.99"
                    },
                    "maxPitch": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 1.99,
                        "description": "maxPitch\nThe max sound pitch\n   \nNumber\n\n    \n* Default Value is 1.5\n* Minimum allowed is 0.01\n* Maximum allowed is 1.99"
                    },
                    "volume": {
                        "type": "number",
                        "minimum": 0.001,
                        "maximum": 512,
                        "description": "volume\nThe sound volume.\n   \nNumber\n\n    \n* Default Value is 1.5\n* Minimum allowed is 0.001\n* Maximum allowed is 512.0"
                    },
                    "particleCount": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 512,
                        "description": "particleCount\nThe particle count. Try setting to zero for using the alt xyz to a motion value instead of an offset\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 512"
                    },
                    "particleDistance": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "particleDistance\nHow far away from the player particles can play\n   \nInteger\n\n    \n* Default Value is 20\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "particleDistanceWidth": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 128,
                        "description": "particleDistanceWidth\nHow wide the particles can play (player's view left and right) RADIUS\n   \nInteger\n\n    \n* Default Value is 24\n* Minimum allowed is 0\n* Maximum allowed is 128"
                    },
                    "extra": {
                        "type": "number",
                        "description": "extra\nAn extra value for some particles... Which bukkit doesn't even document.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "potionStrength": {
                        "type": "integer",
                        "minimum": -1,
                        "maximum": 1024,
                        "description": "potionStrength\nThe Potion Strength or -1 to disable\n   \nInteger\n\n    \n* Default Value is -1\n* Minimum allowed is -1\n* Maximum allowed is 1024"
                    },
                    "potionTicksMax": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "potionTicksMax\nThe max time the potion will last for\n   \nInteger\n\n    \n* Default Value is 155\n* Minimum allowed is 1"
                    },
                    "potionTicksMin": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "potionTicksMin\nThe min time the potion will last for\n   \nInteger\n\n    \n* Default Value is 75\n* Minimum allowed is 1"
                    },
                    "interval": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "interval\nThe effect interval in milliseconds\n   \nInteger\n\n    \n* Default Value is 150\n* Minimum allowed is 0"
                    },
                    "particleAway": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 16,
                        "description": "particleAway\nThe effect distance start away\n   \nInteger\n\n    \n* Default Value is 5\n* Minimum allowed is 0\n* Maximum allowed is 16"
                    },
                    "chance": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "chance\nThe chance is 1 in CHANCE per interval\n   \nInteger\n\n    \n* Default Value is 50\n* Minimum allowed is 1"
                    },
                    "commandRegistry": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommandregistry",
                                "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-command-registry",
                                "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisloot": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "slotTypes": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-inventoryslottype",
                        "description": "slotTypes\nThe target inventory slot types to fill this loot with\n   \nInventorySlotType\nAn inventory slot type is used to represent a type of slot for items to fit into in any given inventory.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InventorySlotType (use ctrl+space for auto complete!)"
                    },
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nThe sub rarity of this loot. Calculated after this loot table has been picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "minAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minAmount\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxAmount\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "displayName": {
                        "type": "string",
                        "minLength": 1,
                        "description": "displayName\nThe display name of this item\n   \nText\n\n* Minimum Length allowed is 1"
                    },
                    "minDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "minDurability\nMinimum durability percent\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "maxDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "maxDurability\nMaximum durability percent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "customModel": {
                        "type": "integer",
                        "description": "customModel\nDefine a custom model identifier 1.14+ only\n   \nInteger\n"
                    },
                    "unbreakable": {
                        "type": "boolean",
                        "description": "unbreakable\nSet this to true to prevent it from being broken\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "itemFlags": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/enum-org-bukkit-inventory-itemflag"},
                        "description": "itemFlags\nThe item flags to add\n   \nList of ItemFlags\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid ItemFlag (use ctrl+space for auto complete!)"
                    },
                    "enchantments": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisenchantment"},
                        "description": "enchantments\nApply enchantments to this item\n   \nList of Enchantments (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "attributes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisattributemodifier"},
                        "description": "attributes\nApply attribute modifiers to this item\n   \nList of AttributeModifiers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "lore": {
                        "type": "array",
                        "minItems": 1,
                        "description": "lore\nAdd lore to this item\n   \nList of Text\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "type": {
                        "type": "string",
                        "$ref": "#/definitions/enum-item-type",
                        "description": "type\nThis is the item or block type. Does not accept minecraft:*, only materials such as DIAMOND_SWORD or DIRT. The exception are modded materials, as they require a namespace.\n   \nItem Type\n\n    \n* Default Value is \nMust be a valid Item Type (use ctrl+space for auto complete!)"
                    },
                    "dyeColor": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-dyecolor",
                        "description": "dyeColor\nThe dye color\n   \nDyeColor\n\nMust be a valid DyeColor (use ctrl+space for auto complete!)"
                    },
                    "leatherColor": {
                        "type": "string",
                        "description": "leatherColor\nThe leather armor color\n   \nText\n"
                    },
                    "customNbt": {
                        "type": "object",
                        "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                        "description": "customNbt\nDefines a custom NBT Tag for the item.\n   \nKMap (Object)\n"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-shaped-style": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisimagemap": {"anyOf": [
            {
                "description": "Represents an image map",
                "type": "object",
                "properties": {
                    "image": {
                        "type": "string",
                        "$ref": "#/definitions/erzimages",
                        "description": "image\nDefine the png image to read in this noise map\n   \nIris Image\n\n    \n* Default Value is \nMust be a valid images (use ctrl+space for auto complete!)"
                    },
                    "coordinateScale": {
                        "type": "number",
                        "minimum": 1,
                        "description": "coordinateScale\nThe amount of distance a single pixel is when reading this map, reading x=13, would still read pixel 0 if the scale is 32. You can zoom this externally through noise styles for zooming out.\n   \nNumber\n\n    \n* Default Value is 32.0\n* Minimum allowed is 1.0"
                    },
                    "interpolationMethod": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod",
                        "description": "interpolationMethod\nThe interpolation method if the coordinateScale is greater than 1. This blends the image into noise. For nearest neighbor, use NONE.\n   \nInterpolationMethod\nAn interpolation method (or function) is simply a method of smoothing a position based on surrounding points on a grid. Bicubic for example is smoother, but has 4 times the checks than Bilinear for example. Try using BILINEAR_STARCAST_9 for beautiful results.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InterpolationMethod (use ctrl+space for auto complete!)"
                    },
                    "channel": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisimagechannel",
                        "description": "channel\nThe channel of the image to read from. This basically converts image data into a number betwen 0 to 1 per pixel using a certain 'channel/filter'\n   \nImageChannel\nDetermines a derived channel of an image to read\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ImageChannel (use ctrl+space for auto complete!)"
                    },
                    "inverted": {
                        "type": "boolean",
                        "description": "inverted\nInvert the channel input\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "tiled": {
                        "type": "boolean",
                        "description": "tiled\nTile the image coordinates\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "centered": {
                        "type": "boolean",
                        "description": "centered\nCenter 0,0 to the center of the image instead of the top left.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-time-block": {"enum": []},
        "obj-com-volmit-iris-engine-object-irismaterialpalette": {"anyOf": [
            {
                "description": "A palette of materials",
                "type": "object",
                "properties": {
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-4,
                        "description": "zoom\nThe terrain zoom mostly for zooming in on a wispy palette\n   \nNumber\n\n    \n* Default Value is 5.0\n* Minimum allowed is 1.0E-4"
                    },
                    "palette": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "palette\nThe palette of blocks to be used in this layer\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectscale": {"anyOf": [
            {
                "description": "Scale objects",
                "type": "object",
                "properties": {
                    "variations": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 32,
                        "description": "variations\nIris Objects are scaled and cached to speed up placements. Because of this extra memory is used, so we evenly distribute variations across the defined scale range, then pick one randomly. If the differences is small, use a lower number. For more possibilities on the scale spectrum, increase this at the cost of memory.\n   \nInteger\n\n    \n* Default Value is 7\n* Minimum allowed is 1\n* Maximum allowed is 32"
                    },
                    "minimumScale": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 50,
                        "description": "minimumScale\nThe minimum scale\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01\n* Maximum allowed is 50.0"
                    },
                    "maximumScale": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 50,
                        "description": "maximumScale\nThe maximum height for placement (top of object)\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01\n* Maximum allowed is 50.0"
                    },
                    "interpolation": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisobjectplacementscaleinterpolator",
                        "description": "interpolation\nIf this object is scaled up beyond its origin size, specify a 3D interpolator\n   \nObjectPlacementScaleInterpolator\nUse 3D Interpolation on scaled objects if they are larger than the origin.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ObjectPlacementScaleInterpolator (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iristimeblock": {"anyOf": [
            {
                "description": "Represents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.",
                "type": "object",
                "properties": {
                    "startHour": {
                        "type": "number",
                        "description": "startHour\nThe beginning hour. Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "endHour": {
                        "type": "number",
                        "description": "endHour\nThe ending hour. Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscommandregistry": {"anyOf": [
            {
                "description": "Represents a casting location for a command",
                "type": "object",
                "properties": {
                    "rawCommands": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommand"},
                        "description": "rawCommands\nRun commands, at the exact location of the player\n   \nList of Commands (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "commandOffsetX": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetX\nThe alt x, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandOffsetY": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetY\nThe alt y, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandOffsetZ": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetZ\nThe alt z, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandRandomAltX": {
                        "type": "boolean",
                        "description": "commandRandomAltX\nRandomize the altX from -altX to altX\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandRandomAltY": {
                        "type": "boolean",
                        "description": "commandRandomAltY\nRandomize the altY from -altY to altY\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandRandomAltZ": {
                        "type": "boolean",
                        "description": "commandRandomAltZ\nRandomize the altZ from -altZ to altZ\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandAllRandomLocations": {
                        "type": "boolean",
                        "description": "commandAllRandomLocations\nRandomize location for all separate commands (true), or run all on the same location (false)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectreplace": {"anyOf": [
            {
                "description": "Find and replace object materials",
                "type": "object",
                "properties": {
                    "find": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "find\nFind this block\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "replace": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                                "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-palette",
                                "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "replace\nReplace it with this block palette\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nExactly match the block data or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nModifies the chance the block is replaced\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-item-type": {"enum": [
            "air",
            "stone",
            "granite",
            "polished_granite",
            "diorite",
            "polished_diorite",
            "andesite",
            "polished_andesite",
            "deepslate",
            "cobbled_deepslate",
            "polished_deepslate",
            "calcite",
            "tuff",
            "dripstone_block",
            "grass_block",
            "dirt",
            "coarse_dirt",
            "podzol",
            "rooted_dirt",
            "mud",
            "crimson_nylium",
            "warped_nylium",
            "cobblestone",
            "oak_planks",
            "spruce_planks",
            "birch_planks",
            "jungle_planks",
            "acacia_planks",
            "dark_oak_planks",
            "mangrove_planks",
            "bamboo_planks",
            "crimson_planks",
            "warped_planks",
            "bamboo_mosaic",
            "oak_sapling",
            "spruce_sapling",
            "birch_sapling",
            "jungle_sapling",
            "acacia_sapling",
            "dark_oak_sapling",
            "mangrove_propagule",
            "bedrock",
            "sand",
            "red_sand",
            "gravel",
            "coal_ore",
            "deepslate_coal_ore",
            "iron_ore",
            "deepslate_iron_ore",
            "copper_ore",
            "deepslate_copper_ore",
            "gold_ore",
            "deepslate_gold_ore",
            "redstone_ore",
            "deepslate_redstone_ore",
            "emerald_ore",
            "deepslate_emerald_ore",
            "lapis_ore",
            "deepslate_lapis_ore",
            "diamond_ore",
            "deepslate_diamond_ore",
            "nether_gold_ore",
            "nether_quartz_ore",
            "ancient_debris",
            "coal_block",
            "raw_iron_block",
            "raw_copper_block",
            "raw_gold_block",
            "amethyst_block",
            "budding_amethyst",
            "iron_block",
            "copper_block",
            "gold_block",
            "diamond_block",
            "netherite_block",
            "exposed_copper",
            "weathered_copper",
            "oxidized_copper",
            "cut_copper",
            "exposed_cut_copper",
            "weathered_cut_copper",
            "oxidized_cut_copper",
            "cut_copper_stairs",
            "exposed_cut_copper_stairs",
            "weathered_cut_copper_stairs",
            "oxidized_cut_copper_stairs",
            "cut_copper_slab",
            "exposed_cut_copper_slab",
            "weathered_cut_copper_slab",
            "oxidized_cut_copper_slab",
            "waxed_copper_block",
            "waxed_exposed_copper",
            "waxed_weathered_copper",
            "waxed_oxidized_copper",
            "waxed_cut_copper",
            "waxed_exposed_cut_copper",
            "waxed_weathered_cut_copper",
            "waxed_oxidized_cut_copper",
            "waxed_cut_copper_stairs",
            "waxed_exposed_cut_copper_stairs",
            "waxed_weathered_cut_copper_stairs",
            "waxed_oxidized_cut_copper_stairs",
            "waxed_cut_copper_slab",
            "waxed_exposed_cut_copper_slab",
            "waxed_weathered_cut_copper_slab",
            "waxed_oxidized_cut_copper_slab",
            "oak_log",
            "spruce_log",
            "birch_log",
            "jungle_log",
            "acacia_log",
            "dark_oak_log",
            "mangrove_log",
            "mangrove_roots",
            "muddy_mangrove_roots",
            "crimson_stem",
            "warped_stem",
            "bamboo_block",
            "stripped_oak_log",
            "stripped_spruce_log",
            "stripped_birch_log",
            "stripped_jungle_log",
            "stripped_acacia_log",
            "stripped_dark_oak_log",
            "stripped_mangrove_log",
            "stripped_crimson_stem",
            "stripped_warped_stem",
            "stripped_oak_wood",
            "stripped_spruce_wood",
            "stripped_birch_wood",
            "stripped_jungle_wood",
            "stripped_acacia_wood",
            "stripped_dark_oak_wood",
            "stripped_mangrove_wood",
            "stripped_crimson_hyphae",
            "stripped_warped_hyphae",
            "stripped_bamboo_block",
            "oak_wood",
            "spruce_wood",
            "birch_wood",
            "jungle_wood",
            "acacia_wood",
            "dark_oak_wood",
            "mangrove_wood",
            "crimson_hyphae",
            "warped_hyphae",
            "oak_leaves",
            "spruce_leaves",
            "birch_leaves",
            "jungle_leaves",
            "acacia_leaves",
            "dark_oak_leaves",
            "mangrove_leaves",
            "azalea_leaves",
            "flowering_azalea_leaves",
            "sponge",
            "wet_sponge",
            "glass",
            "tinted_glass",
            "lapis_block",
            "sandstone",
            "chiseled_sandstone",
            "cut_sandstone",
            "cobweb",
            "grass",
            "fern",
            "azalea",
            "flowering_azalea",
            "dead_bush",
            "seagrass",
            "sea_pickle",
            "white_wool",
            "orange_wool",
            "magenta_wool",
            "light_blue_wool",
            "yellow_wool",
            "lime_wool",
            "pink_wool",
            "gray_wool",
            "light_gray_wool",
            "cyan_wool",
            "purple_wool",
            "blue_wool",
            "brown_wool",
            "green_wool",
            "red_wool",
            "black_wool",
            "dandelion",
            "poppy",
            "blue_orchid",
            "allium",
            "azure_bluet",
            "red_tulip",
            "orange_tulip",
            "white_tulip",
            "pink_tulip",
            "oxeye_daisy",
            "cornflower",
            "lily_of_the_valley",
            "wither_rose",
            "spore_blossom",
            "brown_mushroom",
            "red_mushroom",
            "crimson_fungus",
            "warped_fungus",
            "crimson_roots",
            "warped_roots",
            "nether_sprouts",
            "weeping_vines",
            "twisting_vines",
            "sugar_cane",
            "kelp",
            "moss_carpet",
            "moss_block",
            "hanging_roots",
            "big_dripleaf",
            "small_dripleaf",
            "bamboo",
            "oak_slab",
            "spruce_slab",
            "birch_slab",
            "jungle_slab",
            "acacia_slab",
            "dark_oak_slab",
            "mangrove_slab",
            "bamboo_slab",
            "bamboo_mosaic_slab",
            "crimson_slab",
            "warped_slab",
            "stone_slab",
            "smooth_stone_slab",
            "sandstone_slab",
            "cut_sandstone_slab",
            "petrified_oak_slab",
            "cobblestone_slab",
            "brick_slab",
            "stone_brick_slab",
            "mud_brick_slab",
            "nether_brick_slab",
            "quartz_slab",
            "red_sandstone_slab",
            "cut_red_sandstone_slab",
            "purpur_slab",
            "prismarine_slab",
            "prismarine_brick_slab",
            "dark_prismarine_slab",
            "smooth_quartz",
            "smooth_red_sandstone",
            "smooth_sandstone",
            "smooth_stone",
            "bricks",
            "bookshelf",
            "chiseled_bookshelf",
            "mossy_cobblestone",
            "obsidian",
            "torch",
            "end_rod",
            "chorus_plant",
            "chorus_flower",
            "purpur_block",
            "purpur_pillar",
            "purpur_stairs",
            "spawner",
            "chest",
            "crafting_table",
            "farmland",
            "furnace",
            "ladder",
            "cobblestone_stairs",
            "snow",
            "ice",
            "snow_block",
            "cactus",
            "clay",
            "jukebox",
            "oak_fence",
            "spruce_fence",
            "birch_fence",
            "jungle_fence",
            "acacia_fence",
            "dark_oak_fence",
            "mangrove_fence",
            "bamboo_fence",
            "crimson_fence",
            "warped_fence",
            "pumpkin",
            "carved_pumpkin",
            "jack_o_lantern",
            "netherrack",
            "soul_sand",
            "soul_soil",
            "basalt",
            "polished_basalt",
            "smooth_basalt",
            "soul_torch",
            "glowstone",
            "infested_stone",
            "infested_cobblestone",
            "infested_stone_bricks",
            "infested_mossy_stone_bricks",
            "infested_cracked_stone_bricks",
            "infested_chiseled_stone_bricks",
            "infested_deepslate",
            "stone_bricks",
            "mossy_stone_bricks",
            "cracked_stone_bricks",
            "chiseled_stone_bricks",
            "packed_mud",
            "mud_bricks",
            "deepslate_bricks",
            "cracked_deepslate_bricks",
            "deepslate_tiles",
            "cracked_deepslate_tiles",
            "chiseled_deepslate",
            "reinforced_deepslate",
            "brown_mushroom_block",
            "red_mushroom_block",
            "mushroom_stem",
            "iron_bars",
            "chain",
            "glass_pane",
            "melon",
            "vine",
            "glow_lichen",
            "brick_stairs",
            "stone_brick_stairs",
            "mud_brick_stairs",
            "mycelium",
            "lily_pad",
            "nether_bricks",
            "cracked_nether_bricks",
            "chiseled_nether_bricks",
            "nether_brick_fence",
            "nether_brick_stairs",
            "sculk",
            "sculk_vein",
            "sculk_catalyst",
            "sculk_shrieker",
            "enchanting_table",
            "end_portal_frame",
            "end_stone",
            "end_stone_bricks",
            "dragon_egg",
            "sandstone_stairs",
            "ender_chest",
            "emerald_block",
            "oak_stairs",
            "spruce_stairs",
            "birch_stairs",
            "jungle_stairs",
            "acacia_stairs",
            "dark_oak_stairs",
            "mangrove_stairs",
            "bamboo_stairs",
            "bamboo_mosaic_stairs",
            "crimson_stairs",
            "warped_stairs",
            "command_block",
            "beacon",
            "cobblestone_wall",
            "mossy_cobblestone_wall",
            "brick_wall",
            "prismarine_wall",
            "red_sandstone_wall",
            "mossy_stone_brick_wall",
            "granite_wall",
            "stone_brick_wall",
            "mud_brick_wall",
            "nether_brick_wall",
            "andesite_wall",
            "red_nether_brick_wall",
            "sandstone_wall",
            "end_stone_brick_wall",
            "diorite_wall",
            "blackstone_wall",
            "polished_blackstone_wall",
            "polished_blackstone_brick_wall",
            "cobbled_deepslate_wall",
            "polished_deepslate_wall",
            "deepslate_brick_wall",
            "deepslate_tile_wall",
            "anvil",
            "chipped_anvil",
            "damaged_anvil",
            "chiseled_quartz_block",
            "quartz_block",
            "quartz_bricks",
            "quartz_pillar",
            "quartz_stairs",
            "white_terracotta",
            "orange_terracotta",
            "magenta_terracotta",
            "light_blue_terracotta",
            "yellow_terracotta",
            "lime_terracotta",
            "pink_terracotta",
            "gray_terracotta",
            "light_gray_terracotta",
            "cyan_terracotta",
            "purple_terracotta",
            "blue_terracotta",
            "brown_terracotta",
            "green_terracotta",
            "red_terracotta",
            "black_terracotta",
            "barrier",
            "light",
            "hay_block",
            "white_carpet",
            "orange_carpet",
            "magenta_carpet",
            "light_blue_carpet",
            "yellow_carpet",
            "lime_carpet",
            "pink_carpet",
            "gray_carpet",
            "light_gray_carpet",
            "cyan_carpet",
            "purple_carpet",
            "blue_carpet",
            "brown_carpet",
            "green_carpet",
            "red_carpet",
            "black_carpet",
            "terracotta",
            "packed_ice",
            "dirt_path",
            "sunflower",
            "lilac",
            "rose_bush",
            "peony",
            "tall_grass",
            "large_fern",
            "white_stained_glass",
            "orange_stained_glass",
            "magenta_stained_glass",
            "light_blue_stained_glass",
            "yellow_stained_glass",
            "lime_stained_glass",
            "pink_stained_glass",
            "gray_stained_glass",
            "light_gray_stained_glass",
            "cyan_stained_glass",
            "purple_stained_glass",
            "blue_stained_glass",
            "brown_stained_glass",
            "green_stained_glass",
            "red_stained_glass",
            "black_stained_glass",
            "white_stained_glass_pane",
            "orange_stained_glass_pane",
            "magenta_stained_glass_pane",
            "light_blue_stained_glass_pane",
            "yellow_stained_glass_pane",
            "lime_stained_glass_pane",
            "pink_stained_glass_pane",
            "gray_stained_glass_pane",
            "light_gray_stained_glass_pane",
            "cyan_stained_glass_pane",
            "purple_stained_glass_pane",
            "blue_stained_glass_pane",
            "brown_stained_glass_pane",
            "green_stained_glass_pane",
            "red_stained_glass_pane",
            "black_stained_glass_pane",
            "prismarine",
            "prismarine_bricks",
            "dark_prismarine",
            "prismarine_stairs",
            "prismarine_brick_stairs",
            "dark_prismarine_stairs",
            "sea_lantern",
            "red_sandstone",
            "chiseled_red_sandstone",
            "cut_red_sandstone",
            "red_sandstone_stairs",
            "repeating_command_block",
            "chain_command_block",
            "magma_block",
            "nether_wart_block",
            "warped_wart_block",
            "red_nether_bricks",
            "bone_block",
            "structure_void",
            "shulker_box",
            "white_shulker_box",
            "orange_shulker_box",
            "magenta_shulker_box",
            "light_blue_shulker_box",
            "yellow_shulker_box",
            "lime_shulker_box",
            "pink_shulker_box",
            "gray_shulker_box",
            "light_gray_shulker_box",
            "cyan_shulker_box",
            "purple_shulker_box",
            "blue_shulker_box",
            "brown_shulker_box",
            "green_shulker_box",
            "red_shulker_box",
            "black_shulker_box",
            "white_glazed_terracotta",
            "orange_glazed_terracotta",
            "magenta_glazed_terracotta",
            "light_blue_glazed_terracotta",
            "yellow_glazed_terracotta",
            "lime_glazed_terracotta",
            "pink_glazed_terracotta",
            "gray_glazed_terracotta",
            "light_gray_glazed_terracotta",
            "cyan_glazed_terracotta",
            "purple_glazed_terracotta",
            "blue_glazed_terracotta",
            "brown_glazed_terracotta",
            "green_glazed_terracotta",
            "red_glazed_terracotta",
            "black_glazed_terracotta",
            "white_concrete",
            "orange_concrete",
            "magenta_concrete",
            "light_blue_concrete",
            "yellow_concrete",
            "lime_concrete",
            "pink_concrete",
            "gray_concrete",
            "light_gray_concrete",
            "cyan_concrete",
            "purple_concrete",
            "blue_concrete",
            "brown_concrete",
            "green_concrete",
            "red_concrete",
            "black_concrete",
            "white_concrete_powder",
            "orange_concrete_powder",
            "magenta_concrete_powder",
            "light_blue_concrete_powder",
            "yellow_concrete_powder",
            "lime_concrete_powder",
            "pink_concrete_powder",
            "gray_concrete_powder",
            "light_gray_concrete_powder",
            "cyan_concrete_powder",
            "purple_concrete_powder",
            "blue_concrete_powder",
            "brown_concrete_powder",
            "green_concrete_powder",
            "red_concrete_powder",
            "black_concrete_powder",
            "turtle_egg",
            "dead_tube_coral_block",
            "dead_brain_coral_block",
            "dead_bubble_coral_block",
            "dead_fire_coral_block",
            "dead_horn_coral_block",
            "tube_coral_block",
            "brain_coral_block",
            "bubble_coral_block",
            "fire_coral_block",
            "horn_coral_block",
            "tube_coral",
            "brain_coral",
            "bubble_coral",
            "fire_coral",
            "horn_coral",
            "dead_brain_coral",
            "dead_bubble_coral",
            "dead_fire_coral",
            "dead_horn_coral",
            "dead_tube_coral",
            "tube_coral_fan",
            "brain_coral_fan",
            "bubble_coral_fan",
            "fire_coral_fan",
            "horn_coral_fan",
            "dead_tube_coral_fan",
            "dead_brain_coral_fan",
            "dead_bubble_coral_fan",
            "dead_fire_coral_fan",
            "dead_horn_coral_fan",
            "blue_ice",
            "conduit",
            "polished_granite_stairs",
            "smooth_red_sandstone_stairs",
            "mossy_stone_brick_stairs",
            "polished_diorite_stairs",
            "mossy_cobblestone_stairs",
            "end_stone_brick_stairs",
            "stone_stairs",
            "smooth_sandstone_stairs",
            "smooth_quartz_stairs",
            "granite_stairs",
            "andesite_stairs",
            "red_nether_brick_stairs",
            "polished_andesite_stairs",
            "diorite_stairs",
            "cobbled_deepslate_stairs",
            "polished_deepslate_stairs",
            "deepslate_brick_stairs",
            "deepslate_tile_stairs",
            "polished_granite_slab",
            "smooth_red_sandstone_slab",
            "mossy_stone_brick_slab",
            "polished_diorite_slab",
            "mossy_cobblestone_slab",
            "end_stone_brick_slab",
            "smooth_sandstone_slab",
            "smooth_quartz_slab",
            "granite_slab",
            "andesite_slab",
            "red_nether_brick_slab",
            "polished_andesite_slab",
            "diorite_slab",
            "cobbled_deepslate_slab",
            "polished_deepslate_slab",
            "deepslate_brick_slab",
            "deepslate_tile_slab",
            "scaffolding",
            "redstone",
            "redstone_torch",
            "redstone_block",
            "repeater",
            "comparator",
            "piston",
            "sticky_piston",
            "slime_block",
            "honey_block",
            "observer",
            "hopper",
            "dispenser",
            "dropper",
            "lectern",
            "target",
            "lever",
            "lightning_rod",
            "daylight_detector",
            "sculk_sensor",
            "tripwire_hook",
            "trapped_chest",
            "tnt",
            "redstone_lamp",
            "note_block",
            "stone_button",
            "polished_blackstone_button",
            "oak_button",
            "spruce_button",
            "birch_button",
            "jungle_button",
            "acacia_button",
            "dark_oak_button",
            "mangrove_button",
            "bamboo_button",
            "crimson_button",
            "warped_button",
            "stone_pressure_plate",
            "polished_blackstone_pressure_plate",
            "light_weighted_pressure_plate",
            "heavy_weighted_pressure_plate",
            "oak_pressure_plate",
            "spruce_pressure_plate",
            "birch_pressure_plate",
            "jungle_pressure_plate",
            "acacia_pressure_plate",
            "dark_oak_pressure_plate",
            "mangrove_pressure_plate",
            "bamboo_pressure_plate",
            "crimson_pressure_plate",
            "warped_pressure_plate",
            "iron_door",
            "oak_door",
            "spruce_door",
            "birch_door",
            "jungle_door",
            "acacia_door",
            "dark_oak_door",
            "mangrove_door",
            "bamboo_door",
            "crimson_door",
            "warped_door",
            "iron_trapdoor",
            "oak_trapdoor",
            "spruce_trapdoor",
            "birch_trapdoor",
            "jungle_trapdoor",
            "acacia_trapdoor",
            "dark_oak_trapdoor",
            "mangrove_trapdoor",
            "bamboo_trapdoor",
            "crimson_trapdoor",
            "warped_trapdoor",
            "oak_fence_gate",
            "spruce_fence_gate",
            "birch_fence_gate",
            "jungle_fence_gate",
            "acacia_fence_gate",
            "dark_oak_fence_gate",
            "mangrove_fence_gate",
            "bamboo_fence_gate",
            "crimson_fence_gate",
            "warped_fence_gate",
            "powered_rail",
            "detector_rail",
            "rail",
            "activator_rail",
            "saddle",
            "minecart",
            "chest_minecart",
            "furnace_minecart",
            "tnt_minecart",
            "hopper_minecart",
            "carrot_on_a_stick",
            "warped_fungus_on_a_stick",
            "elytra",
            "oak_boat",
            "oak_chest_boat",
            "spruce_boat",
            "spruce_chest_boat",
            "birch_boat",
            "birch_chest_boat",
            "jungle_boat",
            "jungle_chest_boat",
            "acacia_boat",
            "acacia_chest_boat",
            "dark_oak_boat",
            "dark_oak_chest_boat",
            "mangrove_boat",
            "mangrove_chest_boat",
            "bamboo_raft",
            "bamboo_chest_raft",
            "structure_block",
            "jigsaw",
            "turtle_helmet",
            "scute",
            "flint_and_steel",
            "apple",
            "bow",
            "arrow",
            "coal",
            "charcoal",
            "diamond",
            "emerald",
            "lapis_lazuli",
            "quartz",
            "amethyst_shard",
            "raw_iron",
            "iron_ingot",
            "raw_copper",
            "copper_ingot",
            "raw_gold",
            "gold_ingot",
            "netherite_ingot",
            "netherite_scrap",
            "wooden_sword",
            "wooden_shovel",
            "wooden_pickaxe",
            "wooden_axe",
            "wooden_hoe",
            "stone_sword",
            "stone_shovel",
            "stone_pickaxe",
            "stone_axe",
            "stone_hoe",
            "golden_sword",
            "golden_shovel",
            "golden_pickaxe",
            "golden_axe",
            "golden_hoe",
            "iron_sword",
            "iron_shovel",
            "iron_pickaxe",
            "iron_axe",
            "iron_hoe",
            "diamond_sword",
            "diamond_shovel",
            "diamond_pickaxe",
            "diamond_axe",
            "diamond_hoe",
            "netherite_sword",
            "netherite_shovel",
            "netherite_pickaxe",
            "netherite_axe",
            "netherite_hoe",
            "stick",
            "bowl",
            "mushroom_stew",
            "string",
            "feather",
            "gunpowder",
            "wheat_seeds",
            "wheat",
            "bread",
            "leather_helmet",
            "leather_chestplate",
            "leather_leggings",
            "leather_boots",
            "chainmail_helmet",
            "chainmail_chestplate",
            "chainmail_leggings",
            "chainmail_boots",
            "iron_helmet",
            "iron_chestplate",
            "iron_leggings",
            "iron_boots",
            "diamond_helmet",
            "diamond_chestplate",
            "diamond_leggings",
            "diamond_boots",
            "golden_helmet",
            "golden_chestplate",
            "golden_leggings",
            "golden_boots",
            "netherite_helmet",
            "netherite_chestplate",
            "netherite_leggings",
            "netherite_boots",
            "flint",
            "porkchop",
            "cooked_porkchop",
            "painting",
            "golden_apple",
            "enchanted_golden_apple",
            "oak_sign",
            "spruce_sign",
            "birch_sign",
            "jungle_sign",
            "acacia_sign",
            "dark_oak_sign",
            "mangrove_sign",
            "bamboo_sign",
            "crimson_sign",
            "warped_sign",
            "oak_hanging_sign",
            "spruce_hanging_sign",
            "birch_hanging_sign",
            "jungle_hanging_sign",
            "acacia_hanging_sign",
            "dark_oak_hanging_sign",
            "mangrove_hanging_sign",
            "bamboo_hanging_sign",
            "crimson_hanging_sign",
            "warped_hanging_sign",
            "bucket",
            "water_bucket",
            "lava_bucket",
            "powder_snow_bucket",
            "snowball",
            "leather",
            "milk_bucket",
            "pufferfish_bucket",
            "salmon_bucket",
            "cod_bucket",
            "tropical_fish_bucket",
            "axolotl_bucket",
            "tadpole_bucket",
            "brick",
            "clay_ball",
            "dried_kelp_block",
            "paper",
            "book",
            "slime_ball",
            "egg",
            "compass",
            "recovery_compass",
            "bundle",
            "fishing_rod",
            "clock",
            "spyglass",
            "glowstone_dust",
            "cod",
            "salmon",
            "tropical_fish",
            "pufferfish",
            "cooked_cod",
            "cooked_salmon",
            "ink_sac",
            "glow_ink_sac",
            "cocoa_beans",
            "white_dye",
            "orange_dye",
            "magenta_dye",
            "light_blue_dye",
            "yellow_dye",
            "lime_dye",
            "pink_dye",
            "gray_dye",
            "light_gray_dye",
            "cyan_dye",
            "purple_dye",
            "blue_dye",
            "brown_dye",
            "green_dye",
            "red_dye",
            "black_dye",
            "bone_meal",
            "bone",
            "sugar",
            "cake",
            "white_bed",
            "orange_bed",
            "magenta_bed",
            "light_blue_bed",
            "yellow_bed",
            "lime_bed",
            "pink_bed",
            "gray_bed",
            "light_gray_bed",
            "cyan_bed",
            "purple_bed",
            "blue_bed",
            "brown_bed",
            "green_bed",
            "red_bed",
            "black_bed",
            "cookie",
            "filled_map",
            "shears",
            "melon_slice",
            "dried_kelp",
            "pumpkin_seeds",
            "melon_seeds",
            "beef",
            "cooked_beef",
            "chicken",
            "cooked_chicken",
            "rotten_flesh",
            "ender_pearl",
            "blaze_rod",
            "ghast_tear",
            "gold_nugget",
            "nether_wart",
            "potion",
            "glass_bottle",
            "spider_eye",
            "fermented_spider_eye",
            "blaze_powder",
            "magma_cream",
            "brewing_stand",
            "cauldron",
            "ender_eye",
            "glistering_melon_slice",
            "allay_spawn_egg",
            "axolotl_spawn_egg",
            "bat_spawn_egg",
            "bee_spawn_egg",
            "blaze_spawn_egg",
            "cat_spawn_egg",
            "camel_spawn_egg",
            "cave_spider_spawn_egg",
            "chicken_spawn_egg",
            "cod_spawn_egg",
            "cow_spawn_egg",
            "creeper_spawn_egg",
            "dolphin_spawn_egg",
            "donkey_spawn_egg",
            "drowned_spawn_egg",
            "elder_guardian_spawn_egg",
            "ender_dragon_spawn_egg",
            "enderman_spawn_egg",
            "endermite_spawn_egg",
            "evoker_spawn_egg",
            "fox_spawn_egg",
            "frog_spawn_egg",
            "ghast_spawn_egg",
            "glow_squid_spawn_egg",
            "goat_spawn_egg",
            "guardian_spawn_egg",
            "hoglin_spawn_egg",
            "horse_spawn_egg",
            "husk_spawn_egg",
            "iron_golem_spawn_egg",
            "llama_spawn_egg",
            "magma_cube_spawn_egg",
            "mooshroom_spawn_egg",
            "mule_spawn_egg",
            "ocelot_spawn_egg",
            "panda_spawn_egg",
            "parrot_spawn_egg",
            "phantom_spawn_egg",
            "pig_spawn_egg",
            "piglin_spawn_egg",
            "piglin_brute_spawn_egg",
            "pillager_spawn_egg",
            "polar_bear_spawn_egg",
            "pufferfish_spawn_egg",
            "rabbit_spawn_egg",
            "ravager_spawn_egg",
            "salmon_spawn_egg",
            "sheep_spawn_egg",
            "shulker_spawn_egg",
            "silverfish_spawn_egg",
            "skeleton_spawn_egg",
            "skeleton_horse_spawn_egg",
            "slime_spawn_egg",
            "snow_golem_spawn_egg",
            "spider_spawn_egg",
            "squid_spawn_egg",
            "stray_spawn_egg",
            "strider_spawn_egg",
            "tadpole_spawn_egg",
            "trader_llama_spawn_egg",
            "tropical_fish_spawn_egg",
            "turtle_spawn_egg",
            "vex_spawn_egg",
            "villager_spawn_egg",
            "vindicator_spawn_egg",
            "wandering_trader_spawn_egg",
            "warden_spawn_egg",
            "witch_spawn_egg",
            "wither_spawn_egg",
            "wither_skeleton_spawn_egg",
            "wolf_spawn_egg",
            "zoglin_spawn_egg",
            "zombie_spawn_egg",
            "zombie_horse_spawn_egg",
            "zombie_villager_spawn_egg",
            "zombified_piglin_spawn_egg",
            "experience_bottle",
            "fire_charge",
            "writable_book",
            "written_book",
            "item_frame",
            "glow_item_frame",
            "flower_pot",
            "carrot",
            "potato",
            "baked_potato",
            "poisonous_potato",
            "map",
            "golden_carrot",
            "skeleton_skull",
            "wither_skeleton_skull",
            "player_head",
            "zombie_head",
            "creeper_head",
            "dragon_head",
            "piglin_head",
            "nether_star",
            "pumpkin_pie",
            "firework_rocket",
            "firework_star",
            "enchanted_book",
            "nether_brick",
            "prismarine_shard",
            "prismarine_crystals",
            "rabbit",
            "cooked_rabbit",
            "rabbit_stew",
            "rabbit_foot",
            "rabbit_hide",
            "armor_stand",
            "iron_horse_armor",
            "golden_horse_armor",
            "diamond_horse_armor",
            "leather_horse_armor",
            "lead",
            "name_tag",
            "command_block_minecart",
            "mutton",
            "cooked_mutton",
            "white_banner",
            "orange_banner",
            "magenta_banner",
            "light_blue_banner",
            "yellow_banner",
            "lime_banner",
            "pink_banner",
            "gray_banner",
            "light_gray_banner",
            "cyan_banner",
            "purple_banner",
            "blue_banner",
            "brown_banner",
            "green_banner",
            "red_banner",
            "black_banner",
            "end_crystal",
            "chorus_fruit",
            "popped_chorus_fruit",
            "beetroot",
            "beetroot_seeds",
            "beetroot_soup",
            "dragon_breath",
            "splash_potion",
            "spectral_arrow",
            "tipped_arrow",
            "lingering_potion",
            "shield",
            "totem_of_undying",
            "shulker_shell",
            "iron_nugget",
            "knowledge_book",
            "debug_stick",
            "music_disc_13",
            "music_disc_cat",
            "music_disc_blocks",
            "music_disc_chirp",
            "music_disc_far",
            "music_disc_mall",
            "music_disc_mellohi",
            "music_disc_stal",
            "music_disc_strad",
            "music_disc_ward",
            "music_disc_11",
            "music_disc_wait",
            "music_disc_otherside",
            "music_disc_5",
            "music_disc_pigstep",
            "disc_fragment_5",
            "trident",
            "phantom_membrane",
            "nautilus_shell",
            "heart_of_the_sea",
            "crossbow",
            "suspicious_stew",
            "loom",
            "flower_banner_pattern",
            "creeper_banner_pattern",
            "skull_banner_pattern",
            "mojang_banner_pattern",
            "globe_banner_pattern",
            "piglin_banner_pattern",
            "goat_horn",
            "composter",
            "barrel",
            "smoker",
            "blast_furnace",
            "cartography_table",
            "fletching_table",
            "grindstone",
            "smithing_table",
            "stonecutter",
            "bell",
            "lantern",
            "soul_lantern",
            "sweet_berries",
            "glow_berries",
            "campfire",
            "soul_campfire",
            "shroomlight",
            "honeycomb",
            "bee_nest",
            "beehive",
            "honey_bottle",
            "honeycomb_block",
            "lodestone",
            "crying_obsidian",
            "blackstone",
            "blackstone_slab",
            "blackstone_stairs",
            "gilded_blackstone",
            "polished_blackstone",
            "polished_blackstone_slab",
            "polished_blackstone_stairs",
            "chiseled_polished_blackstone",
            "polished_blackstone_bricks",
            "polished_blackstone_brick_slab",
            "polished_blackstone_brick_stairs",
            "cracked_polished_blackstone_bricks",
            "respawn_anchor",
            "candle",
            "white_candle",
            "orange_candle",
            "magenta_candle",
            "light_blue_candle",
            "yellow_candle",
            "lime_candle",
            "pink_candle",
            "gray_candle",
            "light_gray_candle",
            "cyan_candle",
            "purple_candle",
            "blue_candle",
            "brown_candle",
            "green_candle",
            "red_candle",
            "black_candle",
            "small_amethyst_bud",
            "medium_amethyst_bud",
            "large_amethyst_bud",
            "amethyst_cluster",
            "pointed_dripstone",
            "ochre_froglight",
            "verdant_froglight",
            "pearlescent_froglight",
            "frogspawn",
            "echo_shard",
            "water",
            "lava",
            "tall_seagrass",
            "piston_head",
            "moving_piston",
            "wall_torch",
            "fire",
            "soul_fire",
            "redstone_wire",
            "oak_wall_sign",
            "spruce_wall_sign",
            "birch_wall_sign",
            "acacia_wall_sign",
            "jungle_wall_sign",
            "dark_oak_wall_sign",
            "mangrove_wall_sign",
            "bamboo_wall_sign",
            "oak_wall_hanging_sign",
            "spruce_wall_hanging_sign",
            "birch_wall_hanging_sign",
            "acacia_wall_hanging_sign",
            "jungle_wall_hanging_sign",
            "dark_oak_wall_hanging_sign",
            "mangrove_wall_hanging_sign",
            "crimson_wall_hanging_sign",
            "warped_wall_hanging_sign",
            "bamboo_wall_hanging_sign",
            "redstone_wall_torch",
            "soul_wall_torch",
            "nether_portal",
            "attached_pumpkin_stem",
            "attached_melon_stem",
            "pumpkin_stem",
            "melon_stem",
            "water_cauldron",
            "lava_cauldron",
            "powder_snow_cauldron",
            "end_portal",
            "cocoa",
            "tripwire",
            "potted_oak_sapling",
            "potted_spruce_sapling",
            "potted_birch_sapling",
            "potted_jungle_sapling",
            "potted_acacia_sapling",
            "potted_dark_oak_sapling",
            "potted_mangrove_propagule",
            "potted_fern",
            "potted_dandelion",
            "potted_poppy",
            "potted_blue_orchid",
            "potted_allium",
            "potted_azure_bluet",
            "potted_red_tulip",
            "potted_orange_tulip",
            "potted_white_tulip",
            "potted_pink_tulip",
            "potted_oxeye_daisy",
            "potted_cornflower",
            "potted_lily_of_the_valley",
            "potted_wither_rose",
            "potted_red_mushroom",
            "potted_brown_mushroom",
            "potted_dead_bush",
            "potted_cactus",
            "carrots",
            "potatoes",
            "skeleton_wall_skull",
            "wither_skeleton_wall_skull",
            "zombie_wall_head",
            "player_wall_head",
            "creeper_wall_head",
            "dragon_wall_head",
            "piglin_wall_head",
            "white_wall_banner",
            "orange_wall_banner",
            "magenta_wall_banner",
            "light_blue_wall_banner",
            "yellow_wall_banner",
            "lime_wall_banner",
            "pink_wall_banner",
            "gray_wall_banner",
            "light_gray_wall_banner",
            "cyan_wall_banner",
            "purple_wall_banner",
            "blue_wall_banner",
            "brown_wall_banner",
            "green_wall_banner",
            "red_wall_banner",
            "black_wall_banner",
            "beetroots",
            "end_gateway",
            "frosted_ice",
            "kelp_plant",
            "dead_tube_coral_wall_fan",
            "dead_brain_coral_wall_fan",
            "dead_bubble_coral_wall_fan",
            "dead_fire_coral_wall_fan",
            "dead_horn_coral_wall_fan",
            "tube_coral_wall_fan",
            "brain_coral_wall_fan",
            "bubble_coral_wall_fan",
            "fire_coral_wall_fan",
            "horn_coral_wall_fan",
            "bamboo_sapling",
            "potted_bamboo",
            "void_air",
            "cave_air",
            "bubble_column",
            "sweet_berry_bush",
            "weeping_vines_plant",
            "twisting_vines_plant",
            "crimson_wall_sign",
            "warped_wall_sign",
            "potted_crimson_fungus",
            "potted_warped_fungus",
            "potted_crimson_roots",
            "potted_warped_roots",
            "candle_cake",
            "white_candle_cake",
            "orange_candle_cake",
            "magenta_candle_cake",
            "light_blue_candle_cake",
            "yellow_candle_cake",
            "lime_candle_cake",
            "pink_candle_cake",
            "gray_candle_cake",
            "light_gray_candle_cake",
            "cyan_candle_cake",
            "purple_candle_cake",
            "blue_candle_cake",
            "brown_candle_cake",
            "green_candle_cake",
            "red_candle_cake",
            "black_candle_cake",
            "powder_snow",
            "cave_vines",
            "cave_vines_plant",
            "big_dripleaf_stem",
            "potted_azalea_bush",
            "potted_flowering_azalea_bush"
        ]},
        "obj-com-volmit-iris-engine-object-iristree": {"anyOf": [
            {
                "description": "Tree replace options for this object placer",
                "type": "object",
                "properties": {
                    "treeTypes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/enum-org-bukkit-treetype"},
                        "description": "treeTypes\nThe types of trees overwritten by this object\n   \nList of TreeTypes\n\n* At least one entry must be defined, or just remove this list.\nMust be a valid TreeType (use ctrl+space for auto complete!)"
                    },
                    "anyTree": {
                        "type": "boolean",
                        "description": "anyTree\nIf enabled, overrides any TreeType\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sizes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristreesize"},
                        "description": "sizes\nThe size of the square of saplings this applies to (2 means a 2 * 2 sapling area)\n   \nList of TreeSizes (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "anySize": {
                        "type": "boolean",
                        "description": "anySize\nIf enabled, overrides trees of any size\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscarving": {"anyOf": [
            {
                "description": "Represents a carving configuration",
                "type": "object",
                "properties": {
                    "caves": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscaveplacer"},
                        "description": "caves\nDefine cave placers\n   \nList of CavePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "ravines": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisravineplacer"},
                        "description": "ravines\nDefine ravine placers\n   \nList of RavinePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "elipsoids": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriselipsoid"},
                        "description": "elipsoids\nDefine elipsoids\n   \nList of Elipsoids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "spheres": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irissphere"},
                        "description": "spheres\nDefine spheres\n   \nList of Spheres (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "pyramids": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irispyramid"},
                        "description": "pyramids\nDefine pyramids\n   \nList of Pyramids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzcaves": {"enum": [
            "lush/tubes",
            "sandstone/main",
            "drip/main",
            "deep/elongated",
            "swamp/main",
            "rocky/main",
            "jungle/main",
            "jungle/small",
            "granite/small",
            "red-sandstone/main",
            "sandstone/small",
            "drip/small",
            "calcite/small",
            "mixed-sandstone/main",
            "red-sandstone/small",
            "volcanic/small",
            "amethyst/small",
            "simple/main",
            "deep/main",
            "simple/small",
            "volcanic/main",
            "ice/small",
            "rocky/tubes",
            "ice/main",
            "swamp/small",
            "lush/small",
            "lush/main",
            "calcite/main",
            "rocky/small",
            "mixed-sandstone/small"
        ]},
        "enum-snippet-fluid-bodies": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisenchantment": {"anyOf": [
            {
                "description": "Represents an enchantment & level",
                "type": "object",
                "properties": {
                    "enchantment": {
                        "type": "string",
                        "$ref": "#/definitions/enum-enchantment",
                        "description": "enchantment\nThe enchantment\n   \nEnchantment Type\n\nMust be a valid Enchantment Type (use ctrl+space for auto complete!)"
                    },
                    "minLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minLevel\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxLevel\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this enchantment is applied (0 to 1)\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-style": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-objectplacemode": {"oneOf": [
            {
                "const": "CENTER_HEIGHT",
                "description": "The default place mode. This mode picks a center point (where the center of the object will be) and takes the height. That height is used for the whole object."
            },
            {
                "const": "MAX_HEIGHT",
                "description": "Samples a lot of points where the object will cover (horizontally) and picks the highest height, that height is then used to place the object. This mode is useful for preventing any part of your object from being buried though it will float off of cliffs."
            },
            {
                "const": "FAST_MAX_HEIGHT",
                "description": "Samples only 4 points where the object will cover (horizontally) and picks the highest height, that height is then used to place the object. This mode is useful for preventing any part of your object from being buried though it will float off of cliffs.\""
            },
            {
                "const": "MIN_HEIGHT",
                "description": "Samples a lot of points where the object will cover (horizontally) and picks the lowest height, that height is then used to place the object. This mode is useful for preventing any part of your object from overhanging a cliff though it gets buried a lot"
            },
            {
                "const": "FAST_MIN_HEIGHT",
                "description": "Samples only 4 points where the object will cover (horizontally) and picks the lowest height, that height is then used to place the object. This mode is useful for preventing any part of your object from overhanging a cliff though it gets buried a lot"
            },
            {
                "const": "STILT",
                "description": "Stilting is MAX_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "FAST_STILT",
                "description": "Just like stilting but very inaccurate. Useful for stilting a lot of objects without too much care on accuracy (you can use the over-stilt value to force stilts under ground further)"
            },
            {
                "const": "MIN_STILT",
                "description": "Stilting is MIN_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "FAST_MIN_STILT",
                "description": "Just like MIN_STILT but very inaccurate. Useful for stilting a lot of objects without too much care on accuracy (you can use the over-stilt value to force stilts under ground further)"
            },
            {
                "const": "CENTER_STILT",
                "description": "Stilting is CENTER_HEIGHT but it repeats the bottom most block of your object until it hits the surface. This is expensive because it has to first sample every height value for each x,z position of your object. Avoid using this unless its structures for performance reasons."
            },
            {
                "const": "PAINT",
                "description": "Samples the height of the terrain at every x,z position of your object and pushes it down to the surface. It's pretty much like a melt function over the terrain."
            }
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisweather": {"oneOf": [
            {
                "const": "NONE",
                "description": "Represents when weather is not causing downfall"
            },
            {
                "const": "DOWNFALL",
                "description": "Represents rain or snow"
            },
            {
                "const": "DOWNFALL_WITH_THUNDER",
                "description": "Represents rain or snow with thunder"
            },
            {
                "const": "ANY",
                "description": "Any weather"
            }
        ]},
        "enum-enchantment": {"enum": [
            "fire_protection",
            "sharpness",
            "flame",
            "soul_speed",
            "aqua_affinity",
            "punch",
            "loyalty",
            "depth_strider",
            "vanishing_curse",
            "unbreaking",
            "knockback",
            "luck_of_the_sea",
            "binding_curse",
            "fortune",
            "protection",
            "efficiency",
            "mending",
            "frost_walker",
            "lure",
            "looting",
            "piercing",
            "blast_protection",
            "smite",
            "multishot",
            "swift_sneak",
            "fire_aspect",
            "channeling",
            "sweeping",
            "thorns",
            "bane_of_arthropods",
            "respiration",
            "riptide",
            "silk_touch",
            "quick_charge",
            "projectile_protection",
            "impaling",
            "feather_falling",
            "power",
            "infinity"
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectloot": {"anyOf": [
            {
                "description": "Represents loot within this object or jigsaw piece",
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "filter\nThe list of blocks this loot table should apply to\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nExactly match the block data or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "name": {
                        "type": "string",
                        "$ref": "#/definitions/erzloot",
                        "description": "name\nThe loot table name\n   \nIris Loot\n\nMust be a valid loot (use ctrl+space for auto complete!)"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "weight\nThe weight of this loot table being chosen\n   \nInteger\n\n    \n* Default Value is 1"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisblockdrops": {"anyOf": [
            {
                "description": "Represents a block drop list",
                "type": "object",
                "properties": {
                    "blocks": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "blocks\nThe blocks that drop loot\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "exactBlocks": {
                        "type": "boolean",
                        "description": "exactBlocks\nIf exact blocks is set to true, minecraft:barrel[axis=x] will only drop for that axis. When exact is false (default) any barrel will drop the defined drops.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "drops": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot"},
                        "description": "drops\nAdd in specific items to drop\n   \nList of Loots (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "skipParents": {
                        "type": "boolean",
                        "description": "skipParents\nIf this is in a biome, setting skipParents to true will ignore the drops in the region and dimension for this block type. The default (false) will allow all three nodes to fire and add to a list of drops.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "replaceVanillaDrops": {
                        "type": "boolean",
                        "description": "replaceVanillaDrops\nRemoves the default vanilla block drops and only drops the given items & any parent loot tables specified for this block type.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisblockdata": {
            "description": "Represents Block Data",
            "type": "object",
            "properties": {
                "preprocessors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzscripts"},
                    "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
                },
                "block": {
                    "type": "string",
                    "$ref": "#/definitions/enum-block-type",
                    "description": "block\nThe block to use\n   \nBlock Type\n\n    \n* Default Value is air\nMust be a valid Block Type (use ctrl+space for auto complete!)"
                },
                "debug": {
                    "type": "boolean",
                    "description": "debug\nDebug this block by printing it to the console when it's used. Must have debug turned on in settings.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "weight": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000,
                    "description": "weight\nThe weight is used when this block data is inside of a list of blockdata. A weight of two is just as if you placed two of the same block data values in the same list making it more common when randomly picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1\n* Maximum allowed is 1000"
                },
                "backup": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata",
                    "description": "backup\nIf the block cannot be created on this version, Iris will attempt to use this backup block data instead.\n   \nBlockData (Object)\nRepresents Block Data"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                    "description": "data\nOptional properties for this block data such as 'waterlogged': true\n   \nKMap (Object)\n\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            }
        },
        "oneof-enum-com-volmit-iris-engine-object-noisestyle": {"oneOf": [
            {
                "const": "STATIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BILINEAR",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BICUBIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_HERMITE",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "IRIS",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "CLOVER",
                "description": "Clover Noise"
            },
            {
                "const": "CLOVER_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BICUBIC",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "VASCULAR",
                "description": "Vascular noise gets higher as the position nears a cell border."
            },
            {
                "const": "FLAT",
                "description": "It always returns 0.5"
            },
            {
                "const": "CELLULAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BICUBIC",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "NOWHERE",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CELLULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CLOVER",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SIMPLEX",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_GLOB",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_VASCULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CUBIC",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SUPERFRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_FRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "IRIS_DOUBLE",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_THICK",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_HALF",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise."
            },
            {
                "const": "FRACTAL_SMOKE",
                "description": "Very Detailed smoke using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "VASCULAR_THIN",
                "description": "Thinner Veins."
            },
            {
                "const": "SIMPLEX_CELLS",
                "description": "Cells of simplex noise"
            },
            {
                "const": "SIMPLEX_VASCULAR",
                "description": "Veins of simplex noise"
            },
            {
                "const": "FRACTAL_WATER",
                "description": "Very Detailed fluid using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "PERLIN",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_HALF",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_DOUBLE",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_THICK",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise. 2 Octaves"
            },
            {
                "const": "FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_HALF",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_HALF",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_THICK",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_THICK",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. Single octave."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "BIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 2 octaves"
            },
            {
                "const": "TRIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 3 octaves"
            },
            {
                "const": "QUADOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 4 octaves"
            },
            {
                "const": "QUINTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 5 octaves"
            },
            {
                "const": "SEXOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 6 octaves"
            },
            {
                "const": "SEPTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 7 octaves"
            },
            {
                "const": "OCTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 8 octaves"
            },
            {
                "const": "NONOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 9 octaves"
            },
            {
                "const": "VIGOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 10 octaves"
            },
            {
                "const": "GLOB",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_HALF",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_DOUBLE",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_THICK",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "CUBIC",
                "description": "Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_THICK",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_HALF",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_DOUBLE",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "BIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 2 Octaves"
            },
            {
                "const": "TRIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 3 Octaves"
            },
            {
                "const": "QUADOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 4 Octaves"
            },
            {
                "const": "CUBIC_IRIS",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_HALF",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_DOUBLE",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_THICK",
                "description": "Cubic Noise"
            },
            {
                "const": "CELLULAR_IRIS",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_THICK",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_DOUBLE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_HALF",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_HEIGHT",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell"
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_DOUBLE",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_THICK",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_HALF",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "VASCULAR_IRIS",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_DOUBLE",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_THICK",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_HALF",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            }
        ]},
        "erzmarkers": {"enum": [
            "pillager",
            "skelepirate",
            "elderguardian",
            "Woodland_Mansion",
            "dank",
            "villager",
            "pillager-cage",
            "igloo-villager",
            "guardian",
            "swamp-hut",
            "igloo-zombievillager"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-carvingmode": {"oneOf": [
            {
                "const": "SURFACE_ONLY",
                "description": "Only place this object on surfaces (NOT under carvings)"
            },
            {
                "const": "CARVING_ONLY",
                "description": "Only place this object under carvings (NOT on the surface)"
            },
            {
                "const": "ANYWHERE",
                "description": "This object can place anywhere"
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisworm": {"anyOf": [
            {
                "description": "Generate worms",
                "type": "object",
                "properties": {
                    "xStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "maxDistance": {
                        "type": "integer",
                        "description": "maxDistance\nThe max block distance this worm can travel from its start. This can have performance implications at ranges over 1,000 blocks but it's not too serious, test.\n   \nInteger\n\n    \n* Default Value is 128"
                    },
                    "maxIterations": {
                        "type": "integer",
                        "description": "maxIterations\nThe iterations this worm can make\n   \nInteger\n\n    \n* Default Value is 512"
                    },
                    "allowLoops": {
                        "type": "boolean",
                        "description": "allowLoops\nBy default if a worm loops back into itself, it stops at that point and does not continue. This is an optimization, to prevent this turn this option on.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "girth": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisoregenerator": {
            "description": "Ore Layer",
            "type": "object",
            "properties": {
                "palette": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                            "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-palette",
                            "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "chanceStyle": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                            "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-style",
                            "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "generateSurface": {
                    "type": "boolean",
                    "description": "generateSurface\nWill ores generate on the surface of the terrain layer\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "threshold": {
                    "type": "number",
                    "description": "threshold\nThreshold for rate of generation\n   \nNumber\n\n    \n* Default Value is 0.5"
                },
                "range": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisrange",
                            "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-range",
                            "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            }
        },
        "enum-org-bukkit-treetype": {"enum": [
            "TREE",
            "BIG_TREE",
            "REDWOOD",
            "TALL_REDWOOD",
            "BIRCH",
            "JUNGLE",
            "SMALL_JUNGLE",
            "COCOA_TREE",
            "JUNGLE_BUSH",
            "RED_MUSHROOM",
            "BROWN_MUSHROOM",
            "SWAMP",
            "ACACIA",
            "DARK_OAK",
            "MEGA_REDWOOD",
            "TALL_BIRCH",
            "CHORUS_PLANT",
            "CRIMSON_FUNGUS",
            "WARPED_FUNGUS",
            "AZALEA",
            "MANGROVE",
            "TALL_MANGROVE"
        ]},
        "obj-com-volmit-iris-engine-object-irisfluidbodies": {"anyOf": [
            {
                "description": "Represents a fluid body configuration",
                "type": "object",
                "properties": {
                    "rivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisriver"},
                        "description": "rivers\nDefine rivers\n   \nList of Rivers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "lakes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislake"},
                        "description": "lakes\nDefine lakes\n   \nList of Lakes (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-particle": {"enum": [
            "EXPLOSION_NORMAL",
            "EXPLOSION_LARGE",
            "EXPLOSION_HUGE",
            "FIREWORKS_SPARK",
            "WATER_BUBBLE",
            "WATER_SPLASH",
            "WATER_WAKE",
            "SUSPENDED",
            "SUSPENDED_DEPTH",
            "CRIT",
            "CRIT_MAGIC",
            "SMOKE_NORMAL",
            "SMOKE_LARGE",
            "SPELL",
            "SPELL_INSTANT",
            "SPELL_MOB",
            "SPELL_MOB_AMBIENT",
            "SPELL_WITCH",
            "DRIP_WATER",
            "DRIP_LAVA",
            "VILLAGER_ANGRY",
            "VILLAGER_HAPPY",
            "TOWN_AURA",
            "NOTE",
            "PORTAL",
            "ENCHANTMENT_TABLE",
            "FLAME",
            "LAVA",
            "CLOUD",
            "REDSTONE",
            "SNOWBALL",
            "SNOW_SHOVEL",
            "SLIME",
            "HEART",
            "ITEM_CRACK",
            "BLOCK_CRACK",
            "BLOCK_DUST",
            "WATER_DROP",
            "MOB_APPEARANCE",
            "DRAGON_BREATH",
            "END_ROD",
            "DAMAGE_INDICATOR",
            "SWEEP_ATTACK",
            "FALLING_DUST",
            "TOTEM",
            "SPIT",
            "SQUID_INK",
            "BUBBLE_POP",
            "CURRENT_DOWN",
            "BUBBLE_COLUMN_UP",
            "NAUTILUS",
            "DOLPHIN",
            "SNEEZE",
            "CAMPFIRE_COSY_SMOKE",
            "CAMPFIRE_SIGNAL_SMOKE",
            "COMPOSTER",
            "FLASH",
            "FALLING_LAVA",
            "LANDING_LAVA",
            "FALLING_WATER",
            "DRIPPING_HONEY",
            "FALLING_HONEY",
            "LANDING_HONEY",
            "FALLING_NECTAR",
            "SOUL_FIRE_FLAME",
            "ASH",
            "CRIMSON_SPORE",
            "WARPED_SPORE",
            "SOUL",
            "DRIPPING_OBSIDIAN_TEAR",
            "FALLING_OBSIDIAN_TEAR",
            "LANDING_OBSIDIAN_TEAR",
            "REVERSE_PORTAL",
            "WHITE_ASH",
            "DUST_COLOR_TRANSITION",
            "VIBRATION",
            "FALLING_SPORE_BLOSSOM",
            "SPORE_BLOSSOM_AIR",
            "SMALL_FLAME",
            "SNOWFLAKE",
            "DRIPPING_DRIPSTONE_LAVA",
            "FALLING_DRIPSTONE_LAVA",
            "DRIPPING_DRIPSTONE_WATER",
            "FALLING_DRIPSTONE_WATER",
            "GLOW_SQUID_INK",
            "GLOW",
            "WAX_ON",
            "WAX_OFF",
            "ELECTRIC_SPARK",
            "SCRAPE",
            "SONIC_BOOM",
            "SCULK_SOUL",
            "SCULK_CHARGE",
            "SCULK_CHARGE_POP",
            "SHRIEK",
            "BLOCK_MARKER",
            "LEGACY_BLOCK_CRACK",
            "LEGACY_BLOCK_DUST",
            "LEGACY_FALLING_DUST"
        ]},
        "enum-snippet-stilt-settings": {"enum": []},
        "enum-snippet-object-limit": {"enum": []},
        "obj-com-volmit-iris-engine-object-irislake": {"anyOf": [
            {
                "description": "Represents an Iris Lake",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "widthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "depthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "worm": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisworm",
                                "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-worm",
                                "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this lake to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzbiomes": {"enum": [
            "mountain/hills",
            "carving/ice-lite",
            "tropical/rainforest-island",
            "mushroom/plains",
            "carving/drip",
            "temperate/highlands",
            "tundra/forest",
            "mesa/plateau",
            "carving/mixed-sandstone",
            "temperate/reaching-forest",
            "tropical/sea/river-steep",
            "hot/shore/beach",
            "tropical/volcanoes-lava",
            "mushroom/shore/beach",
            "temperate/lush-plains-yellow",
            "frozen/sea/ocean",
            "temperate/plateau-extended",
            "tundra/autumn",
            "mesa/cliffs",
            "tundra/magic-forest-extended",
            "mesa/valleys",
            "frozen/pines-extended",
            "tropical/sea/ocean",
            "mesa/green",
            "frozen/spruce-hills-extended",
            "savanna/cliff",
            "mountain/plains",
            "carving/sandstone",
            "temperate/lush-plains",
            "frozen/vander",
            "frozen/spruce-plains",
            "tropical/rainforest",
            "hot/desert-dunes-red",
            "tundra/shore/beach",
            "mesa/blue",
            "swamp/shore/beach",
            "mushroom/forest-extended",
            "hot/mountain-plains",
            "temperate/stranged-plains",
            "tundra/frosted-peaks-extended",
            "mushroom/sea/ocean",
            "tropical/jungle-denmyre",
            "swamp/roofed-wayward-extended",
            "frozen/sea/frozen-parent-river",
            "frozen/shore/beach",
            "tundra/sea/river",
            "tropical/mountain-water",
            "frozen/pine-hills",
            "tropical/beach-bamboo",
            "ocean/deep",
            "frozen/plains",
            "swamp/marsh",
            "mountain/Cute_Cliffs+",
            "tropical/rainforest-wicked",
            "temperate/lush-plains-red",
            "tropical/volcanic-plains",
            "temperate/oak-forest-extended",
            "tropical/plains-hills",
            "hot/desert-dunes",
            "tropical/rainforest-wicked-child",
            "tundra/mountains-extended-cliffs",
            "swamp/sea/lake",
            "swamp/roofed-wayward",
            "carving/rocky",
            "hot/mountain-middle",
            "mountain/mountain",
            "swamp/cambian-drift-extended",
            "temperate/plateau",
            "frozen/sea/frozen-river-ice",
            "tropical/sea/river-soft",
            "mesa/plateau-high",
            "savanna/plateau",
            "tundra/sequia-redwoods-extended",
            "carving/granite",
            "frozen/pines",
            "temperate/sea/river",
            "mountain/sea/river",
            "mesa/plateau-dirt",
            "hot/mountain-cliffs",
            "temperate/osaka-violet-forest",
            "hot/oasis",
            "frozen/peak",
            "tropical/island-beach",
            "swamp/swamp-puddle",
            "tundra/frosted-peaks",
            "frozen/mountain-extended",
            "swamp/roofed-forest-extended",
            "mesa/mesa",
            "carving/deepslate",
            "tundra/sequia-redwoods",
            "swamp/sea/ocean-tree",
            "mushroom/crimson-forest-extended",
            "swamp/handy-willow-forest",
            "ocean/ocean",
            "tundra/forest-extended-cliffs",
            "savanna/acacia-denmyre",
            "swamp/roofed-forest",
            "tundra/redwood-forest",
            "temperate/combo-forest-extended",
            "frozen/spruce-hills",
            "swamp/sea/ocean",
            "mushroom/forest",
            "carving/amethyst",
            "tropical/beach",
            "ocean/shore/beach",
            "savanna/savanna",
            "mountain/shore/beach",
            "hot/Small_Valley",
            "tropical/highlands",
            "carving/ice",
            "swamp/denmyre",
            "ocean/warm",
            "temperate/longtree-forest",
            "tundra/taiga",
            "temperate/flower-forest",
            "carving/mountain-caves",
            "temperate/osaka-red-forest",
            "carving/red-sandstone",
            "mushroom/crimson-forest",
            "hot/shore/beach-grass",
            "mountain/sea/river-soft",
            "mesa/shore/beach",
            "tropical/sea/coral-ocean-cliffs",
            "temperate/sea/ocean-deep",
            "temperate/shore/beach",
            "mountain/cliffs",
            "savanna/forest",
            "tundra/magic-forest",
            "hot/sea/ocean-cliffs",
            "tundra/mountains",
            "tropical/mountain",
            "tropical/volcanoes",
            "tropical/mountain-plains",
            "swamp/swamp-mangrove-lake",
            "tundra/bonsai-forest",
            "temperate/sea/ocean",
            "temperate/shore/oak-beach",
            "mesa/dark",
            "hot/sea/ocean",
            "tundra/autumn-extended",
            "temperate/longtree-forest-extended",
            "mesa/yellow",
            "tropical/beach-charred",
            "tundra/shore/beach-stone",
            "carving/ice-ravine",
            "frozen/mountains",
            "swamp/marsh-rotten",
            "frozen/sea/river",
            "savanna/shore/beach",
            "mountain/forest",
            "tropical/mountain-extreme",
            "tundra/sea/river-rocky",
            "tropical/plains",
            "mountain/mountain-extended",
            "mushroom/warped-forest-extended",
            "mountain/forest-extended",
            "carving/deep",
            "carving/swamp",
            "temperate/wilds-extended",
            "mushroom/sea/lake",
            "temperate/birch-denmyre",
            "tundra/taiga-extended",
            "frozen/redwood-forest-extended",
            "frozen/redwood-forest",
            "frozen/hills-extended",
            "mesa/plateau-dirt-high",
            "mesa/red",
            "temperate/island",
            "frozen/mountain-cliffs-extended",
            "temperate/flower-forest-extended",
            "temperate/oak-forest",
            "temperate/birch-forest",
            "carving/calcite",
            "temperate/meadows",
            "carving/lush",
            "swamp/cambian-drift",
            "tropical/rainforest-hills",
            "temperate/birch-thin",
            "mountain/plain-extended",
            "temperate/combo-forest",
            "frozen/mountain",
            "tundra/bonsai-extended",
            "mountain/cliffs-extended",
            "hot/mountain",
            "carving/drip-lite",
            "carving/deepravine",
            "tundra/ether-extended",
            "swamp/swamp-forest",
            "temperate/plains",
            "mushroom/warped-forest",
            "hot/sea/river",
            "temperate/wilds",
            "mountain/Cute_Cliffs",
            "swamp/willow-forest",
            "frozen/hills",
            "frozen/pine-plains",
            "tropical/wilds",
            "tundra/ether",
            "tropical/mountain-middle",
            "tundra/sea/lake",
            "carving/volcanic",
            "swamp/willow-forest-extended",
            "frozen/mountain-cliffs",
            "savanna/cliff-extended",
            "tundra/spruce-denmyre",
            "mesa/sea/river",
            "tundra/redwood-extended-cliffs",
            "tropical/submerged-volcanic",
            "temperate/birch-forest-extended",
            "temperate/oak-denmyre",
            "ocean/warm-bottom",
            "tropical/bamboo-forest",
            "carving/jungle",
            "tropical/sea/coral-ocean"
        ]},
        "obj-com-volmit-iris-engine-object-irisdepositgenerator": {"anyOf": [
            {
                "description": "Creates ore & other block deposits underground",
                "type": "object",
                "properties": {
                    "minHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "minHeight\nThe minimum height this deposit can generate at\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    },
                    "maxHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "maxHeight\nThe maximum height this deposit can generate at\n   \nInteger\n\n    \n* Default Value is 75\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    },
                    "minSize": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "minSize\nThe minimum amount of deposit blocks per clump\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    },
                    "maxSize": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "maxSize\nThe maximum amount of deposit blocks per clump\n   \nInteger\n\n    \n* Default Value is 128\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    },
                    "maxPerChunk": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2048,
                        "description": "maxPerChunk\nThe maximum amount of clumps per chunk\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 0\n* Maximum allowed is 2048"
                    },
                    "minPerChunk": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2048,
                        "description": "minPerChunk\nThe minimum amount of clumps per chunk\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 2048"
                    },
                    "palette": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "palette\nThe palette of blocks to be used in this deposit generator\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "varience": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 64,
                        "description": "varience\nOre varience is how many different objects clumps iris will create\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 64"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisriver": {"anyOf": [
            {
                "description": "Represents an Iris river",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "width": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "worm": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisworm",
                                "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-worm",
                                "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this river to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "widthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "depthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-carving": {"enum": []},
        "erzexpressions": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle": {"anyOf": [
            {
                "description": "This represents a generator with a min and max height",
                "type": "object",
                "properties": {
                    "generator": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "min": {
                        "type": "integer",
                        "minimum": -2032,
                        "maximum": 2032,
                        "description": "min\nThe min block value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -2032\n* Maximum allowed is 2032"
                    },
                    "max": {
                        "type": "integer",
                        "minimum": -2032,
                        "maximum": 2032,
                        "description": "max\nThe max block value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -2032\n* Maximum allowed is 2032"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzjigsaw-structures": {"enum": [
            "mush-huts",
            "ocean-monument",
            "dungeon-zombie",
            "village-plains",
            "woodland-mansion",
            "village-desert",
            "mineshaft",
            "dungeon-spider",
            "underwater-ruin",
            "ruined-portal",
            "village-snowy",
            "pyramid-desert",
            "igloo",
            "pillager-outpost",
            "dungeon-skeleton",
            "village-taiga",
            "village-savanna",
            "stronghold",
            "pyramid-jungle"
        ]},
        "obj-com-volmit-iris-engine-object-irisattributemodifier": {"anyOf": [
            {
                "description": "Represents an attribute modifier for an item or an entity. This allows you to create modifications to basic game attributes such as MAX_HEALTH or ARMOR_VALUE.",
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attribute",
                        "description": "attribute\nThe Attribute type. This type is pulled from the game attributes. Zombie & Horse attributes will not work on non-zombie/horse entities.\nUsing an attribute on an item will have affects when held, or worn. There is no way to specify further granularity as the game picks this depending on the item type.\n   \nAttribute\n\nMust be a valid Attribute (use ctrl+space for auto complete!)"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "description": "name\nThe Attribute Name is used internally only for the game. This value should be unique to all other attributes applied to this item/entity. It is not shown in game.\n   \nText\n\n    \n* Default Value is \n* Minimum Length allowed is 2"
                    },
                    "operation": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attributemodifier-operation",
                        "description": "operation\nThe application operation (add number is default). Add Number adds to the default value. \nAdd scalar_1 will multiply by 1 for example if the health is 20 and you multiply_scalar_1 by 0.5, the health will result in 30, not 10. Use negative values to achieve that.\n   \nOperation\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Operation (use ctrl+space for auto complete!)"
                    },
                    "minAmount": {
                        "type": "number",
                        "description": "minAmount\nMinimum amount for this modifier. Iris randomly chooses an amount, this is the minimum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "maxAmount": {
                        "type": "number",
                        "description": "maxAmount\nMaximum amount for this modifier Iris randomly chooses an amount, this is the maximum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this attribute is applied (0 to 1). If the chance is 0.5 (50%), then Iris will only apply this attribute 50% of the time.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscommand": {"anyOf": [
            {
                "description": "Represents a set of Iris commands",
                "type": "object",
                "properties": {
                    "commands": {
                        "type": "array",
                        "minItems": 1,
                        "description": "commands\nList of commands. Iris replaces {x} {y} and {z} with the location of the entity spawn\n   \nList of Text\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "delay": {
                        "type": "integer",
                        "description": "delay\nThe delay for running the command. Instant by default\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "repeat": {
                        "type": "boolean",
                        "description": "repeat\nIf this should be repeated (indefinitely, cannot be cancelled). This does not persist with server-restarts, so it only repeats when the chunk is generated.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "repeatDelay": {
                        "type": "integer",
                        "description": "repeatDelay\nThe delay between repeats, in server ticks (by default 100, so 5 seconds)\n   \nInteger\n\n    \n* Default Value is 100"
                    },
                    "timeBlock": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristimeblock",
                                "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-time-block",
                                "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "weather": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisweather",
                        "description": "weather\nThe weather that is required for the command to execute.\n   \nWeather\nRepresents a weather type\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Weather (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-object-rotator": {"enum": []},
        "enum-org-bukkit-sound": {"enum": [
            "AMBIENT_BASALT_DELTAS_ADDITIONS",
            "AMBIENT_BASALT_DELTAS_LOOP",
            "AMBIENT_BASALT_DELTAS_MOOD",
            "AMBIENT_CAVE",
            "AMBIENT_CRIMSON_FOREST_ADDITIONS",
            "AMBIENT_CRIMSON_FOREST_LOOP",
            "AMBIENT_CRIMSON_FOREST_MOOD",
            "AMBIENT_NETHER_WASTES_ADDITIONS",
            "AMBIENT_NETHER_WASTES_LOOP",
            "AMBIENT_NETHER_WASTES_MOOD",
            "AMBIENT_SOUL_SAND_VALLEY_ADDITIONS",
            "AMBIENT_SOUL_SAND_VALLEY_LOOP",
            "AMBIENT_SOUL_SAND_VALLEY_MOOD",
            "AMBIENT_UNDERWATER_ENTER",
            "AMBIENT_UNDERWATER_EXIT",
            "AMBIENT_UNDERWATER_LOOP",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE",
            "AMBIENT_WARPED_FOREST_ADDITIONS",
            "AMBIENT_WARPED_FOREST_LOOP",
            "AMBIENT_WARPED_FOREST_MOOD",
            "BLOCK_AMETHYST_BLOCK_BREAK",
            "BLOCK_AMETHYST_BLOCK_CHIME",
            "BLOCK_AMETHYST_BLOCK_FALL",
            "BLOCK_AMETHYST_BLOCK_HIT",
            "BLOCK_AMETHYST_BLOCK_PLACE",
            "BLOCK_AMETHYST_BLOCK_STEP",
            "BLOCK_AMETHYST_CLUSTER_BREAK",
            "BLOCK_AMETHYST_CLUSTER_FALL",
            "BLOCK_AMETHYST_CLUSTER_HIT",
            "BLOCK_AMETHYST_CLUSTER_PLACE",
            "BLOCK_AMETHYST_CLUSTER_STEP",
            "BLOCK_ANCIENT_DEBRIS_BREAK",
            "BLOCK_ANCIENT_DEBRIS_FALL",
            "BLOCK_ANCIENT_DEBRIS_HIT",
            "BLOCK_ANCIENT_DEBRIS_PLACE",
            "BLOCK_ANCIENT_DEBRIS_STEP",
            "BLOCK_ANVIL_BREAK",
            "BLOCK_ANVIL_DESTROY",
            "BLOCK_ANVIL_FALL",
            "BLOCK_ANVIL_HIT",
            "BLOCK_ANVIL_LAND",
            "BLOCK_ANVIL_PLACE",
            "BLOCK_ANVIL_STEP",
            "BLOCK_ANVIL_USE",
            "BLOCK_AZALEA_BREAK",
            "BLOCK_AZALEA_FALL",
            "BLOCK_AZALEA_HIT",
            "BLOCK_AZALEA_LEAVES_BREAK",
            "BLOCK_AZALEA_LEAVES_FALL",
            "BLOCK_AZALEA_LEAVES_HIT",
            "BLOCK_AZALEA_LEAVES_PLACE",
            "BLOCK_AZALEA_LEAVES_STEP",
            "BLOCK_AZALEA_PLACE",
            "BLOCK_AZALEA_STEP",
            "BLOCK_BAMBOO_BREAK",
            "BLOCK_BAMBOO_FALL",
            "BLOCK_BAMBOO_HIT",
            "BLOCK_BAMBOO_PLACE",
            "BLOCK_BAMBOO_SAPLING_BREAK",
            "BLOCK_BAMBOO_SAPLING_HIT",
            "BLOCK_BAMBOO_SAPLING_PLACE",
            "BLOCK_BAMBOO_STEP",
            "BLOCK_BAMBOO_WOOD_BREAK",
            "BLOCK_BAMBOO_WOOD_BUTTON_CLICK_OFF",
            "BLOCK_BAMBOO_WOOD_BUTTON_CLICK_ON",
            "BLOCK_BAMBOO_WOOD_DOOR_CLOSE",
            "BLOCK_BAMBOO_WOOD_DOOR_OPEN",
            "BLOCK_BAMBOO_WOOD_FALL",
            "BLOCK_BAMBOO_WOOD_FENCE_GATE_CLOSE",
            "BLOCK_BAMBOO_WOOD_FENCE_GATE_OPEN",
            "BLOCK_BAMBOO_WOOD_HANGING_SIGN_BREAK",
            "BLOCK_BAMBOO_WOOD_HANGING_SIGN_FALL",
            "BLOCK_BAMBOO_WOOD_HANGING_SIGN_HIT",
            "BLOCK_BAMBOO_WOOD_HANGING_SIGN_PLACE",
            "BLOCK_BAMBOO_WOOD_HANGING_SIGN_STEP",
            "BLOCK_BAMBOO_WOOD_HIT",
            "BLOCK_BAMBOO_WOOD_PLACE",
            "BLOCK_BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_BAMBOO_WOOD_STEP",
            "BLOCK_BAMBOO_WOOD_TRAPDOOR_CLOSE",
            "BLOCK_BAMBOO_WOOD_TRAPDOOR_OPEN",
            "BLOCK_BARREL_CLOSE",
            "BLOCK_BARREL_OPEN",
            "BLOCK_BASALT_BREAK",
            "BLOCK_BASALT_FALL",
            "BLOCK_BASALT_HIT",
            "BLOCK_BASALT_PLACE",
            "BLOCK_BASALT_STEP",
            "BLOCK_BEACON_ACTIVATE",
            "BLOCK_BEACON_AMBIENT",
            "BLOCK_BEACON_DEACTIVATE",
            "BLOCK_BEACON_POWER_SELECT",
            "BLOCK_BEEHIVE_DRIP",
            "BLOCK_BEEHIVE_ENTER",
            "BLOCK_BEEHIVE_EXIT",
            "BLOCK_BEEHIVE_SHEAR",
            "BLOCK_BEEHIVE_WORK",
            "BLOCK_BELL_RESONATE",
            "BLOCK_BELL_USE",
            "BLOCK_BIG_DRIPLEAF_BREAK",
            "BLOCK_BIG_DRIPLEAF_FALL",
            "BLOCK_BIG_DRIPLEAF_HIT",
            "BLOCK_BIG_DRIPLEAF_PLACE",
            "BLOCK_BIG_DRIPLEAF_STEP",
            "BLOCK_BIG_DRIPLEAF_TILT_DOWN",
            "BLOCK_BIG_DRIPLEAF_TILT_UP",
            "BLOCK_BLASTFURNACE_FIRE_CRACKLE",
            "BLOCK_BONE_BLOCK_BREAK",
            "BLOCK_BONE_BLOCK_FALL",
            "BLOCK_BONE_BLOCK_HIT",
            "BLOCK_BONE_BLOCK_PLACE",
            "BLOCK_BONE_BLOCK_STEP",
            "BLOCK_BREWING_STAND_BREW",
            "BLOCK_BUBBLE_COLUMN_BUBBLE_POP",
            "BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT",
            "BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE",
            "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT",
            "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE",
            "BLOCK_CAKE_ADD_CANDLE",
            "BLOCK_CALCITE_BREAK",
            "BLOCK_CALCITE_FALL",
            "BLOCK_CALCITE_HIT",
            "BLOCK_CALCITE_PLACE",
            "BLOCK_CALCITE_STEP",
            "BLOCK_CAMPFIRE_CRACKLE",
            "BLOCK_CANDLE_AMBIENT",
            "BLOCK_CANDLE_BREAK",
            "BLOCK_CANDLE_EXTINGUISH",
            "BLOCK_CANDLE_FALL",
            "BLOCK_CANDLE_HIT",
            "BLOCK_CANDLE_PLACE",
            "BLOCK_CANDLE_STEP",
            "BLOCK_CAVE_VINES_BREAK",
            "BLOCK_CAVE_VINES_FALL",
            "BLOCK_CAVE_VINES_HIT",
            "BLOCK_CAVE_VINES_PICK_BERRIES",
            "BLOCK_CAVE_VINES_PLACE",
            "BLOCK_CAVE_VINES_STEP",
            "BLOCK_CHAIN_BREAK",
            "BLOCK_CHAIN_FALL",
            "BLOCK_CHAIN_HIT",
            "BLOCK_CHAIN_PLACE",
            "BLOCK_CHAIN_STEP",
            "BLOCK_CHEST_CLOSE",
            "BLOCK_CHEST_LOCKED",
            "BLOCK_CHEST_OPEN",
            "BLOCK_CHISELED_BOOKSHELF_BREAK",
            "BLOCK_CHISELED_BOOKSHELF_FALL",
            "BLOCK_CHISELED_BOOKSHELF_HIT",
            "BLOCK_CHISELED_BOOKSHELF_INSERT",
            "BLOCK_CHISELED_BOOKSHELF_INSERT_ENCHANTED",
            "BLOCK_CHISELED_BOOKSHELF_PICKUP",
            "BLOCK_CHISELED_BOOKSHELF_PICKUP_ENCHANTED",
            "BLOCK_CHISELED_BOOKSHELF_PLACE",
            "BLOCK_CHISELED_BOOKSHELF_STEP",
            "BLOCK_CHORUS_FLOWER_DEATH",
            "BLOCK_CHORUS_FLOWER_GROW",
            "BLOCK_COMPARATOR_CLICK",
            "BLOCK_COMPOSTER_EMPTY",
            "BLOCK_COMPOSTER_FILL",
            "BLOCK_COMPOSTER_FILL_SUCCESS",
            "BLOCK_COMPOSTER_READY",
            "BLOCK_CONDUIT_ACTIVATE",
            "BLOCK_CONDUIT_AMBIENT",
            "BLOCK_CONDUIT_AMBIENT_SHORT",
            "BLOCK_CONDUIT_ATTACK_TARGET",
            "BLOCK_CONDUIT_DEACTIVATE",
            "BLOCK_COPPER_BREAK",
            "BLOCK_COPPER_FALL",
            "BLOCK_COPPER_HIT",
            "BLOCK_COPPER_PLACE",
            "BLOCK_COPPER_STEP",
            "BLOCK_CORAL_BLOCK_BREAK",
            "BLOCK_CORAL_BLOCK_FALL",
            "BLOCK_CORAL_BLOCK_HIT",
            "BLOCK_CORAL_BLOCK_PLACE",
            "BLOCK_CORAL_BLOCK_STEP",
            "BLOCK_CROP_BREAK",
            "BLOCK_DEEPSLATE_BREAK",
            "BLOCK_DEEPSLATE_BRICKS_BREAK",
            "BLOCK_DEEPSLATE_BRICKS_FALL",
            "BLOCK_DEEPSLATE_BRICKS_HIT",
            "BLOCK_DEEPSLATE_BRICKS_PLACE",
            "BLOCK_DEEPSLATE_BRICKS_STEP",
            "BLOCK_DEEPSLATE_FALL",
            "BLOCK_DEEPSLATE_HIT",
            "BLOCK_DEEPSLATE_PLACE",
            "BLOCK_DEEPSLATE_STEP",
            "BLOCK_DEEPSLATE_TILES_BREAK",
            "BLOCK_DEEPSLATE_TILES_FALL",
            "BLOCK_DEEPSLATE_TILES_HIT",
            "BLOCK_DEEPSLATE_TILES_PLACE",
            "BLOCK_DEEPSLATE_TILES_STEP",
            "BLOCK_DISPENSER_DISPENSE",
            "BLOCK_DISPENSER_FAIL",
            "BLOCK_DISPENSER_LAUNCH",
            "BLOCK_DRIPSTONE_BLOCK_BREAK",
            "BLOCK_DRIPSTONE_BLOCK_FALL",
            "BLOCK_DRIPSTONE_BLOCK_HIT",
            "BLOCK_DRIPSTONE_BLOCK_PLACE",
            "BLOCK_DRIPSTONE_BLOCK_STEP",
            "BLOCK_ENCHANTMENT_TABLE_USE",
            "BLOCK_ENDER_CHEST_CLOSE",
            "BLOCK_ENDER_CHEST_OPEN",
            "BLOCK_END_GATEWAY_SPAWN",
            "BLOCK_END_PORTAL_FRAME_FILL",
            "BLOCK_END_PORTAL_SPAWN",
            "BLOCK_FENCE_GATE_CLOSE",
            "BLOCK_FENCE_GATE_OPEN",
            "BLOCK_FIRE_AMBIENT",
            "BLOCK_FIRE_EXTINGUISH",
            "BLOCK_FLOWERING_AZALEA_BREAK",
            "BLOCK_FLOWERING_AZALEA_FALL",
            "BLOCK_FLOWERING_AZALEA_HIT",
            "BLOCK_FLOWERING_AZALEA_PLACE",
            "BLOCK_FLOWERING_AZALEA_STEP",
            "BLOCK_FROGLIGHT_BREAK",
            "BLOCK_FROGLIGHT_FALL",
            "BLOCK_FROGLIGHT_HIT",
            "BLOCK_FROGLIGHT_PLACE",
            "BLOCK_FROGLIGHT_STEP",
            "BLOCK_FROGSPAWN_BREAK",
            "BLOCK_FROGSPAWN_FALL",
            "BLOCK_FROGSPAWN_HATCH",
            "BLOCK_FROGSPAWN_HIT",
            "BLOCK_FROGSPAWN_PLACE",
            "BLOCK_FROGSPAWN_STEP",
            "BLOCK_FUNGUS_BREAK",
            "BLOCK_FUNGUS_FALL",
            "BLOCK_FUNGUS_HIT",
            "BLOCK_FUNGUS_PLACE",
            "BLOCK_FUNGUS_STEP",
            "BLOCK_FURNACE_FIRE_CRACKLE",
            "BLOCK_GILDED_BLACKSTONE_BREAK",
            "BLOCK_GILDED_BLACKSTONE_FALL",
            "BLOCK_GILDED_BLACKSTONE_HIT",
            "BLOCK_GILDED_BLACKSTONE_PLACE",
            "BLOCK_GILDED_BLACKSTONE_STEP",
            "BLOCK_GLASS_BREAK",
            "BLOCK_GLASS_FALL",
            "BLOCK_GLASS_HIT",
            "BLOCK_GLASS_PLACE",
            "BLOCK_GLASS_STEP",
            "BLOCK_GRASS_BREAK",
            "BLOCK_GRASS_FALL",
            "BLOCK_GRASS_HIT",
            "BLOCK_GRASS_PLACE",
            "BLOCK_GRASS_STEP",
            "BLOCK_GRAVEL_BREAK",
            "BLOCK_GRAVEL_FALL",
            "BLOCK_GRAVEL_HIT",
            "BLOCK_GRAVEL_PLACE",
            "BLOCK_GRAVEL_STEP",
            "BLOCK_GRINDSTONE_USE",
            "BLOCK_GROWING_PLANT_CROP",
            "BLOCK_HANGING_ROOTS_BREAK",
            "BLOCK_HANGING_ROOTS_FALL",
            "BLOCK_HANGING_ROOTS_HIT",
            "BLOCK_HANGING_ROOTS_PLACE",
            "BLOCK_HANGING_ROOTS_STEP",
            "BLOCK_HANGING_SIGN_BREAK",
            "BLOCK_HANGING_SIGN_FALL",
            "BLOCK_HANGING_SIGN_HIT",
            "BLOCK_HANGING_SIGN_PLACE",
            "BLOCK_HANGING_SIGN_STEP",
            "BLOCK_HONEY_BLOCK_BREAK",
            "BLOCK_HONEY_BLOCK_FALL",
            "BLOCK_HONEY_BLOCK_HIT",
            "BLOCK_HONEY_BLOCK_PLACE",
            "BLOCK_HONEY_BLOCK_SLIDE",
            "BLOCK_HONEY_BLOCK_STEP",
            "BLOCK_IRON_DOOR_CLOSE",
            "BLOCK_IRON_DOOR_OPEN",
            "BLOCK_IRON_TRAPDOOR_CLOSE",
            "BLOCK_IRON_TRAPDOOR_OPEN",
            "BLOCK_LADDER_BREAK",
            "BLOCK_LADDER_FALL",
            "BLOCK_LADDER_HIT",
            "BLOCK_LADDER_PLACE",
            "BLOCK_LADDER_STEP",
            "BLOCK_LANTERN_BREAK",
            "BLOCK_LANTERN_FALL",
            "BLOCK_LANTERN_HIT",
            "BLOCK_LANTERN_PLACE",
            "BLOCK_LANTERN_STEP",
            "BLOCK_LARGE_AMETHYST_BUD_BREAK",
            "BLOCK_LARGE_AMETHYST_BUD_PLACE",
            "BLOCK_LAVA_AMBIENT",
            "BLOCK_LAVA_EXTINGUISH",
            "BLOCK_LAVA_POP",
            "BLOCK_LEVER_CLICK",
            "BLOCK_LILY_PAD_PLACE",
            "BLOCK_LODESTONE_BREAK",
            "BLOCK_LODESTONE_FALL",
            "BLOCK_LODESTONE_HIT",
            "BLOCK_LODESTONE_PLACE",
            "BLOCK_LODESTONE_STEP",
            "BLOCK_MANGROVE_ROOTS_BREAK",
            "BLOCK_MANGROVE_ROOTS_FALL",
            "BLOCK_MANGROVE_ROOTS_HIT",
            "BLOCK_MANGROVE_ROOTS_PLACE",
            "BLOCK_MANGROVE_ROOTS_STEP",
            "BLOCK_MEDIUM_AMETHYST_BUD_BREAK",
            "BLOCK_MEDIUM_AMETHYST_BUD_PLACE",
            "BLOCK_METAL_BREAK",
            "BLOCK_METAL_FALL",
            "BLOCK_METAL_HIT",
            "BLOCK_METAL_PLACE",
            "BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_METAL_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_METAL_STEP",
            "BLOCK_MOSS_BREAK",
            "BLOCK_MOSS_CARPET_BREAK",
            "BLOCK_MOSS_CARPET_FALL",
            "BLOCK_MOSS_CARPET_HIT",
            "BLOCK_MOSS_CARPET_PLACE",
            "BLOCK_MOSS_CARPET_STEP",
            "BLOCK_MOSS_FALL",
            "BLOCK_MOSS_HIT",
            "BLOCK_MOSS_PLACE",
            "BLOCK_MOSS_STEP",
            "BLOCK_MUDDY_MANGROVE_ROOTS_BREAK",
            "BLOCK_MUDDY_MANGROVE_ROOTS_FALL",
            "BLOCK_MUDDY_MANGROVE_ROOTS_HIT",
            "BLOCK_MUDDY_MANGROVE_ROOTS_PLACE",
            "BLOCK_MUDDY_MANGROVE_ROOTS_STEP",
            "BLOCK_MUD_BREAK",
            "BLOCK_MUD_BRICKS_BREAK",
            "BLOCK_MUD_BRICKS_FALL",
            "BLOCK_MUD_BRICKS_HIT",
            "BLOCK_MUD_BRICKS_PLACE",
            "BLOCK_MUD_BRICKS_STEP",
            "BLOCK_MUD_FALL",
            "BLOCK_MUD_HIT",
            "BLOCK_MUD_PLACE",
            "BLOCK_MUD_STEP",
            "BLOCK_NETHERITE_BLOCK_BREAK",
            "BLOCK_NETHERITE_BLOCK_FALL",
            "BLOCK_NETHERITE_BLOCK_HIT",
            "BLOCK_NETHERITE_BLOCK_PLACE",
            "BLOCK_NETHERITE_BLOCK_STEP",
            "BLOCK_NETHERRACK_BREAK",
            "BLOCK_NETHERRACK_FALL",
            "BLOCK_NETHERRACK_HIT",
            "BLOCK_NETHERRACK_PLACE",
            "BLOCK_NETHERRACK_STEP",
            "BLOCK_NETHER_BRICKS_BREAK",
            "BLOCK_NETHER_BRICKS_FALL",
            "BLOCK_NETHER_BRICKS_HIT",
            "BLOCK_NETHER_BRICKS_PLACE",
            "BLOCK_NETHER_BRICKS_STEP",
            "BLOCK_NETHER_GOLD_ORE_BREAK",
            "BLOCK_NETHER_GOLD_ORE_FALL",
            "BLOCK_NETHER_GOLD_ORE_HIT",
            "BLOCK_NETHER_GOLD_ORE_PLACE",
            "BLOCK_NETHER_GOLD_ORE_STEP",
            "BLOCK_NETHER_ORE_BREAK",
            "BLOCK_NETHER_ORE_FALL",
            "BLOCK_NETHER_ORE_HIT",
            "BLOCK_NETHER_ORE_PLACE",
            "BLOCK_NETHER_ORE_STEP",
            "BLOCK_NETHER_SPROUTS_BREAK",
            "BLOCK_NETHER_SPROUTS_FALL",
            "BLOCK_NETHER_SPROUTS_HIT",
            "BLOCK_NETHER_SPROUTS_PLACE",
            "BLOCK_NETHER_SPROUTS_STEP",
            "BLOCK_NETHER_WART_BREAK",
            "BLOCK_NETHER_WOOD_BREAK",
            "BLOCK_NETHER_WOOD_BUTTON_CLICK_OFF",
            "BLOCK_NETHER_WOOD_BUTTON_CLICK_ON",
            "BLOCK_NETHER_WOOD_DOOR_CLOSE",
            "BLOCK_NETHER_WOOD_DOOR_OPEN",
            "BLOCK_NETHER_WOOD_FALL",
            "BLOCK_NETHER_WOOD_FENCE_GATE_CLOSE",
            "BLOCK_NETHER_WOOD_FENCE_GATE_OPEN",
            "BLOCK_NETHER_WOOD_HANGING_SIGN_BREAK",
            "BLOCK_NETHER_WOOD_HANGING_SIGN_FALL",
            "BLOCK_NETHER_WOOD_HANGING_SIGN_HIT",
            "BLOCK_NETHER_WOOD_HANGING_SIGN_PLACE",
            "BLOCK_NETHER_WOOD_HANGING_SIGN_STEP",
            "BLOCK_NETHER_WOOD_HIT",
            "BLOCK_NETHER_WOOD_PLACE",
            "BLOCK_NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_NETHER_WOOD_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_NETHER_WOOD_STEP",
            "BLOCK_NETHER_WOOD_TRAPDOOR_CLOSE",
            "BLOCK_NETHER_WOOD_TRAPDOOR_OPEN",
            "BLOCK_NOTE_BLOCK_BANJO",
            "BLOCK_NOTE_BLOCK_BASEDRUM",
            "BLOCK_NOTE_BLOCK_BASS",
            "BLOCK_NOTE_BLOCK_BELL",
            "BLOCK_NOTE_BLOCK_BIT",
            "BLOCK_NOTE_BLOCK_CHIME",
            "BLOCK_NOTE_BLOCK_COW_BELL",
            "BLOCK_NOTE_BLOCK_DIDGERIDOO",
            "BLOCK_NOTE_BLOCK_FLUTE",
            "BLOCK_NOTE_BLOCK_GUITAR",
            "BLOCK_NOTE_BLOCK_HARP",
            "BLOCK_NOTE_BLOCK_HAT",
            "BLOCK_NOTE_BLOCK_IMITATE_CREEPER",
            "BLOCK_NOTE_BLOCK_IMITATE_ENDER_DRAGON",
            "BLOCK_NOTE_BLOCK_IMITATE_PIGLIN",
            "BLOCK_NOTE_BLOCK_IMITATE_SKELETON",
            "BLOCK_NOTE_BLOCK_IMITATE_WITHER_SKELETON",
            "BLOCK_NOTE_BLOCK_IMITATE_ZOMBIE",
            "BLOCK_NOTE_BLOCK_IRON_XYLOPHONE",
            "BLOCK_NOTE_BLOCK_PLING",
            "BLOCK_NOTE_BLOCK_SNARE",
            "BLOCK_NOTE_BLOCK_XYLOPHONE",
            "BLOCK_NYLIUM_BREAK",
            "BLOCK_NYLIUM_FALL",
            "BLOCK_NYLIUM_HIT",
            "BLOCK_NYLIUM_PLACE",
            "BLOCK_NYLIUM_STEP",
            "BLOCK_PACKED_MUD_BREAK",
            "BLOCK_PACKED_MUD_FALL",
            "BLOCK_PACKED_MUD_HIT",
            "BLOCK_PACKED_MUD_PLACE",
            "BLOCK_PACKED_MUD_STEP",
            "BLOCK_PISTON_CONTRACT",
            "BLOCK_PISTON_EXTEND",
            "BLOCK_POINTED_DRIPSTONE_BREAK",
            "BLOCK_POINTED_DRIPSTONE_DRIP_LAVA",
            "BLOCK_POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON",
            "BLOCK_POINTED_DRIPSTONE_DRIP_WATER",
            "BLOCK_POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON",
            "BLOCK_POINTED_DRIPSTONE_FALL",
            "BLOCK_POINTED_DRIPSTONE_HIT",
            "BLOCK_POINTED_DRIPSTONE_LAND",
            "BLOCK_POINTED_DRIPSTONE_PLACE",
            "BLOCK_POINTED_DRIPSTONE_STEP",
            "BLOCK_POLISHED_DEEPSLATE_BREAK",
            "BLOCK_POLISHED_DEEPSLATE_FALL",
            "BLOCK_POLISHED_DEEPSLATE_HIT",
            "BLOCK_POLISHED_DEEPSLATE_PLACE",
            "BLOCK_POLISHED_DEEPSLATE_STEP",
            "BLOCK_PORTAL_AMBIENT",
            "BLOCK_PORTAL_TRAVEL",
            "BLOCK_PORTAL_TRIGGER",
            "BLOCK_POWDER_SNOW_BREAK",
            "BLOCK_POWDER_SNOW_FALL",
            "BLOCK_POWDER_SNOW_HIT",
            "BLOCK_POWDER_SNOW_PLACE",
            "BLOCK_POWDER_SNOW_STEP",
            "BLOCK_PUMPKIN_CARVE",
            "BLOCK_REDSTONE_TORCH_BURNOUT",
            "BLOCK_RESPAWN_ANCHOR_AMBIENT",
            "BLOCK_RESPAWN_ANCHOR_CHARGE",
            "BLOCK_RESPAWN_ANCHOR_DEPLETE",
            "BLOCK_RESPAWN_ANCHOR_SET_SPAWN",
            "BLOCK_ROOTED_DIRT_BREAK",
            "BLOCK_ROOTED_DIRT_FALL",
            "BLOCK_ROOTED_DIRT_HIT",
            "BLOCK_ROOTED_DIRT_PLACE",
            "BLOCK_ROOTED_DIRT_STEP",
            "BLOCK_ROOTS_BREAK",
            "BLOCK_ROOTS_FALL",
            "BLOCK_ROOTS_HIT",
            "BLOCK_ROOTS_PLACE",
            "BLOCK_ROOTS_STEP",
            "BLOCK_SAND_BREAK",
            "BLOCK_SAND_FALL",
            "BLOCK_SAND_HIT",
            "BLOCK_SAND_PLACE",
            "BLOCK_SAND_STEP",
            "BLOCK_SCAFFOLDING_BREAK",
            "BLOCK_SCAFFOLDING_FALL",
            "BLOCK_SCAFFOLDING_HIT",
            "BLOCK_SCAFFOLDING_PLACE",
            "BLOCK_SCAFFOLDING_STEP",
            "BLOCK_SCULK_BREAK",
            "BLOCK_SCULK_CATALYST_BLOOM",
            "BLOCK_SCULK_CATALYST_BREAK",
            "BLOCK_SCULK_CATALYST_FALL",
            "BLOCK_SCULK_CATALYST_HIT",
            "BLOCK_SCULK_CATALYST_PLACE",
            "BLOCK_SCULK_CATALYST_STEP",
            "BLOCK_SCULK_CHARGE",
            "BLOCK_SCULK_FALL",
            "BLOCK_SCULK_HIT",
            "BLOCK_SCULK_PLACE",
            "BLOCK_SCULK_SENSOR_BREAK",
            "BLOCK_SCULK_SENSOR_CLICKING",
            "BLOCK_SCULK_SENSOR_CLICKING_STOP",
            "BLOCK_SCULK_SENSOR_FALL",
            "BLOCK_SCULK_SENSOR_HIT",
            "BLOCK_SCULK_SENSOR_PLACE",
            "BLOCK_SCULK_SENSOR_STEP",
            "BLOCK_SCULK_SHRIEKER_BREAK",
            "BLOCK_SCULK_SHRIEKER_FALL",
            "BLOCK_SCULK_SHRIEKER_HIT",
            "BLOCK_SCULK_SHRIEKER_PLACE",
            "BLOCK_SCULK_SHRIEKER_SHRIEK",
            "BLOCK_SCULK_SHRIEKER_STEP",
            "BLOCK_SCULK_SPREAD",
            "BLOCK_SCULK_STEP",
            "BLOCK_SCULK_VEIN_BREAK",
            "BLOCK_SCULK_VEIN_FALL",
            "BLOCK_SCULK_VEIN_HIT",
            "BLOCK_SCULK_VEIN_PLACE",
            "BLOCK_SCULK_VEIN_STEP",
            "BLOCK_SHROOMLIGHT_BREAK",
            "BLOCK_SHROOMLIGHT_FALL",
            "BLOCK_SHROOMLIGHT_HIT",
            "BLOCK_SHROOMLIGHT_PLACE",
            "BLOCK_SHROOMLIGHT_STEP",
            "BLOCK_SHULKER_BOX_CLOSE",
            "BLOCK_SHULKER_BOX_OPEN",
            "BLOCK_SLIME_BLOCK_BREAK",
            "BLOCK_SLIME_BLOCK_FALL",
            "BLOCK_SLIME_BLOCK_HIT",
            "BLOCK_SLIME_BLOCK_PLACE",
            "BLOCK_SLIME_BLOCK_STEP",
            "BLOCK_SMALL_AMETHYST_BUD_BREAK",
            "BLOCK_SMALL_AMETHYST_BUD_PLACE",
            "BLOCK_SMALL_DRIPLEAF_BREAK",
            "BLOCK_SMALL_DRIPLEAF_FALL",
            "BLOCK_SMALL_DRIPLEAF_HIT",
            "BLOCK_SMALL_DRIPLEAF_PLACE",
            "BLOCK_SMALL_DRIPLEAF_STEP",
            "BLOCK_SMITHING_TABLE_USE",
            "BLOCK_SMOKER_SMOKE",
            "BLOCK_SNOW_BREAK",
            "BLOCK_SNOW_FALL",
            "BLOCK_SNOW_HIT",
            "BLOCK_SNOW_PLACE",
            "BLOCK_SNOW_STEP",
            "BLOCK_SOUL_SAND_BREAK",
            "BLOCK_SOUL_SAND_FALL",
            "BLOCK_SOUL_SAND_HIT",
            "BLOCK_SOUL_SAND_PLACE",
            "BLOCK_SOUL_SAND_STEP",
            "BLOCK_SOUL_SOIL_BREAK",
            "BLOCK_SOUL_SOIL_FALL",
            "BLOCK_SOUL_SOIL_HIT",
            "BLOCK_SOUL_SOIL_PLACE",
            "BLOCK_SOUL_SOIL_STEP",
            "BLOCK_SPORE_BLOSSOM_BREAK",
            "BLOCK_SPORE_BLOSSOM_FALL",
            "BLOCK_SPORE_BLOSSOM_HIT",
            "BLOCK_SPORE_BLOSSOM_PLACE",
            "BLOCK_SPORE_BLOSSOM_STEP",
            "BLOCK_STEM_BREAK",
            "BLOCK_STEM_FALL",
            "BLOCK_STEM_HIT",
            "BLOCK_STEM_PLACE",
            "BLOCK_STEM_STEP",
            "BLOCK_STONE_BREAK",
            "BLOCK_STONE_BUTTON_CLICK_OFF",
            "BLOCK_STONE_BUTTON_CLICK_ON",
            "BLOCK_STONE_FALL",
            "BLOCK_STONE_HIT",
            "BLOCK_STONE_PLACE",
            "BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_STONE_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_STONE_STEP",
            "BLOCK_SWEET_BERRY_BUSH_BREAK",
            "BLOCK_SWEET_BERRY_BUSH_PICK_BERRIES",
            "BLOCK_SWEET_BERRY_BUSH_PLACE",
            "BLOCK_TRIPWIRE_ATTACH",
            "BLOCK_TRIPWIRE_CLICK_OFF",
            "BLOCK_TRIPWIRE_CLICK_ON",
            "BLOCK_TRIPWIRE_DETACH",
            "BLOCK_TUFF_BREAK",
            "BLOCK_TUFF_FALL",
            "BLOCK_TUFF_HIT",
            "BLOCK_TUFF_PLACE",
            "BLOCK_TUFF_STEP",
            "BLOCK_VINE_BREAK",
            "BLOCK_VINE_FALL",
            "BLOCK_VINE_HIT",
            "BLOCK_VINE_PLACE",
            "BLOCK_VINE_STEP",
            "BLOCK_WART_BLOCK_BREAK",
            "BLOCK_WART_BLOCK_FALL",
            "BLOCK_WART_BLOCK_HIT",
            "BLOCK_WART_BLOCK_PLACE",
            "BLOCK_WART_BLOCK_STEP",
            "BLOCK_WATER_AMBIENT",
            "BLOCK_WEEPING_VINES_BREAK",
            "BLOCK_WEEPING_VINES_FALL",
            "BLOCK_WEEPING_VINES_HIT",
            "BLOCK_WEEPING_VINES_PLACE",
            "BLOCK_WEEPING_VINES_STEP",
            "BLOCK_WET_GRASS_BREAK",
            "BLOCK_WET_GRASS_FALL",
            "BLOCK_WET_GRASS_HIT",
            "BLOCK_WET_GRASS_PLACE",
            "BLOCK_WET_GRASS_STEP",
            "BLOCK_WOODEN_BUTTON_CLICK_OFF",
            "BLOCK_WOODEN_BUTTON_CLICK_ON",
            "BLOCK_WOODEN_DOOR_CLOSE",
            "BLOCK_WOODEN_DOOR_OPEN",
            "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_WOODEN_TRAPDOOR_CLOSE",
            "BLOCK_WOODEN_TRAPDOOR_OPEN",
            "BLOCK_WOOD_BREAK",
            "BLOCK_WOOD_FALL",
            "BLOCK_WOOD_HIT",
            "BLOCK_WOOD_PLACE",
            "BLOCK_WOOD_STEP",
            "BLOCK_WOOL_BREAK",
            "BLOCK_WOOL_FALL",
            "BLOCK_WOOL_HIT",
            "BLOCK_WOOL_PLACE",
            "BLOCK_WOOL_STEP",
            "ENCHANT_THORNS_HIT",
            "ENTITY_ALLAY_AMBIENT_WITHOUT_ITEM",
            "ENTITY_ALLAY_AMBIENT_WITH_ITEM",
            "ENTITY_ALLAY_DEATH",
            "ENTITY_ALLAY_HURT",
            "ENTITY_ALLAY_ITEM_GIVEN",
            "ENTITY_ALLAY_ITEM_TAKEN",
            "ENTITY_ALLAY_ITEM_THROWN",
            "ENTITY_ARMOR_STAND_BREAK",
            "ENTITY_ARMOR_STAND_FALL",
            "ENTITY_ARMOR_STAND_HIT",
            "ENTITY_ARMOR_STAND_PLACE",
            "ENTITY_ARROW_HIT",
            "ENTITY_ARROW_HIT_PLAYER",
            "ENTITY_ARROW_SHOOT",
            "ENTITY_AXOLOTL_ATTACK",
            "ENTITY_AXOLOTL_DEATH",
            "ENTITY_AXOLOTL_HURT",
            "ENTITY_AXOLOTL_IDLE_AIR",
            "ENTITY_AXOLOTL_IDLE_WATER",
            "ENTITY_AXOLOTL_SPLASH",
            "ENTITY_AXOLOTL_SWIM",
            "ENTITY_BAT_AMBIENT",
            "ENTITY_BAT_DEATH",
            "ENTITY_BAT_HURT",
            "ENTITY_BAT_LOOP",
            "ENTITY_BAT_TAKEOFF",
            "ENTITY_BEE_DEATH",
            "ENTITY_BEE_HURT",
            "ENTITY_BEE_LOOP",
            "ENTITY_BEE_LOOP_AGGRESSIVE",
            "ENTITY_BEE_POLLINATE",
            "ENTITY_BEE_STING",
            "ENTITY_BLAZE_AMBIENT",
            "ENTITY_BLAZE_BURN",
            "ENTITY_BLAZE_DEATH",
            "ENTITY_BLAZE_HURT",
            "ENTITY_BLAZE_SHOOT",
            "ENTITY_BOAT_PADDLE_LAND",
            "ENTITY_BOAT_PADDLE_WATER",
            "ENTITY_CAMEL_AMBIENT",
            "ENTITY_CAMEL_DASH",
            "ENTITY_CAMEL_DASH_READY",
            "ENTITY_CAMEL_DEATH",
            "ENTITY_CAMEL_EAT",
            "ENTITY_CAMEL_HURT",
            "ENTITY_CAMEL_SADDLE",
            "ENTITY_CAMEL_SIT",
            "ENTITY_CAMEL_STAND",
            "ENTITY_CAMEL_STEP",
            "ENTITY_CAMEL_STEP_SAND",
            "ENTITY_CAT_AMBIENT",
            "ENTITY_CAT_BEG_FOR_FOOD",
            "ENTITY_CAT_DEATH",
            "ENTITY_CAT_EAT",
            "ENTITY_CAT_HISS",
            "ENTITY_CAT_HURT",
            "ENTITY_CAT_PURR",
            "ENTITY_CAT_PURREOW",
            "ENTITY_CAT_STRAY_AMBIENT",
            "ENTITY_CHICKEN_AMBIENT",
            "ENTITY_CHICKEN_DEATH",
            "ENTITY_CHICKEN_EGG",
            "ENTITY_CHICKEN_HURT",
            "ENTITY_CHICKEN_STEP",
            "ENTITY_COD_AMBIENT",
            "ENTITY_COD_DEATH",
            "ENTITY_COD_FLOP",
            "ENTITY_COD_HURT",
            "ENTITY_COW_AMBIENT",
            "ENTITY_COW_DEATH",
            "ENTITY_COW_HURT",
            "ENTITY_COW_MILK",
            "ENTITY_COW_STEP",
            "ENTITY_CREEPER_DEATH",
            "ENTITY_CREEPER_HURT",
            "ENTITY_CREEPER_PRIMED",
            "ENTITY_DOLPHIN_AMBIENT",
            "ENTITY_DOLPHIN_AMBIENT_WATER",
            "ENTITY_DOLPHIN_ATTACK",
            "ENTITY_DOLPHIN_DEATH",
            "ENTITY_DOLPHIN_EAT",
            "ENTITY_DOLPHIN_HURT",
            "ENTITY_DOLPHIN_JUMP",
            "ENTITY_DOLPHIN_PLAY",
            "ENTITY_DOLPHIN_SPLASH",
            "ENTITY_DOLPHIN_SWIM",
            "ENTITY_DONKEY_AMBIENT",
            "ENTITY_DONKEY_ANGRY",
            "ENTITY_DONKEY_CHEST",
            "ENTITY_DONKEY_DEATH",
            "ENTITY_DONKEY_EAT",
            "ENTITY_DONKEY_HURT",
            "ENTITY_DRAGON_FIREBALL_EXPLODE",
            "ENTITY_DROWNED_AMBIENT",
            "ENTITY_DROWNED_AMBIENT_WATER",
            "ENTITY_DROWNED_DEATH",
            "ENTITY_DROWNED_DEATH_WATER",
            "ENTITY_DROWNED_HURT",
            "ENTITY_DROWNED_HURT_WATER",
            "ENTITY_DROWNED_SHOOT",
            "ENTITY_DROWNED_STEP",
            "ENTITY_DROWNED_SWIM",
            "ENTITY_EGG_THROW",
            "ENTITY_ELDER_GUARDIAN_AMBIENT",
            "ENTITY_ELDER_GUARDIAN_AMBIENT_LAND",
            "ENTITY_ELDER_GUARDIAN_CURSE",
            "ENTITY_ELDER_GUARDIAN_DEATH",
            "ENTITY_ELDER_GUARDIAN_DEATH_LAND",
            "ENTITY_ELDER_GUARDIAN_FLOP",
            "ENTITY_ELDER_GUARDIAN_HURT",
            "ENTITY_ELDER_GUARDIAN_HURT_LAND",
            "ENTITY_ENDERMAN_AMBIENT",
            "ENTITY_ENDERMAN_DEATH",
            "ENTITY_ENDERMAN_HURT",
            "ENTITY_ENDERMAN_SCREAM",
            "ENTITY_ENDERMAN_STARE",
            "ENTITY_ENDERMAN_TELEPORT",
            "ENTITY_ENDERMITE_AMBIENT",
            "ENTITY_ENDERMITE_DEATH",
            "ENTITY_ENDERMITE_HURT",
            "ENTITY_ENDERMITE_STEP",
            "ENTITY_ENDER_DRAGON_AMBIENT",
            "ENTITY_ENDER_DRAGON_DEATH",
            "ENTITY_ENDER_DRAGON_FLAP",
            "ENTITY_ENDER_DRAGON_GROWL",
            "ENTITY_ENDER_DRAGON_HURT",
            "ENTITY_ENDER_DRAGON_SHOOT",
            "ENTITY_ENDER_EYE_DEATH",
            "ENTITY_ENDER_EYE_LAUNCH",
            "ENTITY_ENDER_PEARL_THROW",
            "ENTITY_EVOKER_AMBIENT",
            "ENTITY_EVOKER_CAST_SPELL",
            "ENTITY_EVOKER_CELEBRATE",
            "ENTITY_EVOKER_DEATH",
            "ENTITY_EVOKER_FANGS_ATTACK",
            "ENTITY_EVOKER_HURT",
            "ENTITY_EVOKER_PREPARE_ATTACK",
            "ENTITY_EVOKER_PREPARE_SUMMON",
            "ENTITY_EVOKER_PREPARE_WOLOLO",
            "ENTITY_EXPERIENCE_BOTTLE_THROW",
            "ENTITY_EXPERIENCE_ORB_PICKUP",
            "ENTITY_FIREWORK_ROCKET_BLAST",
            "ENTITY_FIREWORK_ROCKET_BLAST_FAR",
            "ENTITY_FIREWORK_ROCKET_LARGE_BLAST",
            "ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR",
            "ENTITY_FIREWORK_ROCKET_LAUNCH",
            "ENTITY_FIREWORK_ROCKET_SHOOT",
            "ENTITY_FIREWORK_ROCKET_TWINKLE",
            "ENTITY_FIREWORK_ROCKET_TWINKLE_FAR",
            "ENTITY_FISHING_BOBBER_RETRIEVE",
            "ENTITY_FISHING_BOBBER_SPLASH",
            "ENTITY_FISHING_BOBBER_THROW",
            "ENTITY_FISH_SWIM",
            "ENTITY_FOX_AGGRO",
            "ENTITY_FOX_AMBIENT",
            "ENTITY_FOX_BITE",
            "ENTITY_FOX_DEATH",
            "ENTITY_FOX_EAT",
            "ENTITY_FOX_HURT",
            "ENTITY_FOX_SCREECH",
            "ENTITY_FOX_SLEEP",
            "ENTITY_FOX_SNIFF",
            "ENTITY_FOX_SPIT",
            "ENTITY_FOX_TELEPORT",
            "ENTITY_FROG_AMBIENT",
            "ENTITY_FROG_DEATH",
            "ENTITY_FROG_EAT",
            "ENTITY_FROG_HURT",
            "ENTITY_FROG_LAY_SPAWN",
            "ENTITY_FROG_LONG_JUMP",
            "ENTITY_FROG_STEP",
            "ENTITY_FROG_TONGUE",
            "ENTITY_GENERIC_BIG_FALL",
            "ENTITY_GENERIC_BURN",
            "ENTITY_GENERIC_DEATH",
            "ENTITY_GENERIC_DRINK",
            "ENTITY_GENERIC_EAT",
            "ENTITY_GENERIC_EXPLODE",
            "ENTITY_GENERIC_EXTINGUISH_FIRE",
            "ENTITY_GENERIC_HURT",
            "ENTITY_GENERIC_SMALL_FALL",
            "ENTITY_GENERIC_SPLASH",
            "ENTITY_GENERIC_SWIM",
            "ENTITY_GHAST_AMBIENT",
            "ENTITY_GHAST_DEATH",
            "ENTITY_GHAST_HURT",
            "ENTITY_GHAST_SCREAM",
            "ENTITY_GHAST_SHOOT",
            "ENTITY_GHAST_WARN",
            "ENTITY_GLOW_ITEM_FRAME_ADD_ITEM",
            "ENTITY_GLOW_ITEM_FRAME_BREAK",
            "ENTITY_GLOW_ITEM_FRAME_PLACE",
            "ENTITY_GLOW_ITEM_FRAME_REMOVE_ITEM",
            "ENTITY_GLOW_ITEM_FRAME_ROTATE_ITEM",
            "ENTITY_GLOW_SQUID_AMBIENT",
            "ENTITY_GLOW_SQUID_DEATH",
            "ENTITY_GLOW_SQUID_HURT",
            "ENTITY_GLOW_SQUID_SQUIRT",
            "ENTITY_GOAT_AMBIENT",
            "ENTITY_GOAT_DEATH",
            "ENTITY_GOAT_EAT",
            "ENTITY_GOAT_HORN_BREAK",
            "ENTITY_GOAT_HURT",
            "ENTITY_GOAT_LONG_JUMP",
            "ENTITY_GOAT_MILK",
            "ENTITY_GOAT_PREPARE_RAM",
            "ENTITY_GOAT_RAM_IMPACT",
            "ENTITY_GOAT_SCREAMING_AMBIENT",
            "ENTITY_GOAT_SCREAMING_DEATH",
            "ENTITY_GOAT_SCREAMING_EAT",
            "ENTITY_GOAT_SCREAMING_HORN_BREAK",
            "ENTITY_GOAT_SCREAMING_HURT",
            "ENTITY_GOAT_SCREAMING_LONG_JUMP",
            "ENTITY_GOAT_SCREAMING_MILK",
            "ENTITY_GOAT_SCREAMING_PREPARE_RAM",
            "ENTITY_GOAT_SCREAMING_RAM_IMPACT",
            "ENTITY_GOAT_STEP",
            "ENTITY_GUARDIAN_AMBIENT",
            "ENTITY_GUARDIAN_AMBIENT_LAND",
            "ENTITY_GUARDIAN_ATTACK",
            "ENTITY_GUARDIAN_DEATH",
            "ENTITY_GUARDIAN_DEATH_LAND",
            "ENTITY_GUARDIAN_FLOP",
            "ENTITY_GUARDIAN_HURT",
            "ENTITY_GUARDIAN_HURT_LAND",
            "ENTITY_HOGLIN_AMBIENT",
            "ENTITY_HOGLIN_ANGRY",
            "ENTITY_HOGLIN_ATTACK",
            "ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_HOGLIN_DEATH",
            "ENTITY_HOGLIN_HURT",
            "ENTITY_HOGLIN_RETREAT",
            "ENTITY_HOGLIN_STEP",
            "ENTITY_HORSE_AMBIENT",
            "ENTITY_HORSE_ANGRY",
            "ENTITY_HORSE_ARMOR",
            "ENTITY_HORSE_BREATHE",
            "ENTITY_HORSE_DEATH",
            "ENTITY_HORSE_EAT",
            "ENTITY_HORSE_GALLOP",
            "ENTITY_HORSE_HURT",
            "ENTITY_HORSE_JUMP",
            "ENTITY_HORSE_LAND",
            "ENTITY_HORSE_SADDLE",
            "ENTITY_HORSE_STEP",
            "ENTITY_HORSE_STEP_WOOD",
            "ENTITY_HOSTILE_BIG_FALL",
            "ENTITY_HOSTILE_DEATH",
            "ENTITY_HOSTILE_HURT",
            "ENTITY_HOSTILE_SMALL_FALL",
            "ENTITY_HOSTILE_SPLASH",
            "ENTITY_HOSTILE_SWIM",
            "ENTITY_HUSK_AMBIENT",
            "ENTITY_HUSK_CONVERTED_TO_ZOMBIE",
            "ENTITY_HUSK_DEATH",
            "ENTITY_HUSK_HURT",
            "ENTITY_HUSK_STEP",
            "ENTITY_ILLUSIONER_AMBIENT",
            "ENTITY_ILLUSIONER_CAST_SPELL",
            "ENTITY_ILLUSIONER_DEATH",
            "ENTITY_ILLUSIONER_HURT",
            "ENTITY_ILLUSIONER_MIRROR_MOVE",
            "ENTITY_ILLUSIONER_PREPARE_BLINDNESS",
            "ENTITY_ILLUSIONER_PREPARE_MIRROR",
            "ENTITY_IRON_GOLEM_ATTACK",
            "ENTITY_IRON_GOLEM_DAMAGE",
            "ENTITY_IRON_GOLEM_DEATH",
            "ENTITY_IRON_GOLEM_HURT",
            "ENTITY_IRON_GOLEM_REPAIR",
            "ENTITY_IRON_GOLEM_STEP",
            "ENTITY_ITEM_BREAK",
            "ENTITY_ITEM_FRAME_ADD_ITEM",
            "ENTITY_ITEM_FRAME_BREAK",
            "ENTITY_ITEM_FRAME_PLACE",
            "ENTITY_ITEM_FRAME_REMOVE_ITEM",
            "ENTITY_ITEM_FRAME_ROTATE_ITEM",
            "ENTITY_ITEM_PICKUP",
            "ENTITY_LEASH_KNOT_BREAK",
            "ENTITY_LEASH_KNOT_PLACE",
            "ENTITY_LIGHTNING_BOLT_IMPACT",
            "ENTITY_LIGHTNING_BOLT_THUNDER",
            "ENTITY_LINGERING_POTION_THROW",
            "ENTITY_LLAMA_AMBIENT",
            "ENTITY_LLAMA_ANGRY",
            "ENTITY_LLAMA_CHEST",
            "ENTITY_LLAMA_DEATH",
            "ENTITY_LLAMA_EAT",
            "ENTITY_LLAMA_HURT",
            "ENTITY_LLAMA_SPIT",
            "ENTITY_LLAMA_STEP",
            "ENTITY_LLAMA_SWAG",
            "ENTITY_MAGMA_CUBE_DEATH",
            "ENTITY_MAGMA_CUBE_DEATH_SMALL",
            "ENTITY_MAGMA_CUBE_HURT",
            "ENTITY_MAGMA_CUBE_HURT_SMALL",
            "ENTITY_MAGMA_CUBE_JUMP",
            "ENTITY_MAGMA_CUBE_SQUISH",
            "ENTITY_MAGMA_CUBE_SQUISH_SMALL",
            "ENTITY_MINECART_INSIDE",
            "ENTITY_MINECART_INSIDE_UNDERWATER",
            "ENTITY_MINECART_RIDING",
            "ENTITY_MOOSHROOM_CONVERT",
            "ENTITY_MOOSHROOM_EAT",
            "ENTITY_MOOSHROOM_MILK",
            "ENTITY_MOOSHROOM_SHEAR",
            "ENTITY_MOOSHROOM_SUSPICIOUS_MILK",
            "ENTITY_MULE_AMBIENT",
            "ENTITY_MULE_ANGRY",
            "ENTITY_MULE_CHEST",
            "ENTITY_MULE_DEATH",
            "ENTITY_MULE_EAT",
            "ENTITY_MULE_HURT",
            "ENTITY_OCELOT_AMBIENT",
            "ENTITY_OCELOT_DEATH",
            "ENTITY_OCELOT_HURT",
            "ENTITY_PAINTING_BREAK",
            "ENTITY_PAINTING_PLACE",
            "ENTITY_PANDA_AGGRESSIVE_AMBIENT",
            "ENTITY_PANDA_AMBIENT",
            "ENTITY_PANDA_BITE",
            "ENTITY_PANDA_CANT_BREED",
            "ENTITY_PANDA_DEATH",
            "ENTITY_PANDA_EAT",
            "ENTITY_PANDA_HURT",
            "ENTITY_PANDA_PRE_SNEEZE",
            "ENTITY_PANDA_SNEEZE",
            "ENTITY_PANDA_STEP",
            "ENTITY_PANDA_WORRIED_AMBIENT",
            "ENTITY_PARROT_AMBIENT",
            "ENTITY_PARROT_DEATH",
            "ENTITY_PARROT_EAT",
            "ENTITY_PARROT_FLY",
            "ENTITY_PARROT_HURT",
            "ENTITY_PARROT_IMITATE_BLAZE",
            "ENTITY_PARROT_IMITATE_CREEPER",
            "ENTITY_PARROT_IMITATE_DROWNED",
            "ENTITY_PARROT_IMITATE_ELDER_GUARDIAN",
            "ENTITY_PARROT_IMITATE_ENDERMITE",
            "ENTITY_PARROT_IMITATE_ENDER_DRAGON",
            "ENTITY_PARROT_IMITATE_EVOKER",
            "ENTITY_PARROT_IMITATE_GHAST",
            "ENTITY_PARROT_IMITATE_GUARDIAN",
            "ENTITY_PARROT_IMITATE_HOGLIN",
            "ENTITY_PARROT_IMITATE_HUSK",
            "ENTITY_PARROT_IMITATE_ILLUSIONER",
            "ENTITY_PARROT_IMITATE_MAGMA_CUBE",
            "ENTITY_PARROT_IMITATE_PHANTOM",
            "ENTITY_PARROT_IMITATE_PIGLIN",
            "ENTITY_PARROT_IMITATE_PIGLIN_BRUTE",
            "ENTITY_PARROT_IMITATE_PILLAGER",
            "ENTITY_PARROT_IMITATE_RAVAGER",
            "ENTITY_PARROT_IMITATE_SHULKER",
            "ENTITY_PARROT_IMITATE_SILVERFISH",
            "ENTITY_PARROT_IMITATE_SKELETON",
            "ENTITY_PARROT_IMITATE_SLIME",
            "ENTITY_PARROT_IMITATE_SPIDER",
            "ENTITY_PARROT_IMITATE_STRAY",
            "ENTITY_PARROT_IMITATE_VEX",
            "ENTITY_PARROT_IMITATE_VINDICATOR",
            "ENTITY_PARROT_IMITATE_WARDEN",
            "ENTITY_PARROT_IMITATE_WITCH",
            "ENTITY_PARROT_IMITATE_WITHER",
            "ENTITY_PARROT_IMITATE_WITHER_SKELETON",
            "ENTITY_PARROT_IMITATE_ZOGLIN",
            "ENTITY_PARROT_IMITATE_ZOMBIE",
            "ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER",
            "ENTITY_PARROT_STEP",
            "ENTITY_PHANTOM_AMBIENT",
            "ENTITY_PHANTOM_BITE",
            "ENTITY_PHANTOM_DEATH",
            "ENTITY_PHANTOM_FLAP",
            "ENTITY_PHANTOM_HURT",
            "ENTITY_PHANTOM_SWOOP",
            "ENTITY_PIGLIN_ADMIRING_ITEM",
            "ENTITY_PIGLIN_AMBIENT",
            "ENTITY_PIGLIN_ANGRY",
            "ENTITY_PIGLIN_BRUTE_AMBIENT",
            "ENTITY_PIGLIN_BRUTE_ANGRY",
            "ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_PIGLIN_BRUTE_DEATH",
            "ENTITY_PIGLIN_BRUTE_HURT",
            "ENTITY_PIGLIN_BRUTE_STEP",
            "ENTITY_PIGLIN_CELEBRATE",
            "ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_PIGLIN_DEATH",
            "ENTITY_PIGLIN_HURT",
            "ENTITY_PIGLIN_JEALOUS",
            "ENTITY_PIGLIN_RETREAT",
            "ENTITY_PIGLIN_STEP",
            "ENTITY_PIG_AMBIENT",
            "ENTITY_PIG_DEATH",
            "ENTITY_PIG_HURT",
            "ENTITY_PIG_SADDLE",
            "ENTITY_PIG_STEP",
            "ENTITY_PILLAGER_AMBIENT",
            "ENTITY_PILLAGER_CELEBRATE",
            "ENTITY_PILLAGER_DEATH",
            "ENTITY_PILLAGER_HURT",
            "ENTITY_PLAYER_ATTACK_CRIT",
            "ENTITY_PLAYER_ATTACK_KNOCKBACK",
            "ENTITY_PLAYER_ATTACK_NODAMAGE",
            "ENTITY_PLAYER_ATTACK_STRONG",
            "ENTITY_PLAYER_ATTACK_SWEEP",
            "ENTITY_PLAYER_ATTACK_WEAK",
            "ENTITY_PLAYER_BIG_FALL",
            "ENTITY_PLAYER_BREATH",
            "ENTITY_PLAYER_BURP",
            "ENTITY_PLAYER_DEATH",
            "ENTITY_PLAYER_HURT",
            "ENTITY_PLAYER_HURT_DROWN",
            "ENTITY_PLAYER_HURT_FREEZE",
            "ENTITY_PLAYER_HURT_ON_FIRE",
            "ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH",
            "ENTITY_PLAYER_LEVELUP",
            "ENTITY_PLAYER_SMALL_FALL",
            "ENTITY_PLAYER_SPLASH",
            "ENTITY_PLAYER_SPLASH_HIGH_SPEED",
            "ENTITY_PLAYER_SWIM",
            "ENTITY_POLAR_BEAR_AMBIENT",
            "ENTITY_POLAR_BEAR_AMBIENT_BABY",
            "ENTITY_POLAR_BEAR_DEATH",
            "ENTITY_POLAR_BEAR_HURT",
            "ENTITY_POLAR_BEAR_STEP",
            "ENTITY_POLAR_BEAR_WARNING",
            "ENTITY_PUFFER_FISH_AMBIENT",
            "ENTITY_PUFFER_FISH_BLOW_OUT",
            "ENTITY_PUFFER_FISH_BLOW_UP",
            "ENTITY_PUFFER_FISH_DEATH",
            "ENTITY_PUFFER_FISH_FLOP",
            "ENTITY_PUFFER_FISH_HURT",
            "ENTITY_PUFFER_FISH_STING",
            "ENTITY_RABBIT_AMBIENT",
            "ENTITY_RABBIT_ATTACK",
            "ENTITY_RABBIT_DEATH",
            "ENTITY_RABBIT_HURT",
            "ENTITY_RABBIT_JUMP",
            "ENTITY_RAVAGER_AMBIENT",
            "ENTITY_RAVAGER_ATTACK",
            "ENTITY_RAVAGER_CELEBRATE",
            "ENTITY_RAVAGER_DEATH",
            "ENTITY_RAVAGER_HURT",
            "ENTITY_RAVAGER_ROAR",
            "ENTITY_RAVAGER_STEP",
            "ENTITY_RAVAGER_STUNNED",
            "ENTITY_SALMON_AMBIENT",
            "ENTITY_SALMON_DEATH",
            "ENTITY_SALMON_FLOP",
            "ENTITY_SALMON_HURT",
            "ENTITY_SHEEP_AMBIENT",
            "ENTITY_SHEEP_DEATH",
            "ENTITY_SHEEP_HURT",
            "ENTITY_SHEEP_SHEAR",
            "ENTITY_SHEEP_STEP",
            "ENTITY_SHULKER_AMBIENT",
            "ENTITY_SHULKER_BULLET_HIT",
            "ENTITY_SHULKER_BULLET_HURT",
            "ENTITY_SHULKER_CLOSE",
            "ENTITY_SHULKER_DEATH",
            "ENTITY_SHULKER_HURT",
            "ENTITY_SHULKER_HURT_CLOSED",
            "ENTITY_SHULKER_OPEN",
            "ENTITY_SHULKER_SHOOT",
            "ENTITY_SHULKER_TELEPORT",
            "ENTITY_SILVERFISH_AMBIENT",
            "ENTITY_SILVERFISH_DEATH",
            "ENTITY_SILVERFISH_HURT",
            "ENTITY_SILVERFISH_STEP",
            "ENTITY_SKELETON_AMBIENT",
            "ENTITY_SKELETON_CONVERTED_TO_STRAY",
            "ENTITY_SKELETON_DEATH",
            "ENTITY_SKELETON_HORSE_AMBIENT",
            "ENTITY_SKELETON_HORSE_AMBIENT_WATER",
            "ENTITY_SKELETON_HORSE_DEATH",
            "ENTITY_SKELETON_HORSE_GALLOP_WATER",
            "ENTITY_SKELETON_HORSE_HURT",
            "ENTITY_SKELETON_HORSE_JUMP_WATER",
            "ENTITY_SKELETON_HORSE_STEP_WATER",
            "ENTITY_SKELETON_HORSE_SWIM",
            "ENTITY_SKELETON_HURT",
            "ENTITY_SKELETON_SHOOT",
            "ENTITY_SKELETON_STEP",
            "ENTITY_SLIME_ATTACK",
            "ENTITY_SLIME_DEATH",
            "ENTITY_SLIME_DEATH_SMALL",
            "ENTITY_SLIME_HURT",
            "ENTITY_SLIME_HURT_SMALL",
            "ENTITY_SLIME_JUMP",
            "ENTITY_SLIME_JUMP_SMALL",
            "ENTITY_SLIME_SQUISH",
            "ENTITY_SLIME_SQUISH_SMALL",
            "ENTITY_SNOWBALL_THROW",
            "ENTITY_SNOW_GOLEM_AMBIENT",
            "ENTITY_SNOW_GOLEM_DEATH",
            "ENTITY_SNOW_GOLEM_HURT",
            "ENTITY_SNOW_GOLEM_SHEAR",
            "ENTITY_SNOW_GOLEM_SHOOT",
            "ENTITY_SPIDER_AMBIENT",
            "ENTITY_SPIDER_DEATH",
            "ENTITY_SPIDER_HURT",
            "ENTITY_SPIDER_STEP",
            "ENTITY_SPLASH_POTION_BREAK",
            "ENTITY_SPLASH_POTION_THROW",
            "ENTITY_SQUID_AMBIENT",
            "ENTITY_SQUID_DEATH",
            "ENTITY_SQUID_HURT",
            "ENTITY_SQUID_SQUIRT",
            "ENTITY_STRAY_AMBIENT",
            "ENTITY_STRAY_DEATH",
            "ENTITY_STRAY_HURT",
            "ENTITY_STRAY_STEP",
            "ENTITY_STRIDER_AMBIENT",
            "ENTITY_STRIDER_DEATH",
            "ENTITY_STRIDER_EAT",
            "ENTITY_STRIDER_HAPPY",
            "ENTITY_STRIDER_HURT",
            "ENTITY_STRIDER_RETREAT",
            "ENTITY_STRIDER_SADDLE",
            "ENTITY_STRIDER_STEP",
            "ENTITY_STRIDER_STEP_LAVA",
            "ENTITY_TADPOLE_DEATH",
            "ENTITY_TADPOLE_FLOP",
            "ENTITY_TADPOLE_GROW_UP",
            "ENTITY_TADPOLE_HURT",
            "ENTITY_TNT_PRIMED",
            "ENTITY_TROPICAL_FISH_AMBIENT",
            "ENTITY_TROPICAL_FISH_DEATH",
            "ENTITY_TROPICAL_FISH_FLOP",
            "ENTITY_TROPICAL_FISH_HURT",
            "ENTITY_TURTLE_AMBIENT_LAND",
            "ENTITY_TURTLE_DEATH",
            "ENTITY_TURTLE_DEATH_BABY",
            "ENTITY_TURTLE_EGG_BREAK",
            "ENTITY_TURTLE_EGG_CRACK",
            "ENTITY_TURTLE_EGG_HATCH",
            "ENTITY_TURTLE_HURT",
            "ENTITY_TURTLE_HURT_BABY",
            "ENTITY_TURTLE_LAY_EGG",
            "ENTITY_TURTLE_SHAMBLE",
            "ENTITY_TURTLE_SHAMBLE_BABY",
            "ENTITY_TURTLE_SWIM",
            "ENTITY_VEX_AMBIENT",
            "ENTITY_VEX_CHARGE",
            "ENTITY_VEX_DEATH",
            "ENTITY_VEX_HURT",
            "ENTITY_VILLAGER_AMBIENT",
            "ENTITY_VILLAGER_CELEBRATE",
            "ENTITY_VILLAGER_DEATH",
            "ENTITY_VILLAGER_HURT",
            "ENTITY_VILLAGER_NO",
            "ENTITY_VILLAGER_TRADE",
            "ENTITY_VILLAGER_WORK_ARMORER",
            "ENTITY_VILLAGER_WORK_BUTCHER",
            "ENTITY_VILLAGER_WORK_CARTOGRAPHER",
            "ENTITY_VILLAGER_WORK_CLERIC",
            "ENTITY_VILLAGER_WORK_FARMER",
            "ENTITY_VILLAGER_WORK_FISHERMAN",
            "ENTITY_VILLAGER_WORK_FLETCHER",
            "ENTITY_VILLAGER_WORK_LEATHERWORKER",
            "ENTITY_VILLAGER_WORK_LIBRARIAN",
            "ENTITY_VILLAGER_WORK_MASON",
            "ENTITY_VILLAGER_WORK_SHEPHERD",
            "ENTITY_VILLAGER_WORK_TOOLSMITH",
            "ENTITY_VILLAGER_WORK_WEAPONSMITH",
            "ENTITY_VILLAGER_YES",
            "ENTITY_VINDICATOR_AMBIENT",
            "ENTITY_VINDICATOR_CELEBRATE",
            "ENTITY_VINDICATOR_DEATH",
            "ENTITY_VINDICATOR_HURT",
            "ENTITY_WANDERING_TRADER_AMBIENT",
            "ENTITY_WANDERING_TRADER_DEATH",
            "ENTITY_WANDERING_TRADER_DISAPPEARED",
            "ENTITY_WANDERING_TRADER_DRINK_MILK",
            "ENTITY_WANDERING_TRADER_DRINK_POTION",
            "ENTITY_WANDERING_TRADER_HURT",
            "ENTITY_WANDERING_TRADER_NO",
            "ENTITY_WANDERING_TRADER_REAPPEARED",
            "ENTITY_WANDERING_TRADER_TRADE",
            "ENTITY_WANDERING_TRADER_YES",
            "ENTITY_WARDEN_AGITATED",
            "ENTITY_WARDEN_AMBIENT",
            "ENTITY_WARDEN_ANGRY",
            "ENTITY_WARDEN_ATTACK_IMPACT",
            "ENTITY_WARDEN_DEATH",
            "ENTITY_WARDEN_DIG",
            "ENTITY_WARDEN_EMERGE",
            "ENTITY_WARDEN_HEARTBEAT",
            "ENTITY_WARDEN_HURT",
            "ENTITY_WARDEN_LISTENING",
            "ENTITY_WARDEN_LISTENING_ANGRY",
            "ENTITY_WARDEN_NEARBY_CLOSE",
            "ENTITY_WARDEN_NEARBY_CLOSER",
            "ENTITY_WARDEN_NEARBY_CLOSEST",
            "ENTITY_WARDEN_ROAR",
            "ENTITY_WARDEN_SNIFF",
            "ENTITY_WARDEN_SONIC_BOOM",
            "ENTITY_WARDEN_SONIC_CHARGE",
            "ENTITY_WARDEN_STEP",
            "ENTITY_WARDEN_TENDRIL_CLICKS",
            "ENTITY_WITCH_AMBIENT",
            "ENTITY_WITCH_CELEBRATE",
            "ENTITY_WITCH_DEATH",
            "ENTITY_WITCH_DRINK",
            "ENTITY_WITCH_HURT",
            "ENTITY_WITCH_THROW",
            "ENTITY_WITHER_AMBIENT",
            "ENTITY_WITHER_BREAK_BLOCK",
            "ENTITY_WITHER_DEATH",
            "ENTITY_WITHER_HURT",
            "ENTITY_WITHER_SHOOT",
            "ENTITY_WITHER_SKELETON_AMBIENT",
            "ENTITY_WITHER_SKELETON_DEATH",
            "ENTITY_WITHER_SKELETON_HURT",
            "ENTITY_WITHER_SKELETON_STEP",
            "ENTITY_WITHER_SPAWN",
            "ENTITY_WOLF_AMBIENT",
            "ENTITY_WOLF_DEATH",
            "ENTITY_WOLF_GROWL",
            "ENTITY_WOLF_HOWL",
            "ENTITY_WOLF_HURT",
            "ENTITY_WOLF_PANT",
            "ENTITY_WOLF_SHAKE",
            "ENTITY_WOLF_STEP",
            "ENTITY_WOLF_WHINE",
            "ENTITY_ZOGLIN_AMBIENT",
            "ENTITY_ZOGLIN_ANGRY",
            "ENTITY_ZOGLIN_ATTACK",
            "ENTITY_ZOGLIN_DEATH",
            "ENTITY_ZOGLIN_HURT",
            "ENTITY_ZOGLIN_STEP",
            "ENTITY_ZOMBIE_AMBIENT",
            "ENTITY_ZOMBIE_ATTACK_IRON_DOOR",
            "ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR",
            "ENTITY_ZOMBIE_BREAK_WOODEN_DOOR",
            "ENTITY_ZOMBIE_CONVERTED_TO_DROWNED",
            "ENTITY_ZOMBIE_DEATH",
            "ENTITY_ZOMBIE_DESTROY_EGG",
            "ENTITY_ZOMBIE_HORSE_AMBIENT",
            "ENTITY_ZOMBIE_HORSE_DEATH",
            "ENTITY_ZOMBIE_HORSE_HURT",
            "ENTITY_ZOMBIE_HURT",
            "ENTITY_ZOMBIE_INFECT",
            "ENTITY_ZOMBIE_STEP",
            "ENTITY_ZOMBIE_VILLAGER_AMBIENT",
            "ENTITY_ZOMBIE_VILLAGER_CONVERTED",
            "ENTITY_ZOMBIE_VILLAGER_CURE",
            "ENTITY_ZOMBIE_VILLAGER_DEATH",
            "ENTITY_ZOMBIE_VILLAGER_HURT",
            "ENTITY_ZOMBIE_VILLAGER_STEP",
            "ENTITY_ZOMBIFIED_PIGLIN_AMBIENT",
            "ENTITY_ZOMBIFIED_PIGLIN_ANGRY",
            "ENTITY_ZOMBIFIED_PIGLIN_DEATH",
            "ENTITY_ZOMBIFIED_PIGLIN_HURT",
            "EVENT_RAID_HORN",
            "ITEM_ARMOR_EQUIP_CHAIN",
            "ITEM_ARMOR_EQUIP_DIAMOND",
            "ITEM_ARMOR_EQUIP_ELYTRA",
            "ITEM_ARMOR_EQUIP_GENERIC",
            "ITEM_ARMOR_EQUIP_GOLD",
            "ITEM_ARMOR_EQUIP_IRON",
            "ITEM_ARMOR_EQUIP_LEATHER",
            "ITEM_ARMOR_EQUIP_NETHERITE",
            "ITEM_ARMOR_EQUIP_TURTLE",
            "ITEM_AXE_SCRAPE",
            "ITEM_AXE_STRIP",
            "ITEM_AXE_WAX_OFF",
            "ITEM_BONE_MEAL_USE",
            "ITEM_BOOK_PAGE_TURN",
            "ITEM_BOOK_PUT",
            "ITEM_BOTTLE_EMPTY",
            "ITEM_BOTTLE_FILL",
            "ITEM_BOTTLE_FILL_DRAGONBREATH",
            "ITEM_BUCKET_EMPTY",
            "ITEM_BUCKET_EMPTY_AXOLOTL",
            "ITEM_BUCKET_EMPTY_FISH",
            "ITEM_BUCKET_EMPTY_LAVA",
            "ITEM_BUCKET_EMPTY_POWDER_SNOW",
            "ITEM_BUCKET_EMPTY_TADPOLE",
            "ITEM_BUCKET_FILL",
            "ITEM_BUCKET_FILL_AXOLOTL",
            "ITEM_BUCKET_FILL_FISH",
            "ITEM_BUCKET_FILL_LAVA",
            "ITEM_BUCKET_FILL_POWDER_SNOW",
            "ITEM_BUCKET_FILL_TADPOLE",
            "ITEM_BUNDLE_DROP_CONTENTS",
            "ITEM_BUNDLE_INSERT",
            "ITEM_BUNDLE_REMOVE_ONE",
            "ITEM_CHORUS_FRUIT_TELEPORT",
            "ITEM_CROP_PLANT",
            "ITEM_CROSSBOW_HIT",
            "ITEM_CROSSBOW_LOADING_END",
            "ITEM_CROSSBOW_LOADING_MIDDLE",
            "ITEM_CROSSBOW_LOADING_START",
            "ITEM_CROSSBOW_QUICK_CHARGE_1",
            "ITEM_CROSSBOW_QUICK_CHARGE_2",
            "ITEM_CROSSBOW_QUICK_CHARGE_3",
            "ITEM_CROSSBOW_SHOOT",
            "ITEM_DYE_USE",
            "ITEM_ELYTRA_FLYING",
            "ITEM_FIRECHARGE_USE",
            "ITEM_FLINTANDSTEEL_USE",
            "ITEM_GLOW_INK_SAC_USE",
            "ITEM_GOAT_HORN_PLAY",
            "ITEM_GOAT_HORN_SOUND_0",
            "ITEM_GOAT_HORN_SOUND_1",
            "ITEM_GOAT_HORN_SOUND_2",
            "ITEM_GOAT_HORN_SOUND_3",
            "ITEM_GOAT_HORN_SOUND_4",
            "ITEM_GOAT_HORN_SOUND_5",
            "ITEM_GOAT_HORN_SOUND_6",
            "ITEM_GOAT_HORN_SOUND_7",
            "ITEM_HOE_TILL",
            "ITEM_HONEYCOMB_WAX_ON",
            "ITEM_HONEY_BOTTLE_DRINK",
            "ITEM_INK_SAC_USE",
            "ITEM_LODESTONE_COMPASS_LOCK",
            "ITEM_NETHER_WART_PLANT",
            "ITEM_SHIELD_BLOCK",
            "ITEM_SHIELD_BREAK",
            "ITEM_SHOVEL_FLATTEN",
            "ITEM_SPYGLASS_STOP_USING",
            "ITEM_SPYGLASS_USE",
            "ITEM_TOTEM_USE",
            "ITEM_TRIDENT_HIT",
            "ITEM_TRIDENT_HIT_GROUND",
            "ITEM_TRIDENT_RETURN",
            "ITEM_TRIDENT_RIPTIDE_1",
            "ITEM_TRIDENT_RIPTIDE_2",
            "ITEM_TRIDENT_RIPTIDE_3",
            "ITEM_TRIDENT_THROW",
            "ITEM_TRIDENT_THUNDER",
            "MUSIC_CREATIVE",
            "MUSIC_CREDITS",
            "MUSIC_DISC_11",
            "MUSIC_DISC_13",
            "MUSIC_DISC_5",
            "MUSIC_DISC_BLOCKS",
            "MUSIC_DISC_CAT",
            "MUSIC_DISC_CHIRP",
            "MUSIC_DISC_FAR",
            "MUSIC_DISC_MALL",
            "MUSIC_DISC_MELLOHI",
            "MUSIC_DISC_OTHERSIDE",
            "MUSIC_DISC_PIGSTEP",
            "MUSIC_DISC_STAL",
            "MUSIC_DISC_STRAD",
            "MUSIC_DISC_WAIT",
            "MUSIC_DISC_WARD",
            "MUSIC_DRAGON",
            "MUSIC_END",
            "MUSIC_GAME",
            "MUSIC_MENU",
            "MUSIC_NETHER_BASALT_DELTAS",
            "MUSIC_NETHER_CRIMSON_FOREST",
            "MUSIC_NETHER_NETHER_WASTES",
            "MUSIC_NETHER_SOUL_SAND_VALLEY",
            "MUSIC_NETHER_WARPED_FOREST",
            "MUSIC_OVERWORLD_DEEP_DARK",
            "MUSIC_OVERWORLD_DRIPSTONE_CAVES",
            "MUSIC_OVERWORLD_FROZEN_PEAKS",
            "MUSIC_OVERWORLD_GROVE",
            "MUSIC_OVERWORLD_JAGGED_PEAKS",
            "MUSIC_OVERWORLD_JUNGLE_AND_FOREST",
            "MUSIC_OVERWORLD_LUSH_CAVES",
            "MUSIC_OVERWORLD_MEADOW",
            "MUSIC_OVERWORLD_OLD_GROWTH_TAIGA",
            "MUSIC_OVERWORLD_SNOWY_SLOPES",
            "MUSIC_OVERWORLD_STONY_PEAKS",
            "MUSIC_OVERWORLD_SWAMP",
            "MUSIC_UNDER_WATER",
            "PARTICLE_SOUL_ESCAPE",
            "UI_BUTTON_CLICK",
            "UI_CARTOGRAPHY_TABLE_TAKE_RESULT",
            "UI_LOOM_SELECT_PATTERN",
            "UI_LOOM_TAKE_RESULT",
            "UI_STONECUTTER_SELECT_RECIPE",
            "UI_STONECUTTER_TAKE_RESULT",
            "UI_TOAST_CHALLENGE_COMPLETE",
            "UI_TOAST_IN",
            "UI_TOAST_OUT",
            "WEATHER_RAIN",
            "WEATHER_RAIN_ABOVE"
        ]},
        "obj-com-volmit-iris-engine-object-irisstiltsettings": {"anyOf": [
            {
                "description": "Defines stilting behaviour.",
                "type": "object",
                "properties": {
                    "yMax": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "yMax\nDefines the maximum amount of blocks the object stilts verticially before overstilting and randomRange.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "yRand": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "yRand\nDefines the upper boundary for additional blocks after overstilting and/or maxStiltRange.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "overStilt": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "overStilt\nIf the place mode is set to stilt, you can over-stilt it even further into the ground. Especially useful when using fast stilt due to inaccuracies.\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "palette": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                                "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-palette",
                                "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "palette\nIf defined, stilting will be done using this block palette rather than the last layer of the object.\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iristreesize": {"anyOf": [
            {
                "description": "Sapling override object picking options",
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "description": "width\nThe width of the sapling area\n   \nInteger\n\n    \n* Default Value is 1"
                    },
                    "depth": {
                        "type": "integer",
                        "description": "depth\nThe depth of the sapling area\n   \nInteger\n\n    \n* Default Value is 1"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscaveplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "cave": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzcaves",
                        "description": "cave\nThe cave to place\n   \nIris Cave\n\n* Minimum Length allowed is 1\nMust be a valid caves (use ctrl+space for auto complete!)"
                    },
                    "breakSurface": {
                        "type": "boolean",
                        "description": "breakSurface\nIf set to true, this cave is allowed to break the surface\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "caveStartHeight": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-image-map": {"enum": []},
        "enum-block-type": {"enum": [
            "minecraft:air",
            "minecraft:stone",
            "minecraft:granite",
            "minecraft:polished_granite",
            "minecraft:diorite",
            "minecraft:polished_diorite",
            "minecraft:andesite",
            "minecraft:polished_andesite",
            "minecraft:deepslate",
            "minecraft:cobbled_deepslate",
            "minecraft:polished_deepslate",
            "minecraft:calcite",
            "minecraft:tuff",
            "minecraft:dripstone_block",
            "minecraft:grass_block",
            "minecraft:dirt",
            "minecraft:coarse_dirt",
            "minecraft:podzol",
            "minecraft:rooted_dirt",
            "minecraft:mud",
            "minecraft:crimson_nylium",
            "minecraft:warped_nylium",
            "minecraft:cobblestone",
            "minecraft:oak_planks",
            "minecraft:spruce_planks",
            "minecraft:birch_planks",
            "minecraft:jungle_planks",
            "minecraft:acacia_planks",
            "minecraft:dark_oak_planks",
            "minecraft:mangrove_planks",
            "minecraft:bamboo_planks",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:bamboo_mosaic",
            "minecraft:oak_sapling",
            "minecraft:spruce_sapling",
            "minecraft:birch_sapling",
            "minecraft:jungle_sapling",
            "minecraft:acacia_sapling",
            "minecraft:dark_oak_sapling",
            "minecraft:mangrove_propagule",
            "minecraft:bedrock",
            "minecraft:sand",
            "minecraft:red_sand",
            "minecraft:gravel",
            "minecraft:coal_ore",
            "minecraft:deepslate_coal_ore",
            "minecraft:iron_ore",
            "minecraft:deepslate_iron_ore",
            "minecraft:copper_ore",
            "minecraft:deepslate_copper_ore",
            "minecraft:gold_ore",
            "minecraft:deepslate_gold_ore",
            "minecraft:redstone_ore",
            "minecraft:deepslate_redstone_ore",
            "minecraft:emerald_ore",
            "minecraft:deepslate_emerald_ore",
            "minecraft:lapis_ore",
            "minecraft:deepslate_lapis_ore",
            "minecraft:diamond_ore",
            "minecraft:deepslate_diamond_ore",
            "minecraft:nether_gold_ore",
            "minecraft:nether_quartz_ore",
            "minecraft:ancient_debris",
            "minecraft:coal_block",
            "minecraft:raw_iron_block",
            "minecraft:raw_copper_block",
            "minecraft:raw_gold_block",
            "minecraft:amethyst_block",
            "minecraft:budding_amethyst",
            "minecraft:iron_block",
            "minecraft:copper_block",
            "minecraft:gold_block",
            "minecraft:diamond_block",
            "minecraft:netherite_block",
            "minecraft:exposed_copper",
            "minecraft:weathered_copper",
            "minecraft:oxidized_copper",
            "minecraft:cut_copper",
            "minecraft:exposed_cut_copper",
            "minecraft:weathered_cut_copper",
            "minecraft:oxidized_cut_copper",
            "minecraft:cut_copper_stairs",
            "minecraft:exposed_cut_copper_stairs",
            "minecraft:weathered_cut_copper_stairs",
            "minecraft:oxidized_cut_copper_stairs",
            "minecraft:cut_copper_slab",
            "minecraft:exposed_cut_copper_slab",
            "minecraft:weathered_cut_copper_slab",
            "minecraft:oxidized_cut_copper_slab",
            "minecraft:waxed_copper_block",
            "minecraft:waxed_exposed_copper",
            "minecraft:waxed_weathered_copper",
            "minecraft:waxed_oxidized_copper",
            "minecraft:waxed_cut_copper",
            "minecraft:waxed_exposed_cut_copper",
            "minecraft:waxed_weathered_cut_copper",
            "minecraft:waxed_oxidized_cut_copper",
            "minecraft:waxed_cut_copper_stairs",
            "minecraft:waxed_exposed_cut_copper_stairs",
            "minecraft:waxed_weathered_cut_copper_stairs",
            "minecraft:waxed_oxidized_cut_copper_stairs",
            "minecraft:waxed_cut_copper_slab",
            "minecraft:waxed_exposed_cut_copper_slab",
            "minecraft:waxed_weathered_cut_copper_slab",
            "minecraft:waxed_oxidized_cut_copper_slab",
            "minecraft:oak_log",
            "minecraft:spruce_log",
            "minecraft:birch_log",
            "minecraft:jungle_log",
            "minecraft:acacia_log",
            "minecraft:dark_oak_log",
            "minecraft:mangrove_log",
            "minecraft:mangrove_roots",
            "minecraft:muddy_mangrove_roots",
            "minecraft:crimson_stem",
            "minecraft:warped_stem",
            "minecraft:bamboo_block",
            "minecraft:stripped_oak_log",
            "minecraft:stripped_spruce_log",
            "minecraft:stripped_birch_log",
            "minecraft:stripped_jungle_log",
            "minecraft:stripped_acacia_log",
            "minecraft:stripped_dark_oak_log",
            "minecraft:stripped_mangrove_log",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:stripped_oak_wood",
            "minecraft:stripped_spruce_wood",
            "minecraft:stripped_birch_wood",
            "minecraft:stripped_jungle_wood",
            "minecraft:stripped_acacia_wood",
            "minecraft:stripped_dark_oak_wood",
            "minecraft:stripped_mangrove_wood",
            "minecraft:stripped_crimson_hyphae",
            "minecraft:stripped_warped_hyphae",
            "minecraft:stripped_bamboo_block",
            "minecraft:oak_wood",
            "minecraft:spruce_wood",
            "minecraft:birch_wood",
            "minecraft:jungle_wood",
            "minecraft:acacia_wood",
            "minecraft:dark_oak_wood",
            "minecraft:mangrove_wood",
            "minecraft:crimson_hyphae",
            "minecraft:warped_hyphae",
            "minecraft:oak_leaves",
            "minecraft:spruce_leaves",
            "minecraft:birch_leaves",
            "minecraft:jungle_leaves",
            "minecraft:acacia_leaves",
            "minecraft:dark_oak_leaves",
            "minecraft:mangrove_leaves",
            "minecraft:azalea_leaves",
            "minecraft:flowering_azalea_leaves",
            "minecraft:sponge",
            "minecraft:wet_sponge",
            "minecraft:glass",
            "minecraft:tinted_glass",
            "minecraft:lapis_block",
            "minecraft:sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:cut_sandstone",
            "minecraft:cobweb",
            "minecraft:grass",
            "minecraft:fern",
            "minecraft:azalea",
            "minecraft:flowering_azalea",
            "minecraft:dead_bush",
            "minecraft:seagrass",
            "minecraft:sea_pickle",
            "minecraft:white_wool",
            "minecraft:orange_wool",
            "minecraft:magenta_wool",
            "minecraft:light_blue_wool",
            "minecraft:yellow_wool",
            "minecraft:lime_wool",
            "minecraft:pink_wool",
            "minecraft:gray_wool",
            "minecraft:light_gray_wool",
            "minecraft:cyan_wool",
            "minecraft:purple_wool",
            "minecraft:blue_wool",
            "minecraft:brown_wool",
            "minecraft:green_wool",
            "minecraft:red_wool",
            "minecraft:black_wool",
            "minecraft:dandelion",
            "minecraft:poppy",
            "minecraft:blue_orchid",
            "minecraft:allium",
            "minecraft:azure_bluet",
            "minecraft:red_tulip",
            "minecraft:orange_tulip",
            "minecraft:white_tulip",
            "minecraft:pink_tulip",
            "minecraft:oxeye_daisy",
            "minecraft:cornflower",
            "minecraft:lily_of_the_valley",
            "minecraft:wither_rose",
            "minecraft:spore_blossom",
            "minecraft:brown_mushroom",
            "minecraft:red_mushroom",
            "minecraft:crimson_fungus",
            "minecraft:warped_fungus",
            "minecraft:crimson_roots",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:weeping_vines",
            "minecraft:twisting_vines",
            "minecraft:sugar_cane",
            "minecraft:kelp",
            "minecraft:moss_carpet",
            "minecraft:moss_block",
            "minecraft:hanging_roots",
            "minecraft:big_dripleaf",
            "minecraft:small_dripleaf",
            "minecraft:bamboo",
            "minecraft:oak_slab",
            "minecraft:spruce_slab",
            "minecraft:birch_slab",
            "minecraft:jungle_slab",
            "minecraft:acacia_slab",
            "minecraft:dark_oak_slab",
            "minecraft:mangrove_slab",
            "minecraft:bamboo_slab",
            "minecraft:bamboo_mosaic_slab",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:stone_slab",
            "minecraft:smooth_stone_slab",
            "minecraft:sandstone_slab",
            "minecraft:cut_sandstone_slab",
            "minecraft:petrified_oak_slab",
            "minecraft:cobblestone_slab",
            "minecraft:brick_slab",
            "minecraft:stone_brick_slab",
            "minecraft:mud_brick_slab",
            "minecraft:nether_brick_slab",
            "minecraft:quartz_slab",
            "minecraft:red_sandstone_slab",
            "minecraft:cut_red_sandstone_slab",
            "minecraft:purpur_slab",
            "minecraft:prismarine_slab",
            "minecraft:prismarine_brick_slab",
            "minecraft:dark_prismarine_slab",
            "minecraft:smooth_quartz",
            "minecraft:smooth_red_sandstone",
            "minecraft:smooth_sandstone",
            "minecraft:smooth_stone",
            "minecraft:bricks",
            "minecraft:bookshelf",
            "minecraft:chiseled_bookshelf",
            "minecraft:mossy_cobblestone",
            "minecraft:obsidian",
            "minecraft:torch",
            "minecraft:end_rod",
            "minecraft:chorus_plant",
            "minecraft:chorus_flower",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_stairs",
            "minecraft:spawner",
            "minecraft:chest",
            "minecraft:crafting_table",
            "minecraft:farmland",
            "minecraft:furnace",
            "minecraft:ladder",
            "minecraft:cobblestone_stairs",
            "minecraft:snow",
            "minecraft:ice",
            "minecraft:snow_block",
            "minecraft:cactus",
            "minecraft:clay",
            "minecraft:jukebox",
            "minecraft:oak_fence",
            "minecraft:spruce_fence",
            "minecraft:birch_fence",
            "minecraft:jungle_fence",
            "minecraft:acacia_fence",
            "minecraft:dark_oak_fence",
            "minecraft:mangrove_fence",
            "minecraft:bamboo_fence",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:pumpkin",
            "minecraft:carved_pumpkin",
            "minecraft:jack_o_lantern",
            "minecraft:netherrack",
            "minecraft:soul_sand",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:polished_basalt",
            "minecraft:smooth_basalt",
            "minecraft:soul_torch",
            "minecraft:glowstone",
            "minecraft:infested_stone",
            "minecraft:infested_cobblestone",
            "minecraft:infested_stone_bricks",
            "minecraft:infested_mossy_stone_bricks",
            "minecraft:infested_cracked_stone_bricks",
            "minecraft:infested_chiseled_stone_bricks",
            "minecraft:infested_deepslate",
            "minecraft:stone_bricks",
            "minecraft:mossy_stone_bricks",
            "minecraft:cracked_stone_bricks",
            "minecraft:chiseled_stone_bricks",
            "minecraft:packed_mud",
            "minecraft:mud_bricks",
            "minecraft:deepslate_bricks",
            "minecraft:cracked_deepslate_bricks",
            "minecraft:deepslate_tiles",
            "minecraft:cracked_deepslate_tiles",
            "minecraft:chiseled_deepslate",
            "minecraft:reinforced_deepslate",
            "minecraft:brown_mushroom_block",
            "minecraft:red_mushroom_block",
            "minecraft:mushroom_stem",
            "minecraft:iron_bars",
            "minecraft:chain",
            "minecraft:glass_pane",
            "minecraft:melon",
            "minecraft:vine",
            "minecraft:glow_lichen",
            "minecraft:brick_stairs",
            "minecraft:stone_brick_stairs",
            "minecraft:mud_brick_stairs",
            "minecraft:mycelium",
            "minecraft:lily_pad",
            "minecraft:nether_bricks",
            "minecraft:cracked_nether_bricks",
            "minecraft:chiseled_nether_bricks",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_stairs",
            "minecraft:sculk",
            "minecraft:sculk_vein",
            "minecraft:sculk_catalyst",
            "minecraft:sculk_shrieker",
            "minecraft:enchanting_table",
            "minecraft:end_portal_frame",
            "minecraft:end_stone",
            "minecraft:end_stone_bricks",
            "minecraft:dragon_egg",
            "minecraft:sandstone_stairs",
            "minecraft:ender_chest",
            "minecraft:emerald_block",
            "minecraft:oak_stairs",
            "minecraft:spruce_stairs",
            "minecraft:birch_stairs",
            "minecraft:jungle_stairs",
            "minecraft:acacia_stairs",
            "minecraft:dark_oak_stairs",
            "minecraft:mangrove_stairs",
            "minecraft:bamboo_stairs",
            "minecraft:bamboo_mosaic_stairs",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:command_block",
            "minecraft:beacon",
            "minecraft:cobblestone_wall",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:brick_wall",
            "minecraft:prismarine_wall",
            "minecraft:red_sandstone_wall",
            "minecraft:mossy_stone_brick_wall",
            "minecraft:granite_wall",
            "minecraft:stone_brick_wall",
            "minecraft:mud_brick_wall",
            "minecraft:nether_brick_wall",
            "minecraft:andesite_wall",
            "minecraft:red_nether_brick_wall",
            "minecraft:sandstone_wall",
            "minecraft:end_stone_brick_wall",
            "minecraft:diorite_wall",
            "minecraft:blackstone_wall",
            "minecraft:polished_blackstone_wall",
            "minecraft:polished_blackstone_brick_wall",
            "minecraft:cobbled_deepslate_wall",
            "minecraft:polished_deepslate_wall",
            "minecraft:deepslate_brick_wall",
            "minecraft:deepslate_tile_wall",
            "minecraft:anvil",
            "minecraft:chipped_anvil",
            "minecraft:damaged_anvil",
            "minecraft:chiseled_quartz_block",
            "minecraft:quartz_block",
            "minecraft:quartz_bricks",
            "minecraft:quartz_pillar",
            "minecraft:quartz_stairs",
            "minecraft:white_terracotta",
            "minecraft:orange_terracotta",
            "minecraft:magenta_terracotta",
            "minecraft:light_blue_terracotta",
            "minecraft:yellow_terracotta",
            "minecraft:lime_terracotta",
            "minecraft:pink_terracotta",
            "minecraft:gray_terracotta",
            "minecraft:light_gray_terracotta",
            "minecraft:cyan_terracotta",
            "minecraft:purple_terracotta",
            "minecraft:blue_terracotta",
            "minecraft:brown_terracotta",
            "minecraft:green_terracotta",
            "minecraft:red_terracotta",
            "minecraft:black_terracotta",
            "minecraft:barrier",
            "minecraft:light",
            "minecraft:hay_block",
            "minecraft:white_carpet",
            "minecraft:orange_carpet",
            "minecraft:magenta_carpet",
            "minecraft:light_blue_carpet",
            "minecraft:yellow_carpet",
            "minecraft:lime_carpet",
            "minecraft:pink_carpet",
            "minecraft:gray_carpet",
            "minecraft:light_gray_carpet",
            "minecraft:cyan_carpet",
            "minecraft:purple_carpet",
            "minecraft:blue_carpet",
            "minecraft:brown_carpet",
            "minecraft:green_carpet",
            "minecraft:red_carpet",
            "minecraft:black_carpet",
            "minecraft:terracotta",
            "minecraft:packed_ice",
            "minecraft:dirt_path",
            "minecraft:sunflower",
            "minecraft:lilac",
            "minecraft:rose_bush",
            "minecraft:peony",
            "minecraft:tall_grass",
            "minecraft:large_fern",
            "minecraft:white_stained_glass",
            "minecraft:orange_stained_glass",
            "minecraft:magenta_stained_glass",
            "minecraft:light_blue_stained_glass",
            "minecraft:yellow_stained_glass",
            "minecraft:lime_stained_glass",
            "minecraft:pink_stained_glass",
            "minecraft:gray_stained_glass",
            "minecraft:light_gray_stained_glass",
            "minecraft:cyan_stained_glass",
            "minecraft:purple_stained_glass",
            "minecraft:blue_stained_glass",
            "minecraft:brown_stained_glass",
            "minecraft:green_stained_glass",
            "minecraft:red_stained_glass",
            "minecraft:black_stained_glass",
            "minecraft:white_stained_glass_pane",
            "minecraft:orange_stained_glass_pane",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:lime_stained_glass_pane",
            "minecraft:pink_stained_glass_pane",
            "minecraft:gray_stained_glass_pane",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:purple_stained_glass_pane",
            "minecraft:blue_stained_glass_pane",
            "minecraft:brown_stained_glass_pane",
            "minecraft:green_stained_glass_pane",
            "minecraft:red_stained_glass_pane",
            "minecraft:black_stained_glass_pane",
            "minecraft:prismarine",
            "minecraft:prismarine_bricks",
            "minecraft:dark_prismarine",
            "minecraft:prismarine_stairs",
            "minecraft:prismarine_brick_stairs",
            "minecraft:dark_prismarine_stairs",
            "minecraft:sea_lantern",
            "minecraft:red_sandstone",
            "minecraft:chiseled_red_sandstone",
            "minecraft:cut_red_sandstone",
            "minecraft:red_sandstone_stairs",
            "minecraft:repeating_command_block",
            "minecraft:chain_command_block",
            "minecraft:magma_block",
            "minecraft:nether_wart_block",
            "minecraft:warped_wart_block",
            "minecraft:red_nether_bricks",
            "minecraft:bone_block",
            "minecraft:structure_void",
            "minecraft:shulker_box",
            "minecraft:white_shulker_box",
            "minecraft:orange_shulker_box",
            "minecraft:magenta_shulker_box",
            "minecraft:light_blue_shulker_box",
            "minecraft:yellow_shulker_box",
            "minecraft:lime_shulker_box",
            "minecraft:pink_shulker_box",
            "minecraft:gray_shulker_box",
            "minecraft:light_gray_shulker_box",
            "minecraft:cyan_shulker_box",
            "minecraft:purple_shulker_box",
            "minecraft:blue_shulker_box",
            "minecraft:brown_shulker_box",
            "minecraft:green_shulker_box",
            "minecraft:red_shulker_box",
            "minecraft:black_shulker_box",
            "minecraft:white_glazed_terracotta",
            "minecraft:orange_glazed_terracotta",
            "minecraft:magenta_glazed_terracotta",
            "minecraft:light_blue_glazed_terracotta",
            "minecraft:yellow_glazed_terracotta",
            "minecraft:lime_glazed_terracotta",
            "minecraft:pink_glazed_terracotta",
            "minecraft:gray_glazed_terracotta",
            "minecraft:light_gray_glazed_terracotta",
            "minecraft:cyan_glazed_terracotta",
            "minecraft:purple_glazed_terracotta",
            "minecraft:blue_glazed_terracotta",
            "minecraft:brown_glazed_terracotta",
            "minecraft:green_glazed_terracotta",
            "minecraft:red_glazed_terracotta",
            "minecraft:black_glazed_terracotta",
            "minecraft:white_concrete",
            "minecraft:orange_concrete",
            "minecraft:magenta_concrete",
            "minecraft:light_blue_concrete",
            "minecraft:yellow_concrete",
            "minecraft:lime_concrete",
            "minecraft:pink_concrete",
            "minecraft:gray_concrete",
            "minecraft:light_gray_concrete",
            "minecraft:cyan_concrete",
            "minecraft:purple_concrete",
            "minecraft:blue_concrete",
            "minecraft:brown_concrete",
            "minecraft:green_concrete",
            "minecraft:red_concrete",
            "minecraft:black_concrete",
            "minecraft:white_concrete_powder",
            "minecraft:orange_concrete_powder",
            "minecraft:magenta_concrete_powder",
            "minecraft:light_blue_concrete_powder",
            "minecraft:yellow_concrete_powder",
            "minecraft:lime_concrete_powder",
            "minecraft:pink_concrete_powder",
            "minecraft:gray_concrete_powder",
            "minecraft:light_gray_concrete_powder",
            "minecraft:cyan_concrete_powder",
            "minecraft:purple_concrete_powder",
            "minecraft:blue_concrete_powder",
            "minecraft:brown_concrete_powder",
            "minecraft:green_concrete_powder",
            "minecraft:red_concrete_powder",
            "minecraft:black_concrete_powder",
            "minecraft:turtle_egg",
            "minecraft:dead_tube_coral_block",
            "minecraft:dead_brain_coral_block",
            "minecraft:dead_bubble_coral_block",
            "minecraft:dead_fire_coral_block",
            "minecraft:dead_horn_coral_block",
            "minecraft:tube_coral_block",
            "minecraft:brain_coral_block",
            "minecraft:bubble_coral_block",
            "minecraft:fire_coral_block",
            "minecraft:horn_coral_block",
            "minecraft:tube_coral",
            "minecraft:brain_coral",
            "minecraft:bubble_coral",
            "minecraft:fire_coral",
            "minecraft:horn_coral",
            "minecraft:dead_brain_coral",
            "minecraft:dead_bubble_coral",
            "minecraft:dead_fire_coral",
            "minecraft:dead_horn_coral",
            "minecraft:dead_tube_coral",
            "minecraft:tube_coral_fan",
            "minecraft:brain_coral_fan",
            "minecraft:bubble_coral_fan",
            "minecraft:fire_coral_fan",
            "minecraft:horn_coral_fan",
            "minecraft:dead_tube_coral_fan",
            "minecraft:dead_brain_coral_fan",
            "minecraft:dead_bubble_coral_fan",
            "minecraft:dead_fire_coral_fan",
            "minecraft:dead_horn_coral_fan",
            "minecraft:blue_ice",
            "minecraft:conduit",
            "minecraft:polished_granite_stairs",
            "minecraft:smooth_red_sandstone_stairs",
            "minecraft:mossy_stone_brick_stairs",
            "minecraft:polished_diorite_stairs",
            "minecraft:mossy_cobblestone_stairs",
            "minecraft:end_stone_brick_stairs",
            "minecraft:stone_stairs",
            "minecraft:smooth_sandstone_stairs",
            "minecraft:smooth_quartz_stairs",
            "minecraft:granite_stairs",
            "minecraft:andesite_stairs",
            "minecraft:red_nether_brick_stairs",
            "minecraft:polished_andesite_stairs",
            "minecraft:diorite_stairs",
            "minecraft:cobbled_deepslate_stairs",
            "minecraft:polished_deepslate_stairs",
            "minecraft:deepslate_brick_stairs",
            "minecraft:deepslate_tile_stairs",
            "minecraft:polished_granite_slab",
            "minecraft:smooth_red_sandstone_slab",
            "minecraft:mossy_stone_brick_slab",
            "minecraft:polished_diorite_slab",
            "minecraft:mossy_cobblestone_slab",
            "minecraft:end_stone_brick_slab",
            "minecraft:smooth_sandstone_slab",
            "minecraft:smooth_quartz_slab",
            "minecraft:granite_slab",
            "minecraft:andesite_slab",
            "minecraft:red_nether_brick_slab",
            "minecraft:polished_andesite_slab",
            "minecraft:diorite_slab",
            "minecraft:cobbled_deepslate_slab",
            "minecraft:polished_deepslate_slab",
            "minecraft:deepslate_brick_slab",
            "minecraft:deepslate_tile_slab",
            "minecraft:scaffolding",
            "minecraft:redstone_torch",
            "minecraft:redstone_block",
            "minecraft:repeater",
            "minecraft:comparator",
            "minecraft:piston",
            "minecraft:sticky_piston",
            "minecraft:slime_block",
            "minecraft:honey_block",
            "minecraft:observer",
            "minecraft:hopper",
            "minecraft:dispenser",
            "minecraft:dropper",
            "minecraft:lectern",
            "minecraft:target",
            "minecraft:lever",
            "minecraft:lightning_rod",
            "minecraft:daylight_detector",
            "minecraft:sculk_sensor",
            "minecraft:tripwire_hook",
            "minecraft:trapped_chest",
            "minecraft:tnt",
            "minecraft:redstone_lamp",
            "minecraft:note_block",
            "minecraft:stone_button",
            "minecraft:polished_blackstone_button",
            "minecraft:oak_button",
            "minecraft:spruce_button",
            "minecraft:birch_button",
            "minecraft:jungle_button",
            "minecraft:acacia_button",
            "minecraft:dark_oak_button",
            "minecraft:mangrove_button",
            "minecraft:bamboo_button",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:stone_pressure_plate",
            "minecraft:polished_blackstone_pressure_plate",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:oak_pressure_plate",
            "minecraft:spruce_pressure_plate",
            "minecraft:birch_pressure_plate",
            "minecraft:jungle_pressure_plate",
            "minecraft:acacia_pressure_plate",
            "minecraft:dark_oak_pressure_plate",
            "minecraft:mangrove_pressure_plate",
            "minecraft:bamboo_pressure_plate",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:iron_door",
            "minecraft:oak_door",
            "minecraft:spruce_door",
            "minecraft:birch_door",
            "minecraft:jungle_door",
            "minecraft:acacia_door",
            "minecraft:dark_oak_door",
            "minecraft:mangrove_door",
            "minecraft:bamboo_door",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:iron_trapdoor",
            "minecraft:oak_trapdoor",
            "minecraft:spruce_trapdoor",
            "minecraft:birch_trapdoor",
            "minecraft:jungle_trapdoor",
            "minecraft:acacia_trapdoor",
            "minecraft:dark_oak_trapdoor",
            "minecraft:mangrove_trapdoor",
            "minecraft:bamboo_trapdoor",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:oak_fence_gate",
            "minecraft:spruce_fence_gate",
            "minecraft:birch_fence_gate",
            "minecraft:jungle_fence_gate",
            "minecraft:acacia_fence_gate",
            "minecraft:dark_oak_fence_gate",
            "minecraft:mangrove_fence_gate",
            "minecraft:bamboo_fence_gate",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:powered_rail",
            "minecraft:detector_rail",
            "minecraft:rail",
            "minecraft:activator_rail",
            "minecraft:structure_block",
            "minecraft:jigsaw",
            "minecraft:wheat",
            "minecraft:oak_sign",
            "minecraft:spruce_sign",
            "minecraft:birch_sign",
            "minecraft:jungle_sign",
            "minecraft:acacia_sign",
            "minecraft:dark_oak_sign",
            "minecraft:mangrove_sign",
            "minecraft:bamboo_sign",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:oak_hanging_sign",
            "minecraft:spruce_hanging_sign",
            "minecraft:birch_hanging_sign",
            "minecraft:jungle_hanging_sign",
            "minecraft:acacia_hanging_sign",
            "minecraft:dark_oak_hanging_sign",
            "minecraft:mangrove_hanging_sign",
            "minecraft:bamboo_hanging_sign",
            "minecraft:crimson_hanging_sign",
            "minecraft:warped_hanging_sign",
            "minecraft:dried_kelp_block",
            "minecraft:cake",
            "minecraft:white_bed",
            "minecraft:orange_bed",
            "minecraft:magenta_bed",
            "minecraft:light_blue_bed",
            "minecraft:yellow_bed",
            "minecraft:lime_bed",
            "minecraft:pink_bed",
            "minecraft:gray_bed",
            "minecraft:light_gray_bed",
            "minecraft:cyan_bed",
            "minecraft:purple_bed",
            "minecraft:blue_bed",
            "minecraft:brown_bed",
            "minecraft:green_bed",
            "minecraft:red_bed",
            "minecraft:black_bed",
            "minecraft:nether_wart",
            "minecraft:brewing_stand",
            "minecraft:cauldron",
            "minecraft:flower_pot",
            "minecraft:skeleton_skull",
            "minecraft:wither_skeleton_skull",
            "minecraft:player_head",
            "minecraft:zombie_head",
            "minecraft:creeper_head",
            "minecraft:dragon_head",
            "minecraft:piglin_head",
            "minecraft:white_banner",
            "minecraft:orange_banner",
            "minecraft:magenta_banner",
            "minecraft:light_blue_banner",
            "minecraft:yellow_banner",
            "minecraft:lime_banner",
            "minecraft:pink_banner",
            "minecraft:gray_banner",
            "minecraft:light_gray_banner",
            "minecraft:cyan_banner",
            "minecraft:purple_banner",
            "minecraft:blue_banner",
            "minecraft:brown_banner",
            "minecraft:green_banner",
            "minecraft:red_banner",
            "minecraft:black_banner",
            "minecraft:loom",
            "minecraft:composter",
            "minecraft:barrel",
            "minecraft:smoker",
            "minecraft:blast_furnace",
            "minecraft:cartography_table",
            "minecraft:fletching_table",
            "minecraft:grindstone",
            "minecraft:smithing_table",
            "minecraft:stonecutter",
            "minecraft:bell",
            "minecraft:lantern",
            "minecraft:soul_lantern",
            "minecraft:campfire",
            "minecraft:soul_campfire",
            "minecraft:shroomlight",
            "minecraft:bee_nest",
            "minecraft:beehive",
            "minecraft:honeycomb_block",
            "minecraft:lodestone",
            "minecraft:crying_obsidian",
            "minecraft:blackstone",
            "minecraft:blackstone_slab",
            "minecraft:blackstone_stairs",
            "minecraft:gilded_blackstone",
            "minecraft:polished_blackstone",
            "minecraft:polished_blackstone_slab",
            "minecraft:polished_blackstone_stairs",
            "minecraft:chiseled_polished_blackstone",
            "minecraft:polished_blackstone_bricks",
            "minecraft:polished_blackstone_brick_slab",
            "minecraft:polished_blackstone_brick_stairs",
            "minecraft:cracked_polished_blackstone_bricks",
            "minecraft:respawn_anchor",
            "minecraft:candle",
            "minecraft:white_candle",
            "minecraft:orange_candle",
            "minecraft:magenta_candle",
            "minecraft:light_blue_candle",
            "minecraft:yellow_candle",
            "minecraft:lime_candle",
            "minecraft:pink_candle",
            "minecraft:gray_candle",
            "minecraft:light_gray_candle",
            "minecraft:cyan_candle",
            "minecraft:purple_candle",
            "minecraft:blue_candle",
            "minecraft:brown_candle",
            "minecraft:green_candle",
            "minecraft:red_candle",
            "minecraft:black_candle",
            "minecraft:small_amethyst_bud",
            "minecraft:medium_amethyst_bud",
            "minecraft:large_amethyst_bud",
            "minecraft:amethyst_cluster",
            "minecraft:pointed_dripstone",
            "minecraft:ochre_froglight",
            "minecraft:verdant_froglight",
            "minecraft:pearlescent_froglight",
            "minecraft:frogspawn",
            "minecraft:water",
            "minecraft:lava",
            "minecraft:tall_seagrass",
            "minecraft:piston_head",
            "minecraft:moving_piston",
            "minecraft:wall_torch",
            "minecraft:fire",
            "minecraft:soul_fire",
            "minecraft:redstone_wire",
            "minecraft:oak_wall_sign",
            "minecraft:spruce_wall_sign",
            "minecraft:birch_wall_sign",
            "minecraft:acacia_wall_sign",
            "minecraft:jungle_wall_sign",
            "minecraft:dark_oak_wall_sign",
            "minecraft:mangrove_wall_sign",
            "minecraft:bamboo_wall_sign",
            "minecraft:oak_wall_hanging_sign",
            "minecraft:spruce_wall_hanging_sign",
            "minecraft:birch_wall_hanging_sign",
            "minecraft:acacia_wall_hanging_sign",
            "minecraft:jungle_wall_hanging_sign",
            "minecraft:dark_oak_wall_hanging_sign",
            "minecraft:mangrove_wall_hanging_sign",
            "minecraft:crimson_wall_hanging_sign",
            "minecraft:warped_wall_hanging_sign",
            "minecraft:bamboo_wall_hanging_sign",
            "minecraft:redstone_wall_torch",
            "minecraft:soul_wall_torch",
            "minecraft:nether_portal",
            "minecraft:attached_pumpkin_stem",
            "minecraft:attached_melon_stem",
            "minecraft:pumpkin_stem",
            "minecraft:melon_stem",
            "minecraft:water_cauldron",
            "minecraft:lava_cauldron",
            "minecraft:powder_snow_cauldron",
            "minecraft:end_portal",
            "minecraft:cocoa",
            "minecraft:tripwire",
            "minecraft:potted_oak_sapling",
            "minecraft:potted_spruce_sapling",
            "minecraft:potted_birch_sapling",
            "minecraft:potted_jungle_sapling",
            "minecraft:potted_acacia_sapling",
            "minecraft:potted_dark_oak_sapling",
            "minecraft:potted_mangrove_propagule",
            "minecraft:potted_fern",
            "minecraft:potted_dandelion",
            "minecraft:potted_poppy",
            "minecraft:potted_blue_orchid",
            "minecraft:potted_allium",
            "minecraft:potted_azure_bluet",
            "minecraft:potted_red_tulip",
            "minecraft:potted_orange_tulip",
            "minecraft:potted_white_tulip",
            "minecraft:potted_pink_tulip",
            "minecraft:potted_oxeye_daisy",
            "minecraft:potted_cornflower",
            "minecraft:potted_lily_of_the_valley",
            "minecraft:potted_wither_rose",
            "minecraft:potted_red_mushroom",
            "minecraft:potted_brown_mushroom",
            "minecraft:potted_dead_bush",
            "minecraft:potted_cactus",
            "minecraft:carrots",
            "minecraft:potatoes",
            "minecraft:skeleton_wall_skull",
            "minecraft:wither_skeleton_wall_skull",
            "minecraft:zombie_wall_head",
            "minecraft:player_wall_head",
            "minecraft:creeper_wall_head",
            "minecraft:dragon_wall_head",
            "minecraft:piglin_wall_head",
            "minecraft:white_wall_banner",
            "minecraft:orange_wall_banner",
            "minecraft:magenta_wall_banner",
            "minecraft:light_blue_wall_banner",
            "minecraft:yellow_wall_banner",
            "minecraft:lime_wall_banner",
            "minecraft:pink_wall_banner",
            "minecraft:gray_wall_banner",
            "minecraft:light_gray_wall_banner",
            "minecraft:cyan_wall_banner",
            "minecraft:purple_wall_banner",
            "minecraft:blue_wall_banner",
            "minecraft:brown_wall_banner",
            "minecraft:green_wall_banner",
            "minecraft:red_wall_banner",
            "minecraft:black_wall_banner",
            "minecraft:beetroots",
            "minecraft:end_gateway",
            "minecraft:frosted_ice",
            "minecraft:kelp_plant",
            "minecraft:dead_tube_coral_wall_fan",
            "minecraft:dead_brain_coral_wall_fan",
            "minecraft:dead_bubble_coral_wall_fan",
            "minecraft:dead_fire_coral_wall_fan",
            "minecraft:dead_horn_coral_wall_fan",
            "minecraft:tube_coral_wall_fan",
            "minecraft:brain_coral_wall_fan",
            "minecraft:bubble_coral_wall_fan",
            "minecraft:fire_coral_wall_fan",
            "minecraft:horn_coral_wall_fan",
            "minecraft:bamboo_sapling",
            "minecraft:potted_bamboo",
            "minecraft:void_air",
            "minecraft:cave_air",
            "minecraft:bubble_column",
            "minecraft:sweet_berry_bush",
            "minecraft:weeping_vines_plant",
            "minecraft:twisting_vines_plant",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign",
            "minecraft:potted_crimson_fungus",
            "minecraft:potted_warped_fungus",
            "minecraft:potted_crimson_roots",
            "minecraft:potted_warped_roots",
            "minecraft:candle_cake",
            "minecraft:white_candle_cake",
            "minecraft:orange_candle_cake",
            "minecraft:magenta_candle_cake",
            "minecraft:light_blue_candle_cake",
            "minecraft:yellow_candle_cake",
            "minecraft:lime_candle_cake",
            "minecraft:pink_candle_cake",
            "minecraft:gray_candle_cake",
            "minecraft:light_gray_candle_cake",
            "minecraft:cyan_candle_cake",
            "minecraft:purple_candle_cake",
            "minecraft:blue_candle_cake",
            "minecraft:brown_candle_cake",
            "minecraft:green_candle_cake",
            "minecraft:red_candle_cake",
            "minecraft:black_candle_cake",
            "minecraft:powder_snow",
            "minecraft:cave_vines",
            "minecraft:cave_vines_plant",
            "minecraft:big_dripleaf_stem",
            "minecraft:potted_azalea_bush",
            "minecraft:potted_flowering_azalea_bush"
        ]},
        "obj-com-volmit-iris-engine-object-irispyramid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "baseWidth": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irissphere": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "radius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-axis-rotation": {"enum": []},
        "erzspawners": {"enum": [
            "hot/passive",
            "structure/Woodland_Mansion",
            "frozen/cave",
            "tropical/beach",
            "frozen/passive",
            "tropical/water",
            "hot/cave",
            "structure/allay",
            "structure/witch",
            "structure/cat",
            "tropical/hostile",
            "mushroom/hostile",
            "tundra/water",
            "swamp/passive",
            "structure/swamp-hut",
            "structure/silverfish",
            "tropical/cave",
            "mushroom/cave",
            "structure/spider",
            "tundra/passive",
            "hot/hostile",
            "frozen/water",
            "structure/pillager-cage-respawn",
            "structure/skeleton",
            "skelepirate",
            "structure/pillager-cage",
            "structure/evoker",
            "structure/iglo-zombievillager",
            "tropical/passive",
            "mushroom/passive",
            "structure/zombie",
            "tundra/hostile",
            "dank",
            "temperate/hostile",
            "swamp/cave",
            "temperate/passive",
            "structure/iglo-villager",
            "mushroom/water",
            "temperate/water",
            "structure/cavespider",
            "structure/pillager-respawn",
            "hot/water",
            "hives",
            "swamp/hostile",
            "structure/guardian",
            "structure/elderguardian",
            "temperate/cave",
            "structure/villager",
            "tundra/cave",
            "structure/pillager",
            "frozen/hostile",
            "structure/vindicator",
            "swamp/water"
        ]},
        "obj-com-volmit-iris-engine-object-irisravineplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "ravine": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzravines",
                        "description": "ravine\nThe ravine to place\n   \nIris Ravine\n\n* Minimum Length allowed is 1\nMust be a valid ravines (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzobjects": {"enum": [
            "jigsaw/fossil/skull_3_coal",
            "structures/portal3",
            "jigsaw/fossil/spine_1_coal",
            "structures/portal4",
            "trees/oak/oakFancy10",
            "jigsaw/village/misc/stonehome-esw-2",
            "structures/portal5",
            "jigsaw/village/misc/stonehome-esw-1",
            "structures/portal6",
            "jigsaw/village/misc/stonehome-esw-4",
            "structures/portal7",
            "jigsaw/village/misc/stonehome-esw-3",
            "structures/portal8",
            "structures/portal9",
            "trees/birch/variantforest4",
            "trees/birch/variantforest3",
            "trees/birch/variantforest2",
            "trees/birch/variantforest1",
            "jigsaw/stronghold/path/medium-corridor",
            "jigsaw/stronghold/stairs/med-vertical-extension",
            "trees/birch/variantforest8",
            "trees/birch/variantforest7",
            "structures/portal1",
            "trees/birch/variantforest6",
            "structures/portal2",
            "trees/birch/variantforest5",
            "structures/oakspindle2",
            "structures/oakspindle1",
            "structures/oakspindle4",
            "structures/oakspindle3",
            "trees/birch/variantforest9",
            "structures/oakspindle6",
            "structures/oakspindle5",
            "structures/oakspindle7",
            "trees/mushroom/lumo10",
            "structures/kship4",
            "structures/kship2",
            "structures/kship3",
            "structures/kship1",
            "jigsaw/village/misc/end1",
            "trees/spruce/unfrostedmed3",
            "trees/spruce/unfrostedmed4",
            "trees/spruce/unfrostedmed1",
            "trees/spruce/unfrostedmed2",
            "trees/darkoak/talldrift2/objects/-o",
            "trees/darkoak/talldrift9/objects/-o",
            "jigsaw/village/desert/houses/fisher_1",
            "trees/mixed/honey9",
            "trees/acacia/savana5",
            "trees/mixed/honey5",
            "trees/mixed/honey6",
            "trees/mixed/honey7",
            "trees/mixed/honey8",
            "trees/mixed/honey1",
            "trees/mixed/honey2",
            "trees/mixed/honey3",
            "trees/mixed/honey4",
            "trees/acacia/savannaF11",
            "trees/acacia/savannaF10",
            "trees/birch/forest1",
            "trees/birch/forest2",
            "trees/birch/forest3",
            "trees/birch/forest4",
            "trees/spruce/unfrostedmed7",
            "jigsaw/pillager-outpost/watchtower",
            "trees/spruce/unfrostedmed8",
            "trees/spruce/unfrostedmed5",
            "trees/acacia/savannaF17",
            "trees/spruce/unfrostedmed6",
            "trees/acacia/savannaF16",
            "trees/acacia/savana1",
            "trees/acacia/savannaF15",
            "trees/acacia/savana2",
            "trees/acacia/savannaF14",
            "trees/acacia/savannaF13",
            "trees/acacia/savana3",
            "trees/acacia/savana4",
            "jigsaw/stronghold/rooms/chestroom2",
            "trees/oak/lponderosa8",
            "clutter/corazoncaido",
            "trees/oak/lponderosa7",
            "trees/oak/lponderosa9",
            "trees/oak/lponderosa2",
            "trees/oak/lponderosa1",
            "trees/oak/lponderosa4",
            "trees/oak/lponderosa3",
            "trees/oak/lponderosa6",
            "jigsaw/stronghold/rooms/chestroom1",
            "jigsaw/stronghold/path/cap",
            "trees/oak/lponderosa5",
            "trees/birch/antioch3b",
            "jigsaw/pillager-outpost/regular/feature_tent2",
            "jigsaw/pillager-outpost/regular/feature_tent1",
            "trees/sakura/ogbase1",
            "trees/sakura/ogbase2",
            "jigsaw/village/plains/zombie/houses/stable_1",
            "trees/birch/generic26",
            "trees/birch/generic27",
            "jigsaw/village/snowy/zombie/streets/square_01",
            "trees/birch/generic24",
            "trees/birch/generic25",
            "trees/birch/generic28",
            "trees/birch/generic29",
            "jigsaw/village/desert/streets/corner_02",
            "clutter/pumpkins6",
            "clutter/pumpkins5",
            "clutter/pumpkins4",
            "clutter/pumpkins3",
            "clutter/pumpkins2",
            "jigsaw/village/desert/streets/corner_01",
            "clutter/pumpkins1",
            "jigsaw/village/savanna/houses/weaponsmith_2",
            "jigsaw/village/savanna/houses/fisher_cottage_1",
            "trees/spruce/sfrostgeneric10",
            "jigsaw/village/savanna/houses/weaponsmith_1",
            "trees/spruce/sfrostgeneric11",
            "trees/spruce/sfrostgeneric12",
            "trees/spruce/sfrostgeneric13",
            "trees/spruce/sfrostgeneric14",
            "trees/spruce/sfrostgeneric15",
            "trees/spruce/sfrostgeneric16",
            "trees/spruce/sfrostgeneric17",
            "trees/birch/generic30",
            "trees/birch/antioch4b",
            "trees/spruce/sfrostgeneric18",
            "trees/spruce/sfrostgeneric19",
            "jigsaw/village/taiga/houses/cartographer_house_1",
            "trees/birch/generic31",
            "jigsaw/village/misc/corner1",
            "trees/willow/bt9",
            "trees/willow/bt5",
            "trees/willow/bt6",
            "trees/willow/bt7",
            "trees/willow/bt8",
            "void/gvoid",
            "trees/spruce/aridgeneric4",
            "trees/willow/bt1",
            "trees/spruce/aridgeneric5",
            "trees/willow/bt2",
            "trees/willow/bt3",
            "trees/willow/bt4",
            "trees/spruce/aridgeneric1",
            "trees/spruce/aridgeneric2",
            "trees/spruce/aridgeneric3",
            "trees/spruce/sfrostgeneric20",
            "trees/birch/antioch5b",
            "clutter/sphinx1",
            "trees/mixed/pollup13",
            "trees/mixed/pollup12",
            "trees/mixed/pollup11",
            "trees/mixed/pollup10",
            "structures/portal10",
            "jigsaw/village/snowy/houses/tannery_1",
            "trees/birch/antioch6b",
            "trees/birch/generic11",
            "trees/oak/deadfallen1",
            "trees/birch/generic12",
            "jigsaw/village/taiga/houses/butcher_shop_1",
            "trees/birch/generic10",
            "trees/birch/generic15",
            "trees/birch/generic16",
            "trees/birch/generic13",
            "trees/birch/generic14",
            "trees/birch/generic19",
            "jigsaw/village/decays/grass_9x9",
            "trees/birch/generic17",
            "trees/birch/generic18",
            "structures/shiprightsideupfronthalf",
            "trees/darkoak/smolgeneric11",
            "trees/darkoak/smolgeneric12",
            "trees/darkoak/smolgeneric10",
            "structures/BarcoPirataGriffer",
            "trees/darkoak/smolgeneric15",
            "trees/darkoak/smolgeneric16",
            "trees/darkoak/smolgeneric13",
            "trees/darkoak/smolgeneric14",
            "jigsaw/village/plains/houses/tannery_1",
            "trees/birch/generic22",
            "trees/birch/generic23",
            "trees/birch/generic20",
            "trees/birch/generic21",
            "jigsaw/stronghold/rooms/chestroom2-trap",
            "trees/mixed/smoakog80",
            "jigsaw/village/snowy/houses/temple_1",
            "jigsaw/stronghold/path/stair-split",
            "trees/acacia/thin1",
            "trees/darkoak/smolgeneric19",
            "trees/darkoak/smolgeneric17",
            "trees/darkoak/smolgeneric18",
            "trees/darkoak/smolgeneric22",
            "jigsaw/village/plains/houses/butcher_shop_2",
            "trees/darkoak/smolgeneric23",
            "trees/darkoak/smolgeneric20",
            "trees/darkoak/smolgeneric21",
            "jigsaw/village/misc/logger-ns-1",
            "jigsaw/village/desert/zombie/streets/crossroad_03",
            "trees/darkoak/smolgeneric26",
            "jigsaw/village/misc/logger-ns-2",
            "jigsaw/village/desert/zombie/streets/crossroad_02",
            "trees/darkoak/smolgeneric27",
            "jigsaw/village/misc/logger-ns-3",
            "jigsaw/village/plains/houses/butcher_shop_1",
            "trees/darkoak/smolgeneric24",
            "jigsaw/village/misc/logger-ns-4",
            "trees/darkoak/smolgeneric25",
            "jigsaw/village/misc/logger-ns-5",
            "trees/darkoak/talldrift9",
            "trees/darkoak/talldrift8",
            "trees/darkoak/talldrift7",
            "trees/darkoak/talldrift6",
            "jigsaw/village/desert/zombie/streets/crossroad_01",
            "trees/darkoak/smolgeneric28",
            "trees/darkoak/smolgeneric29",
            "jigsaw/village/plains/zombie/streets/straight_02",
            "jigsaw/village/plains/zombie/streets/straight_03",
            "jigsaw/village/plains/zombie/streets/straight_04",
            "trees/darkoak/smolgeneric31",
            "jigsaw/village/plains/zombie/streets/straight_05",
            "jigsaw/village/plains/zombie/streets/straight_01",
            "trees/oak/mdeadwood2",
            "trees/oak/mdeadwood3",
            "jigsaw/village/plains/zombie/streets/straight_06",
            "jigsaw/village/snowy/zombie/houses/medium_house_2",
            "jigsaw/village/snowy/zombie/houses/medium_house_3",
            "trees/birch/variantforest20",
            "trees/darkoak/smolgeneric30",
            "jigsaw/village/snowy/zombie/houses/medium_house_1",
            "trees/oak/mdeadwood1",
            "trees/mushroom/xredgeneric10",
            "trees/mixed/dotree3",
            "trees/mixed/dotree4",
            "trees/mixed/dotree5",
            "trees/mixed/dotree6",
            "structures/presentsupermassivebluea12",
            "trees/mixed/dotree1",
            "trees/mixed/dotree2",
            "trees/birch/variantforest18",
            "clutter/log",
            "trees/birch/variantforest19",
            "trees/spruce/lushgenericpine10",
            "jigsaw/village/savanna/streets/turn_01",
            "trees/birch/variantforest12",
            "trees/birch/variantforest13",
            "trees/birch/variantforest10",
            "trees/birch/variantforest11",
            "trees/birch/variantforest16",
            "trees/birch/variantforest17",
            "trees/birch/variantforest14",
            "clutter/genericgrave1",
            "trees/birch/variantforest15",
            "trees/darkoak/talldrift1",
            "trees/darkoak/talldrift5",
            "trees/darkoak/talldrift4",
            "trees/darkoak/talldrift3",
            "trees/darkoak/talldrift2",
            "jigsaw/village/plains/houses/tool_smith_1",
            "clutter/shrub10",
            "clutter/shrub12",
            "clutter/shrub11",
            "jigsaw/village/plains/houses/large_farm_1",
            "clutter/obelisk6",
            "clutter/obelisk5",
            "clutter/obelisk7",
            "clutter/obelisk2",
            "clutter/obelisk1",
            "clutter/obelisk4",
            "clutter/obelisk3",
            "jigsaw/village/savanna/houses/cartographer_1",
            "trees/mixed/dotree7",
            "trees/mixed/dotree8",
            "trees/mixed/dotree9",
            "jigsaw/village/savanna/houses/armorer_1",
            "jigsaw/stronghold/path/tee-cross",
            "jigsaw/village/plains/houses/weaponsmith_1",
            "jigsaw/village/plains/houses/temple_3",
            "jigsaw/village/plains/houses/temple_4",
            "trees/mixed/medbleedingserralita1",
            "trees/mixed/medbleedingserralita2",
            "jigsaw/village/plains/houses/meeting_point_4",
            "trees/oak/smol10",
            "jigsaw/village/plains/houses/meeting_point_5",
            "trees/oak/smol11",
            "clutter/grave1",
            "structures/tentaclecold8",
            "structures/tentaclecold7",
            "structures/tentaclecold6",
            "structures/tentaclecold5",
            "trees/bonsai/smfallen1",
            "jigsaw/village/taiga/zombie/houses/small_house_1",
            "jigsaw/village/taiga/zombie/houses/small_house_2",
            "jigsaw/village/taiga/zombie/houses/small_house_3",
            "trees/oak/smol12",
            "trees/oak/smol13",
            "trees/oak/smol14",
            "trees/mushroom/blackgeneric10",
            "trees/oak/smol15",
            "jigsaw/village/desert/streets/turn_01",
            "jigsaw/village/desert/houses/tannery_1",
            "jigsaw/stronghold/portal/main",
            "structures/tentaclecold4",
            "trees/oak/croak11",
            "structures/tentaclecold3",
            "structures/shiprightsideupbackhalfdegraded",
            "trees/oak/croak12",
            "jigsaw/village/savanna/zombie/streets/split_02",
            "structures/tentaclecold2",
            "jigsaw/village/savanna/zombie/streets/split_01",
            "structures/tentaclecold1",
            "structures/shipsidewaysfulldegraded",
            "trees/oak/croak10",
            "trees/oak/croak15",
            "trees/oak/croak16",
            "trees/oak/croak13",
            "trees/oak/croak14",
            "structures/presentsupermassivepurple5",
            "jigsaw/underwater-ruin/brick_8",
            "trees/mixed/bleedingserralita4",
            "jigsaw/underwater-ruin/brick_7",
            "trees/mixed/bleedingserralita3",
            "jigsaw/underwater-ruin/brick_6",
            "trees/mixed/bleedingserralita6",
            "jigsaw/underwater-ruin/brick_5",
            "trees/mixed/bleedingserralita5",
            "trees/mixed/bleedingserralita8",
            "trees/mixed/bleedingserralita7",
            "jigsaw/village/taiga/decoration_6",
            "jigsaw/village/taiga/decoration_5",
            "trees/mixed/bleedingserralita9",
            "jigsaw/village/taiga/decoration_4",
            "jigsaw/village/taiga/decoration_3",
            "jigsaw/village/taiga/decoration_2",
            "jigsaw/igloo/bottom",
            "jigsaw/village/taiga/decoration_1",
            "jigsaw/village/taiga/zombie/houses/small_house_4",
            "jigsaw/underwater-ruin/brick_4",
            "structures/cave6",
            "jigsaw/village/taiga/zombie/houses/small_house_5",
            "jigsaw/underwater-ruin/brick_3",
            "jigsaw/underwater-ruin/brick_2",
            "structures/cave4",
            "trees/mixed/bleedingserralita2",
            "jigsaw/underwater-ruin/brick_1",
            "structures/cave5",
            "trees/mixed/bleedingserralita1",
            "jigsaw/underwater-ruin/warm_2",
            "structures/cave2",
            "jigsaw/underwater-ruin/warm_1",
            "structures/cave3",
            "structures/cave1",
            "trees/mixed/medbleedingserralita5",
            "trees/mixed/medbleedingserralita6",
            "trees/mushroom/purplegeneric10",
            "jigsaw/underwater-ruin/warm_8",
            "trees/mixed/medbleedingserralita3",
            "jigsaw/underwater-ruin/warm_7",
            "trees/mixed/medbleedingserralita4",
            "jigsaw/underwater-ruin/warm_6",
            "trees/mixed/medbleedingserralita9",
            "jigsaw/underwater-ruin/warm_5",
            "jigsaw/underwater-ruin/warm_4",
            "trees/mixed/medbleedingserralita7",
            "jigsaw/underwater-ruin/warm_3",
            "trees/mixed/medbleedingserralita8",
            "jigsaw/village/taiga/zombie/houses/weaponsmith_2",
            "trees/mixed/tourmalineproblem1",
            "trees/mixed/tourmalineproblem2",
            "clutter/camp5",
            "clutter/medtourmaclutt2",
            "clutter/medtourmaclutt3",
            "clutter/medtourmaclutt4",
            "clutter/camp3",
            "clutter/medtourmaclutt5",
            "clutter/camp4",
            "clutter/camp1",
            "clutter/medtourmaclutt6",
            "jigsaw/stronghold/room/stairs-up",
            "clutter/medtourmaclutt7",
            "clutter/camp2",
            "clutter/medtourmaclutt8",
            "clutter/medtourmaclutt9",
            "clutter/medtourmaclutt1",
            "trees/darkoak/smolgeneric1",
            "jigsaw/village/taiga/houses/tannery_1",
            "trees/darkoak/smolgeneric2",
            "trees/darkoak/smolgeneric3",
            "jigsaw/village/snowy/houses/masons_house_2",
            "trees/darkoak/smolgeneric4",
            "jigsaw/village/snowy/houses/masons_house_1",
            "trees/darkoak/smolgeneric5",
            "trees/darkoak/smolgeneric6",
            "trees/darkoak/smolgeneric7",
            "trees/darkoak/smolgeneric8",
            "trees/darkoak/smolgeneric9",
            "jigsaw/stronghold/wall-fixture/5x3/lantern",
            "trees/oak/mroofed10",
            "jigsaw/village/taiga/houses/medium_house_3",
            "jigsaw/village/taiga/houses/medium_house_4",
            "jigsaw/village/taiga/houses/medium_house_1",
            "jigsaw/village/taiga/houses/medium_house_2",
            "jigsaw/fossil/skull_1_coal",
            "structures/deepslate3",
            "structures/deepslate2",
            "jigsaw/stronghold/rooms/library",
            "jigsaw/igloo/middle",
            "structures/shipsidewaysfronthalf",
            "structures/deepslate1",
            "trees/oak/mroofed11",
            "jigsaw/stronghold/path/iron-door2",
            "trees/oak/mroofed12",
            "trees/sproak/generic10",
            "trees/sproak/generic12",
            "trees/sproak/generic11",
            "jigsaw/village/decays/grass_11x13",
            "jigsaw/stronghold/room/sleeping-quarters",
            "jigsaw/mineshaft/way_rails",
            "structures/shipwithmastdegraded",
            "clutter/bonespire20",
            "jigsaw/village/taiga/zombie/houses/cartographer_house_1",
            "clutter/oakshrub4",
            "clutter/oakshrub3",
            "trees/oak/omni1",
            "clutter/oakshrub2",
            "clutter/oakshrub1",
            "clutter/ellipsoid1",
            "jigsaw/stronghold/wall-fixture/5x3/brew-set",
            "trees/darkoak/floral1",
            "clutter/bonespire14",
            "trees/darkoak/medgeneric2",
            "clutter/bonespire15",
            "trees/darkoak/medgeneric1",
            "clutter/bonespire16",
            "trees/darkoak/medgeneric4",
            "clutter/bonespire17",
            "trees/darkoak/medgeneric3",
            "clutter/bonespire18",
            "trees/darkoak/medgeneric6",
            "clutter/bonespire19",
            "jigsaw/village/misc/logger-e-5",
            "trees/darkoak/medgeneric5",
            "jigsaw/village/misc/logger-e-4",
            "trees/darkoak/medgeneric8",
            "jigsaw/village/misc/logger-e-3",
            "trees/darkoak/medgeneric7",
            "jigsaw/stronghold/ceiling/5x5/bar-lamp",
            "trees/darkoak/medgeneric9",
            "jigsaw/stronghold/path/wood-door",
            "clutter/bonespire10",
            "clutter/bonespire11",
            "clutter/bonespire12",
            "jigsaw/stronghold/path/long-corridor",
            "clutter/bonespire13",
            "jigsaw/mineshaft/way_chest",
            "trees/bonsai/big-6",
            "trees/bonsai/big-7",
            "trees/bonsai/big-4",
            "trees/bonsai/big-5",
            "trees/bonsai/big-2",
            "trees/bonsai/big-3",
            "trees/bonsai/big-1",
            "jigsaw/village/misc/logger-e-2",
            "jigsaw/village/misc/logger-e-1",
            "clutter/arbusto2",
            "trees/mushroom/xredgeneric8",
            "clutter/arbusto3",
            "jigsaw/igloo/top1",
            "trees/mushroom/xredgeneric7",
            "trees/mushroom/xredgeneric6",
            "clutter/arbusto1",
            "trees/mushroom/xredgeneric5",
            "clutter/stoneclutt5",
            "trees/mixed/AmyLarge3",
            "trees/mushroom/xredgeneric4",
            "clutter/stoneclutt6",
            "trees/mixed/AmyLarge2",
            "trees/mushroom/xredgeneric3",
            "clutter/stoneclutt7",
            "jigsaw/igloo/top2",
            "trees/mixed/AmyLarge1",
            "trees/mushroom/xredgeneric2",
            "trees/mushroom/xredgeneric1",
            "clutter/stoneclutt1",
            "trees/mixed/AmyLarge7",
            "trees/oak/sponderosa9",
            "clutter/stoneclutt2",
            "trees/mixed/AmyLarge6",
            "trees/oak/sponderosa8",
            "clutter/stoneclutt3",
            "trees/mixed/AmyLarge5",
            "clutter/stoneclutt4",
            "trees/mixed/AmyLarge4",
            "trees/mixed/AmyLarge8",
            "trees/mushroom/xredgeneric9",
            "jigsaw/village/snowy/zombie/streets/straight_01",
            "jigsaw/village/snowy/zombie/streets/straight_02",
            "jigsaw/village/snowy/zombie/streets/straight_03",
            "trees/mangrove/mangrove19",
            "jigsaw/village/snowy/zombie/streets/straight_04",
            "trees/mangrove/mangrove18",
            "trees/mangrove/mangrove17",
            "jigsaw/village/snowy/zombie/streets/straight_06",
            "trees/mangrove/mangrove16",
            "jigsaw/underwater-ruin/big_brick_8",
            "trees/mangrove/mangrove15",
            "jigsaw/village/snowy/zombie/streets/straight_08",
            "trees/mangrove/mangrove14",
            "trees/mixed/AmyNormal10",
            "trees/mangrove/mangrove13",
            "trees/mangrove/mangrove12",
            "trees/mixed/AmyNormal12",
            "trees/mangrove/mangrove11",
            "jigsaw/village/plains/houses/animal_pen_1",
            "trees/mixed/AmyNormal11",
            "trees/mangrove/mangrove10",
            "jigsaw/village/plains/houses/animal_pen_2",
            "jigsaw/village/plains/houses/animal_pen_3",
            "jigsaw/village/desert/houses/medium_house_2",
            "jigsaw/underwater-ruin/big_brick_2",
            "trees/mixed/tredwood10",
            "jigsaw/village/desert/houses/medium_house_1",
            "jigsaw/underwater-ruin/big_brick_3",
            "jigsaw/underwater-ruin/big_brick_1",
            "trees/oak/mponderosa7",
            "trees/oak/mponderosa6",
            "trees/oak/mponderosa9",
            "trees/oak/mponderosa8",
            "trees/oak/mponderosa3",
            "trees/oak/mponderosa2",
            "trees/oak/mponderosa5",
            "trees/oak/mponderosa4",
            "trees/mangrove/mangrove20",
            "trees/oak/mponderosa1",
            "clutter/tntower1",
            "structures/presentred13",
            "trees/oak/sponderosa1",
            "trees/oak/sponderosa3",
            "trees/oak/sponderosa2",
            "trees/mixed/pollup8",
            "trees/oak/sponderosa5",
            "trees/mixed/pollup9",
            "trees/oak/sponderosa4",
            "trees/oak/sponderosa7",
            "trees/oak/sponderosa6",
            "jigsaw/village/misc/lanterns-x-5",
            "jigsaw/village/misc/lanterns-x-3",
            "jigsaw/village/savanna/houses/shepherd_1",
            "jigsaw/village/misc/lanterns-x-4",
            "jigsaw/village/misc/lanterns-x-1",
            "trees/sproak/sp1",
            "jigsaw/village/misc/lanterns-x-2",
            "jigsaw/stronghold/path/small-corridor2",
            "trees/sproak/sp5",
            "trees/sproak/sp4",
            "trees/sproak/sp3",
            "trees/sproak/sp2",
            "trees/mixed/pollup4",
            "trees/mixed/pollup5",
            "trees/mixed/pollup6",
            "trees/mixed/pollup7",
            "trees/sproak/sp6",
            "jigsaw/village/taiga/houses/fletcher_house_1",
            "trees/mixed/pollup1",
            "trees/mixed/pollup2",
            "trees/mixed/pollup3",
            "trees/mixed/tourmalinelarge10",
            "trees/mushroom/mushclut10",
            "clutter/shrub3",
            "clutter/shrub2",
            "clutter/shrub1",
            "trees/bonsai/frolow13",
            "trees/bonsai/frolow14",
            "jigsaw/stronghold/path/corridor-cross",
            "trees/bonsai/frolow11",
            "trees/bonsai/frolow12",
            "trees/bonsai/frolow10",
            "trees/darkoak/tallgeneric1",
            "trees/darkoak/tallgeneric2",
            "trees/bonsai/frolow15",
            "trees/bonsai/frolow16",
            "trees/oak/smdeadwilt1",
            "jigsaw/village/plains/houses/fisher_cottage_1",
            "jigsaw/stronghold/wall-fixture/5x3/chest",
            "trees/oak/troofed10",
            "jigsaw/stronghold/path/fancy-cross",
            "structures/tentaclefire6",
            "trees/mushroom/ice6",
            "structures/tentaclefire5",
            "trees/mushroom/ice7",
            "structures/tentaclefire4",
            "trees/mushroom/ice8",
            "structures/tentaclefire3",
            "trees/mushroom/ice9",
            "structures/tentaclefire2",
            "structures/tentaclefire1",
            "trees/spruce/sprucetree-1",
            "trees/mixed/largebleedingserralita1",
            "trees/spruce/sprucetree-4",
            "trees/spruce/sprucetree-5",
            "trees/mixed/largebleedingserralita3",
            "trees/spruce/sprucetree-2",
            "trees/mixed/largebleedingserralita2",
            "trees/spruce/sprucetree-3",
            "trees/mushroom/ice1",
            "structures/bonehand3",
            "trees/spruce/sprucetree-8",
            "trees/mushroom/ice2",
            "structures/bonehand2",
            "trees/spruce/sprucetree-9",
            "trees/mushroom/ice3",
            "trees/spruce/sprucetree-6",
            "trees/mushroom/ice4",
            "trees/spruce/sprucetree-7",
            "trees/mushroom/ice5",
            "structures/bonehand1",
            "jigsaw/village/desert/houses/fletcher_house_1",
            "trees/mixed/largebleedingserralita5",
            "light",
            "trees/mixed/largebleedingserralita4",
            "clutter/shrub7",
            "clutter/shrub6",
            "clutter/shrub5",
            "jigsaw/village/snowy/streets/turn_01",
            "clutter/shrub4",
            "clutter/shrub9",
            "clutter/shrub8",
            "jigsaw/village/savanna/town_centers/meeting_point_3",
            "trees/jungle/vgeneric19",
            "jigsaw/village/savanna/town_centers/meeting_point_4",
            "trees/jungle/vgeneric18",
            "jigsaw/village/savanna/town_centers/meeting_point_1",
            "jigsaw/village/savanna/town_centers/meeting_point_2",
            "jigsaw/village/snowy/houses/small_house_4",
            "structures/crystal10",
            "jigsaw/village/snowy/houses/small_house_3",
            "jigsaw/village/snowy/houses/small_house_2",
            "jigsaw/village/snowy/houses/small_house_1",
            "jigsaw/village/snowy/houses/small_house_8",
            "jigsaw/village/snowy/houses/small_house_7",
            "jigsaw/village/snowy/houses/small_house_6",
            "trees/jungle/vgeneric20",
            "jigsaw/village/snowy/houses/small_house_5",
            "trees/jungle/vgeneric22",
            "trees/jungle/vgeneric21",
            "clutter/brksphinx1",
            "jigsaw/village/snowy/streets/square_01",
            "structures/presentmediumred15",
            "clutter/stoneboulder11",
            "clutter/stoneboulder12",
            "clutter/stoneboulder10",
            "clutter/savrock8",
            "clutter/statue-villager-acacia",
            "clutter/savrock7",
            "clutter/arbusto4",
            "clutter/arbusto5",
            "structures/shipgenericu",
            "structures/shipgenericw",
            "trees/jungle/vgeneric11",
            "trees/jungle/vgeneric10",
            "trees/jungle/vgeneric13",
            "trees/jungle/vgeneric12",
            "jigsaw/pillager-outpost/regular/feature_targets",
            "trees/jungle/vgeneric15",
            "jigsaw/stronghold/room/stairs-down",
            "trees/jungle/vgeneric14",
            "structures/shipgenericr",
            "trees/jungle/vgeneric17",
            "trees/jungle/vgeneric16",
            "clutter/savrock4",
            "clutter/savrock3",
            "clutter/savrock6",
            "clutter/savrock5",
            "clutter/stoneboulder15",
            "clutter/savrock2",
            "clutter/stoneboulder13",
            "clutter/stoneboulder14",
            "clutter/savrock1",
            "jigsaw/stronghold/path/tee-cross2",
            "jigsaw/village/misc/hay-ne-1",
            "jigsaw/village/taiga/zombie/houses/tool_smith_1",
            "jigsaw/village/misc/hay-ne-2",
            "jigsaw/village/misc/hay-ne-3",
            "jigsaw/village/misc/hay-ne-4",
            "jigsaw/village/misc/hay-ne-5",
            "structures/tower",
            "structures/presentmediumbluea18",
            "jigsaw/village/plains/houses/armorer_house_1",
            "trees/darkoak/talldrift1/objects/-o",
            "clutter/coralpurp3",
            "trees/spruce/mevergreen1",
            "trees/oak/denmyre2",
            "clutter/coralpurp2",
            "trees/spruce/mevergreen2",
            "trees/oak/denmyre3",
            "jigsaw/village/snowy/zombie/streets/crossroad_01",
            "jigsaw/village/snowy/zombie/streets/crossroad_02",
            "trees/oak/denmyre1",
            "clutter/coralpurp1",
            "trees/oak/denmyre8",
            "structures/shipupsidedownfulldegraded",
            "trees/oak/denmyre9",
            "trees/oak/denmyre6",
            "jigsaw/village/taiga/zombie/town_centers/meeting_point_2",
            "trees/oak/denmyre7",
            "trees/spruce/mevergreen3",
            "trees/oak/denmyre4",
            "trees/oak/denmyre5",
            "trees/spruce/xmasbaby5",
            "structures/islhead1",
            "trees/spruce/xmasbaby4",
            "trees/spruce/xmasbaby1",
            "trees/spruce/xmasbaby3",
            "trees/spruce/xmasbaby2",
            "jigsaw/village/taiga/zombie/houses/shepherds_house_1",
            "trees/birch/antioch12",
            "trees/birch/antioch13",
            "trees/birch/antioch10",
            "trees/birch/antioch11",
            "trees/jungle/mgeneric1",
            "jigsaw/village/taiga/zombie/town_centers/meeting_point_1",
            "trees/acacia/vexed3",
            "clutter/gravelsplotch4",
            "trees/jungle/mgeneric3",
            "trees/acacia/vexed2",
            "trees/jungle/mgeneric2",
            "trees/acacia/vexed1",
            "trees/jungle/mgeneric4",
            "clutter/gravelsplotch1",
            "clutter/gravelsplotch2",
            "clutter/gravelsplotch3",
            "jigsaw/village/snowy/zombie/streets/crossroad_03",
            "jigsaw/village/snowy/zombie/streets/crossroad_04",
            "jigsaw/village/snowy/zombie/streets/crossroad_05",
            "jigsaw/village/snowy/zombie/streets/crossroad_06",
            "clutter/lilly",
            "jigsaw/village/plains/houses/accessory_1",
            "jigsaw/pillager-outpost/overgrown/tent",
            "structures/presentsupermassivegreen9",
            "trees/mushroom/redgeneric1",
            "trees/mushroom/redgeneric2",
            "trees/mushroom/redgeneric5",
            "trees/mushroom/redgeneric6",
            "trees/mushroom/redgeneric3",
            "trees/mushroom/redgeneric4",
            "trees/mushroom/redgeneric9",
            "trees/mushroom/redgeneric7",
            "trees/mushroom/redgeneric8",
            "trees/birch/antioch9",
            "jigsaw/village/misc/bland-nes-1",
            "jigsaw/village/misc/bland-nes-2",
            "trees/birch/smallgeneric11",
            "trees/birch/smallgeneric10",
            "jigsaw/stronghold/path/4way-spiral-staircase",
            "jigsaw/village/taiga/houses/animal_pen_1",
            "jigsaw/village/misc/bland-nes-5",
            "jigsaw/village/misc/bland-nes-3",
            "jigsaw/village/misc/bland-nes-4",
            "clutter/boulder10",
            "clutter/boulder11",
            "jigsaw/underwater-ruin/big_mossy_8",
            "jigsaw/underwater-ruin/big_mossy_2",
            "jigsaw/underwater-ruin/big_mossy_3",
            "structures/presentsupermassiveyellowa2",
            "clutter/boulder12",
            "clutter/boulder13",
            "clutter/boulder14",
            "clutter/boulder15",
            "jigsaw/underwater-ruin/big_mossy_1",
            "jigsaw/village/misc/bland-e-3",
            "structures/shipupsidedownbackhalf",
            "jigsaw/village/misc/bland-e-2",
            "jigsaw/stronghold/path/small-corridor",
            "jigsaw/village/misc/bland-e-5",
            "jigsaw/village/misc/bland-e-4",
            "jigsaw/village/misc/bland-e-1",
            "jigsaw/village/desert/town_centers/meeting_point_1",
            "jigsaw/village/desert/town_centers/meeting_point_3",
            "jigsaw/village/desert/town_centers/meeting_point_2",
            "jigsaw/stronghold/wall-fixture/5x3/anvil-furnace",
            "trees/sakura/mlarge8",
            "trees/birch/antioch4",
            "trees/birch/generic4",
            "trees/sakura/mlarge9",
            "trees/birch/generic5",
            "trees/birch/antioch3",
            "trees/birch/antioch2",
            "trees/birch/generic2",
            "trees/birch/generic3",
            "trees/birch/antioch1",
            "trees/sakura/mlarge4",
            "trees/birch/antioch8",
            "trees/sakura/mlarge5",
            "trees/birch/generic1",
            "trees/birch/antioch7",
            "trees/sakura/mlarge6",
            "trees/birch/antioch6",
            "trees/sakura/mlarge7",
            "trees/birch/antioch5",
            "trees/sakura/mlarge1",
            "trees/sakura/mlarge2",
            "trees/sakura/mlarge3",
            "trees/birch/generic8",
            "trees/birch/generic9",
            "trees/birch/generic6",
            "trees/birch/generic7",
            "jigsaw/village/desert/houses/small_house_1",
            "trees/oak/smdeadwood2",
            "trees/oak/smdeadwood1",
            "jigsaw/village/desert/houses/small_house_8",
            "jigsaw/village/plains/zombie/town_centers/fountain_01",
            "trees/oak/smdeadwood3",
            "jigsaw/village/desert/houses/small_house_6",
            "jigsaw/village/desert/houses/small_house_7",
            "jigsaw/village/desert/houses/small_house_4",
            "jigsaw/village/desert/houses/small_house_5",
            "jigsaw/village/desert/houses/small_house_2",
            "jigsaw/village/desert/houses/small_house_3",
            "structures/shipgenericg",
            "jigsaw/village/misc/logger-ne-1",
            "jigsaw/village/misc/logger-ne-2",
            "jigsaw/stronghold/jail/1",
            "jigsaw/village/misc/logger-ne-3",
            "jigsaw/stronghold/jail/2",
            "trees/oak/generic4",
            "jigsaw/village/misc/logger-ne-4",
            "jigsaw/stronghold/jail/3",
            "trees/oak/generic3",
            "jigsaw/village/misc/logger-ne-5",
            "jigsaw/stronghold/jail/4",
            "trees/oak/generic6",
            "jigsaw/stronghold/jail/5",
            "trees/oak/generic5",
            "jigsaw/stronghold/jail/6",
            "jigsaw/stronghold/jail/7",
            "jigsaw/stronghold/jail/8",
            "trees/oak/generic2",
            "jigsaw/stronghold/jail/9",
            "structures/shipgenericc",
            "trees/oak/generic1",
            "trees/jungle/spalm4",
            "trees/jungle/spalm3",
            "trees/jungle/spalm2",
            "trees/jungle/spalm1",
            "trees/darkoak/generic9",
            "trees/jungle/cocogeneric1",
            "trees/darkoak/generic8",
            "trees/jungle/cocogeneric2",
            "trees/darkoak/generic7",
            "trees/darkoak/generic6",
            "structures/presentsupermassiveorange7",
            "trees/darkoak/generic5",
            "trees/jungle/cocogeneric5",
            "trees/darkoak/generic4",
            "trees/darkoak/generic3",
            "trees/jungle/cocogeneric3",
            "trees/darkoak/generic2",
            "trees/jungle/spalm5",
            "trees/jungle/cocogeneric4",
            "trees/darkoak/generic1",
            "trees/jungle/nh-lgeneric1",
            "trees/jungle/nh-lgeneric2",
            "trees/jungle/nh-lgeneric3",
            "trees/jungle/nh-lgeneric5",
            "jigsaw/stronghold/portal/top",
            "jigsaw/village/taiga/zombie/houses/large_farm_2",
            "trees/sakura/genericsak5",
            "jigsaw/village/plains/zombie/houses/animal_pen_3",
            "trees/sakura/genericsak4",
            "trees/spruce/denmyre12",
            "trees/spruce/denmyre13",
            "trees/spruce/denmyre10",
            "trees/spruce/denmyre11",
            "trees/spruce/denmyre16",
            "trees/spruce/denmyre14",
            "structures/shipwithmast",
            "trees/spruce/denmyre15",
            "jigsaw/village/plains/streets/turn_01",
            "trees/mixed/sandyjungle4",
            "structures/presentsupermassivepurplea6",
            "jigsaw/village/plains/zombie/streets/corner_03",
            "jigsaw/village/plains/zombie/streets/corner_01",
            "jigsaw/village/plains/zombie/streets/corner_02",
            "jigsaw/village/misc/bland-ns-3",
            "jigsaw/village/misc/bland-ns-2",
            "jigsaw/village/misc/bland-ns-5",
            "jigsaw/village/misc/bland-ns-4",
            "jigsaw/village/misc/bland-ns-1",
            "jigsaw/village/desert/houses/temple_2",
            "trees/mixed/tredwoodbee1",
            "jigsaw/village/desert/houses/temple_1",
            "trees/mixed/tredwoodbee3",
            "trees/sakura/genericsak1",
            "trees/mixed/tredwoodbee2",
            "trees/mixed/sandyjungle1",
            "trees/mixed/sandyjungle2",
            "trees/sakura/genericsak3",
            "trees/mixed/tredwoodbee4",
            "trees/mixed/sandyjungle3",
            "trees/sakura/genericsak2",
            "trees/mangrove/tree20",
            "trees/mangrove/tree21",
            "trees/birch/largeponderosa20",
            "clutter/statue-villager-plains",
            "jigsaw/village/plains/terminators/terminator_01",
            "jigsaw/village/plains/terminators/terminator_03",
            "jigsaw/village/plains/terminators/terminator_02",
            "jigsaw/village/plains/terminators/terminator_04",
            "trees/birch/largeponderosa18",
            "trees/birch/largeponderosa19",
            "trees/mangrove/tree17",
            "clutter/pond",
            "trees/oak/shoakgeneric10",
            "trees/mangrove/tree18",
            "trees/mangrove/tree19",
            "jigsaw/mineshaft/intersection_empty",
            "trees/mangrove/tree10",
            "jigsaw/village/misc/logger-x-5",
            "trees/mangrove/tree11",
            "jigsaw/village/misc/logger-x-4",
            "trees/mangrove/tree12",
            "jigsaw/village/misc/logger-x-3",
            "trees/mangrove/tree13",
            "jigsaw/village/misc/logger-x-2",
            "trees/mangrove/tree14",
            "jigsaw/village/misc/logger-x-1",
            "trees/mangrove/tree15",
            "trees/mangrove/tree16",
            "trees/birch/largeponderosa14",
            "trees/birch/largeponderosa15",
            "trees/birch/largeponderosa16",
            "trees/birch/largeponderosa17",
            "trees/birch/largeponderosa10",
            "trees/birch/largeponderosa11",
            "trees/birch/largeponderosa12",
            "trees/birch/largeponderosa13",
            "jigsaw/village/savanna/streets/split_01",
            "jigsaw/village/savanna/streets/split_02",
            "jigsaw/village/snowy/houses/farm_1",
            "jigsaw/village/snowy/houses/farm_2",
            "trees/acacia/savannas9",
            "trees/oak/foak1",
            "trees/oak/mroofed8",
            "trees/oak/mroofed9",
            "jigsaw/stronghold/room/small-cell",
            "trees/spruce/vgeneric3",
            "trees/oak/mroofed2",
            "trees/spruce/vgeneric2",
            "trees/oak/mroofed3",
            "trees/spruce/vgeneric1",
            "trees/oak/mroofed1",
            "trees/oak/mroofed6",
            "trees/oak/mroofed7",
            "trees/oak/mroofed4",
            "trees/oak/mroofed5",
            "trees/birch/mediumgeneric2",
            "trees/birch/mediumgeneric1",
            "trees/spruce/vgeneric9",
            "trees/spruce/vgeneric8",
            "trees/birch/mediumgeneric3",
            "trees/spruce/vgeneric7",
            "trees/spruce/vgeneric6",
            "trees/spruce/vgeneric5",
            "trees/spruce/vgeneric4",
            "jigsaw/stronghold/stairs/casing-top",
            "trees/oak/oakFancy9",
            "trees/oak/oakFancy8",
            "trees/oak/oakFancy5",
            "jigsaw/village/plains/zombie/houses/fletcher_house_1",
            "trees/oak/oakFancy4",
            "trees/jungle/deligeneric6",
            "trees/oak/oakFancy7",
            "trees/jungle/deligeneric5",
            "trees/oak/oakFancy6",
            "trees/jungle/deligeneric4",
            "trees/oak/oakFancy1",
            "trees/jungle/deligeneric3",
            "trees/jungle/deligeneric2",
            "trees/oak/oakFancy3",
            "trees/jungle/deligeneric1",
            "trees/oak/oakFancy2",
            "jigsaw/village/desert/houses/large_farm_1",
            "trees/spruce/vgeneric11",
            "trees/spruce/vgeneric12",
            "trees/spruce/vgeneric13",
            "trees/oak/shoakgeneric1",
            "trees/spruce/vgeneric14",
            "trees/oak/shoakgeneric2",
            "jigsaw/stronghold/wall/1",
            "trees/spruce/vgeneric10",
            "jigsaw/village/taiga/zombie/streets/straight_04",
            "jigsaw/stronghold/wall/3",
            "trees/spruce/vgeneric19",
            "jigsaw/village/taiga/zombie/streets/straight_03",
            "jigsaw/stronghold/wall/2",
            "clutter/workshop1",
            "jigsaw/village/taiga/zombie/streets/straight_02",
            "jigsaw/village/taiga/zombie/streets/straight_01",
            "trees/spruce/vgeneric15",
            "trees/spruce/vgeneric16",
            "jigsaw/village/taiga/zombie/streets/straight_06",
            "trees/spruce/vgeneric17",
            "jigsaw/village/taiga/zombie/streets/straight_05",
            "trees/spruce/vgeneric18",
            "clutter/tourmaclutt9",
            "clutter/tourmaclutt8",
            "clutter/tourmaclutt7",
            "clutter/tourmaclutt6",
            "clutter/tourmaclutt5",
            "clutter/tourmaclutt4",
            "clutter/tourmaclutt3",
            "clutter/tourmaclutt2",
            "clutter/tourmaclutt1",
            "trees/oak/shoakgeneric7",
            "trees/oak/shoakgeneric8",
            "jigsaw/stronghold/stairs/casing-floor-hollow",
            "trees/oak/shoakgeneric9",
            "trees/oak/shoakgeneric3",
            "structures/shiprightsideupfulldegraded",
            "trees/oak/shoakgeneric4",
            "trees/oak/shoakgeneric5",
            "trees/darkoak/talldrift7/objects/-o",
            "trees/oak/shoakgeneric6",
            "trees/mushroom/crimsonwood2",
            "trees/mushroom/crimsonwood1",
            "trees/mushroom/crimsonwood5",
            "trees/mushroom/crimsonwood4",
            "trees/mushroom/crimsonwood3",
            "clutter/honeynest1",
            "clutter/honeynest2",
            "clutter/honeynest3",
            "clutter/honeynest4",
            "clutter/honeynest9",
            "clutter/honeynest5",
            "clutter/honeynest6",
            "clutter/honeynest7",
            "clutter/honeynest8",
            "trees/jungle/denmyre15",
            "trees/darkoak/talldrift3/objects/-o",
            "trees/jungle/denmyre16",
            "jigsaw/village/plains/houses/medium_house_1",
            "trees/sakura/vlarge1",
            "trees/sakura/vlarge2",
            "trees/jungle/denmyre10",
            "trees/jungle/denmyre11",
            "trees/jungle/denmyre12",
            "trees/jungle/denmyre13",
            "trees/jungle/denmyre14",
            "jigsaw/village/plains/houses/medium_house_2",
            "clutter/stonedirtsetter7",
            "clutter/stonedirtsetter5",
            "clutter/stonedirtsetter6",
            "clutter/stonedirtsetter3",
            "clutter/stonedirtsetter4",
            "clutter/stonedirtsetter1",
            "clutter/stonedirtsetter2",
            "jigsaw/village/taiga/houses/small_farm_1",
            "jigsaw/stronghold/room/witch-room",
            "structures/hut",
            "structures/FT_1",
            "structures/usdship2",
            "structures/usdship1",
            "jigsaw/stronghold/rooms/alter1",
            "jigsaw/village/japanese/japanese_10",
            "trees/sakura/vlarge3",
            "structures/rustic4",
            "jigsaw/village/taiga/town_centers/meeting_point_1",
            "jigsaw/village/taiga/town_centers/meeting_point_2",
            "clutter/bonespire2",
            "clutter/bonespire1",
            "clutter/medtourmaclutt10",
            "clutter/bonespire4",
            "clutter/medtourmaclutt11",
            "trees/oak/massivegeneric3",
            "clutter/medtourmaclutt12",
            "clutter/bonespire3",
            "clutter/medtourmaclutt13",
            "clutter/medtourmaclutt14",
            "clutter/medtourmaclutt15",
            "clutter/medtourmaclutt16",
            "trees/mushroom/mushclut2",
            "trees/mushroom/mushclut3",
            "trees/mushroom/mushclut4",
            "trees/mushroom/mushclut5",
            "jigsaw/village/savanna/zombie/houses/animal_pen_3",
            "trees/mushroom/mushclut6",
            "jigsaw/village/savanna/zombie/houses/animal_pen_2",
            "trees/mushroom/mushclut7",
            "trees/mushroom/mushclut8",
            "clutter/bomb1",
            "trees/mushroom/mushclut9",
            "trees/mushroom/mushclut1",
            "clutter/medtourmaclutt17",
            "jigsaw/village/savanna/zombie/town_centers/meeting_point_3",
            "trees/oak/troofed1",
            "clutter/bonespire9",
            "clutter/medtourmaclutt18",
            "jigsaw/village/savanna/zombie/town_centers/meeting_point_2",
            "trees/oak/troofed2",
            "clutter/medtourmaclutt19",
            "jigsaw/village/savanna/zombie/town_centers/meeting_point_1",
            "clutter/bonespire6",
            "trees/oak/troofed5",
            "trees/oak/massivegeneric1",
            "clutter/bonespire5",
            "trees/oak/troofed6",
            "trees/oak/massivegeneric2",
            "clutter/bonespire8",
            "jigsaw/stronghold/path/wood-door2",
            "trees/oak/troofed3",
            "clutter/bonespire7",
            "jigsaw/village/savanna/zombie/town_centers/meeting_point_4",
            "trees/oak/troofed4",
            "clutter/medtourmaclutt20",
            "jigsaw/village/plains/zombie/streets/crossroad_02",
            "trees/oak/troofed9",
            "jigsaw/village/plains/zombie/streets/crossroad_03",
            "jigsaw/village/plains/zombie/streets/crossroad_04",
            "trees/oak/troofed7",
            "trees/birch/omni1",
            "jigsaw/village/plains/zombie/streets/crossroad_05",
            "trees/oak/troofed8",
            "jigsaw/underwater-ruin/big_cracked_3",
            "jigsaw/underwater-ruin/big_cracked_2",
            "jigsaw/underwater-ruin/big_cracked_1",
            "jigsaw/village/plains/zombie/streets/crossroad_01",
            "structures/monolith5",
            "clutter/srock1",
            "structures/monolith6",
            "structures/monolith3",
            "structures/monolith4",
            "jigsaw/village/plains/zombie/streets/crossroad_06",
            "trees/darkoak/talldrift8/objects/-o",
            "jigsaw/stronghold/ceiling/7x7/flat",
            "trees/spruce/severgreen1",
            "jigsaw/underwater-ruin/big_cracked_8",
            "trees/spruce/severgreen2",
            "trees/birch/smolponderosa5",
            "trees/birch/smolponderosa6",
            "trees/birch/smolponderosa3",
            "trees/birch/smolponderosa4",
            "structures/monolith1",
            "trees/birch/smolponderosa9",
            "structures/monolith2",
            "clutter/srock2",
            "trees/birch/smolponderosa7",
            "trees/birch/smolponderosa8",
            "trees/oak/smfallen1",
            "trees/birch/smolponderosa1",
            "trees/birch/smolponderosa2",
            "jigsaw/village/snowy/zombie/streets/turn_01",
            "trees/spruce/vgeneric30",
            "trees/spruce/vgeneric31",
            "trees/sakura/smwilt1",
            "trees/spruce/vgeneric32",
            "jigsaw/stronghold/path/medium-wide-corridor1",
            "jigsaw/village/desert/streets/straight_01",
            "jigsaw/village/desert/streets/straight_02",
            "jigsaw/fossil/spine_3_coal",
            "trees/sakura/smwilt2",
            "trees/spruce/vgeneric22",
            "trees/spruce/twirl1",
            "trees/mangrove/mangrove2",
            "trees/spruce/vgeneric23",
            "trees/spruce/twirl2",
            "trees/mangrove/mangrove1",
            "trees/birch/denmyre9",
            "trees/spruce/vgeneric24",
            "trees/spruce/twirl3",
            "trees/mangrove/mangrove4",
            "trees/birch/denmyre8",
            "trees/spruce/twirl4",
            "trees/spruce/vgeneric25",
            "trees/mangrove/mangrove3",
            "trees/birch/denmyre7",
            "trees/birch/denmyre6",
            "trees/birch/denmyre5",
            "trees/spruce/vgeneric20",
            "trees/birch/denmyre4",
            "trees/spruce/vgeneric21",
            "trees/birch/denmyre3",
            "structures/tentacleslime6",
            "trees/spruce/twirl9",
            "structures/tentacleslime5",
            "structures/tentacleslime4",
            "structures/tentacleslime3",
            "structures/shiprightsideupbackhalf",
            "structures/tentacleslime2",
            "trees/spruce/twirl5",
            "trees/spruce/vgeneric26",
            "structures/tentacleslime1",
            "trees/spruce/vgeneric27",
            "trees/spruce/twirl6",
            "trees/spruce/twirl7",
            "trees/spruce/vgeneric28",
            "trees/spruce/vgeneric29",
            "trees/spruce/twirl8",
            "jigsaw/village/desert/streets/straight_03",
            "structures/tentacleslime7",
            "jigsaw/stronghold/rooms/jail-complex",
            "jigsaw/village/misc/hay-x-1",
            "jigsaw/fossil/skull_3",
            "structures/shipupsidedownfull",
            "jigsaw/fossil/skull_4",
            "jigsaw/stronghold/path/tiny-cross",
            "jigsaw/village/misc/hay-x-3",
            "jigsaw/village/misc/hay-x-2",
            "jigsaw/fossil/skull_1",
            "jigsaw/fossil/skull_2",
            "trees/birch/denmyre2",
            "trees/mangrove/mangrove9",
            "trees/birch/denmyre1",
            "trees/mangrove/mangrove6",
            "trees/mangrove/mangrove5",
            "trees/mangrove/mangrove8",
            "trees/mangrove/mangrove7",
            "trees/darkoak/large-10",
            "jigsaw/village/taiga/streets/crossroad_03",
            "trees/mushroom/smolshroom5",
            "jigsaw/village/taiga/streets/crossroad_02",
            "trees/mushroom/smolshroom4",
            "jigsaw/village/taiga/streets/crossroad_01",
            "jigsaw/dungeon/spider",
            "trees/mushroom/redlumotall11",
            "trees/mushroom/redlumotall10",
            "jigsaw/village/taiga/streets/crossroad_06",
            "jigsaw/village/taiga/streets/crossroad_05",
            "structures/tower-twin",
            "jigsaw/village/taiga/streets/crossroad_04",
            "trees/jungle/palm2",
            "trees/jungle/palm3",
            "trees/jungle/palm4",
            "trees/mushroom/redgeneric11",
            "trees/jungle/palm5",
            "trees/mushroom/redgeneric10",
            "trees/jungle/palm6",
            "trees/mushroom/smolshroom1",
            "trees/jungle/palm7",
            "trees/jungle/palm8",
            "trees/mushroom/smolshroom3",
            "trees/jungle/palm9",
            "trees/mushroom/smolshroom2",
            "structures/presentblue19",
            "trees/jungle/palm1",
            "trees/jungle/bmbogeneric5",
            "trees/jungle/bmbogeneric6",
            "trees/jungle/bmbogeneric3",
            "trees/jungle/bmbogeneric4",
            "trees/jungle/bmbogeneric1",
            "trees/jungle/bmbogeneric2",
            "trees/spruce/twirl10",
            "clutter/soulcamp1",
            "trees/spruce/unfrostedlarge8",
            "trees/spruce/unfrostedlarge9",
            "trees/spruce/unfrostedlarge4",
            "trees/spruce/unfrostedlarge5",
            "trees/spruce/unfrostedlarge6",
            "trees/spruce/unfrostedlarge7",
            "trees/spruce/unfrostedlarge1",
            "trees/spruce/unfrostedlarge2",
            "trees/spruce/unfrostedlarge3",
            "jigsaw/village/taiga/zombie/streets/turn_01",
            "trees/jungle/bmbogeneric9",
            "trees/jungle/bmbogeneric7",
            "trees/jungle/bmbogeneric8",
            "jigsaw/stronghold/path/medium-corridor2",
            "jigsaw/village/plains/zombie/houses/meeting_point_4",
            "jigsaw/village/plains/zombie/houses/meeting_point_5",
            "trees/bonsai/med-3",
            "trees/acacia/thin9",
            "trees/bonsai/med-2",
            "trees/acacia/thin8",
            "trees/bonsai/med-1",
            "trees/acacia/thin7",
            "trees/acacia/thin6",
            "jigsaw/village/misc/hay-x-5",
            "trees/mixed/AmySmol8",
            "trees/acacia/thin5",
            "jigsaw/village/misc/hay-x-4",
            "trees/mixed/AmySmol9",
            "trees/acacia/thin4",
            "trees/mixed/AmySmol6",
            "trees/acacia/thin3",
            "jigsaw/stronghold/floor/3x3/flat",
            "jigsaw/stronghold/stairs/sml-vertical-naked",
            "trees/mixed/AmySmol7",
            "trees/acacia/thin2",
            "trees/bonsai/med-4",
            "trees/mixed/purpletourmalinelarge6",
            "trees/mixed/purpletourmalinelarge5",
            "trees/mixed/purpletourmalinelarge8",
            "jigsaw/pyramid/pyramid-red",
            "trees/mixed/purpletourmalinelarge7",
            "trees/mixed/purpletourmalinelarge2",
            "trees/mixed/purpletourmalinelarge1",
            "trees/mixed/purpletourmalinelarge4",
            "trees/mixed/purpletourmalinelarge3",
            "trees/mixed/purpletourmalinelarge9",
            "structures/presentsupermassivereda4",
            "jigsaw/village/desert/zombie/streets/straight_01",
            "jigsaw/village/desert/zombie/streets/straight_03",
            "jigsaw/village/desert/zombie/streets/straight_02",
            "jigsaw/stronghold/path/straight-staircase",
            "trees/spruce/generic3",
            "trees/spruce/generic2",
            "trees/spruce/generic1",
            "clutter/stump7",
            "trees/spruce/sup-pine-1",
            "trees/spruce/sup-pine-2",
            "clutter/stump5",
            "clutter/stump6",
            "clutter/stump3",
            "trees/birch/medponderosa10",
            "clutter/stump4",
            "jigsaw/stronghold/room/portal-room",
            "clutter/stump1",
            "clutter/stump2",
            "trees/spruce/sup-pine-9",
            "trees/birch/medponderosa14",
            "jigsaw/village/taiga/streets/corner_03",
            "trees/birch/medponderosa13",
            "trees/spruce/sup-pine-7",
            "trees/birch/medponderosa12",
            "trees/spruce/sup-pine-8",
            "trees/birch/medponderosa11",
            "trees/mixed/bleedingserralita10",
            "trees/spruce/sup-pine-5",
            "jigsaw/pyramid/jungle/pyramid",
            "trees/spruce/sup-pine-6",
            "jigsaw/village/taiga/streets/corner_02",
            "trees/spruce/sup-pine-3",
            "jigsaw/village/taiga/streets/corner_01",
            "trees/spruce/sup-pine-4",
            "trees/birch/medponderosa15",
            "jigsaw/village/snowy/streets/crossroad_02",
            "jigsaw/village/snowy/streets/crossroad_03",
            "jigsaw/village/snowy/zombie/town_centers/meeting_point_1",
            "jigsaw/village/snowy/streets/crossroad_01",
            "jigsaw/village/snowy/streets/crossroad_06",
            "jigsaw/village/snowy/streets/crossroad_04",
            "jigsaw/village/snowy/streets/crossroad_05",
            "jigsaw/village/snowy/houses/weapon_smith_1",
            "jigsaw/pillager-outpost/regular/feature_logs",
            "trees/spruce/lushgenericpine7",
            "trees/spruce/lushgenericpine6",
            "trees/spruce/lushgenericpine9",
            "trees/spruce/lushgenericpine8",
            "trees/bonsai/smbon1",
            "trees/bonsai/smbon2",
            "trees/bonsai/smbon3",
            "clutter/genericpeak6",
            "clutter/genericpeak5",
            "clutter/genericpeak4",
            "clutter/genericpeak3",
            "clutter/genericpeak2",
            "clutter/genericpeak1",
            "trees/spruce/lushgenericpine3",
            "trees/spruce/lushgenericpine2",
            "trees/spruce/lushgenericpine5",
            "trees/spruce/lushgenericpine4",
            "trees/oak/sponderosa10",
            "jigsaw/stronghold/path/corner-cross",
            "trees/spruce/lushgenericpine1",
            "trees/oak/sponderosa15",
            "structures/floatisle1",
            "trees/oak/sponderosa11",
            "trees/oak/sponderosa12",
            "trees/oak/sponderosa13",
            "trees/oak/sponderosa14",
            "jigsaw/village/snowy/houses/library_1",
            "jigsaw/village/savanna/zombie/houses/small_house_7",
            "trees/spruce/genericdead1",
            "trees/oak/smol3",
            "jigsaw/village/savanna/zombie/houses/small_house_6",
            "trees/oak/smol4",
            "trees/spruce/genericdead3",
            "trees/oak/smol5",
            "jigsaw/village/savanna/zombie/houses/small_house_8",
            "trees/spruce/genericdead2",
            "trees/oak/smol6",
            "jigsaw/village/savanna/zombie/houses/small_house_3",
            "jigsaw/village/savanna/zombie/houses/small_house_2",
            "jigsaw/village/savanna/zombie/houses/small_house_5",
            "trees/oak/smol1",
            "jigsaw/village/savanna/zombie/houses/small_house_4",
            "trees/oak/smol2",
            "jigsaw/village/savanna/zombie/houses/small_house_1",
            "trees/oak/smol7",
            "trees/jungle/sgeneric1",
            "trees/oak/smol8",
            "trees/jungle/sgeneric2",
            "trees/oak/smol9",
            "trees/jungle/sgeneric3",
            "trees/jungle/sgeneric4",
            "trees/mixed/purpletourmalinelarge10",
            "trees/darkoak/denmyre5",
            "trees/darkoak/denmyre4",
            "trees/darkoak/denmyre3",
            "trees/darkoak/denmyre2",
            "trees/darkoak/denmyre1",
            "jigsaw/stronghold/floor/3x3/tnt",
            "trees/spruce/pine7",
            "trees/spruce/pine8",
            "trees/spruce/pine9",
            "trees/spruce/pine3",
            "trees/spruce/pine4",
            "trees/spruce/pine5",
            "trees/spruce/pine6",
            "trees/spruce/pine1",
            "trees/spruce/pine2",
            "jigsaw/village/misc/tjunct",
            "trees/darkoak/denmyre9",
            "trees/darkoak/denmyre8",
            "trees/darkoak/denmyre7",
            "trees/darkoak/denmyre6",
            "jigsaw/village/plains/town_centers/fountain_01",
            "jigsaw/village/snowy/houses/tool_smith_1",
            "jigsaw/village/snowy/zombie/houses/small_house_8",
            "structures/presentsupermassivegreena10",
            "jigsaw/village/snowy/zombie/houses/small_house_5",
            "jigsaw/village/snowy/zombie/houses/small_house_4",
            "jigsaw/village/snowy/zombie/houses/small_house_7",
            "jigsaw/village/snowy/zombie/houses/small_house_6",
            "clutter/coralpink1",
            "trees/mixed/purpletourmalinemed10",
            "clutter/coralpink2",
            "trees/oak/antioch10",
            "clutter/coralpink3",
            "trees/oak/antioch11",
            "clutter/coralpink4",
            "trees/oak/antioch12",
            "trees/oak/antioch13",
            "jigsaw/stronghold/ceiling/5x5/wood-beams",
            "clutter/icespec2",
            "clutter/icespec3",
            "clutter/icespec1",
            "clutter/melons6",
            "clutter/icespec4",
            "clutter/icespec5",
            "clutter/melons4",
            "trees/acacia/thin10",
            "clutter/melons5",
            "clutter/melons2",
            "trees/acacia/thin12",
            "clutter/melons3",
            "trees/acacia/thin11",
            "trees/acacia/thin14",
            "clutter/melons1",
            "trees/acacia/thin13",
            "trees/acacia/thin16",
            "trees/acacia/thin15",
            "trees/darkoak/willowbutbigger-1",
            "trees/darkoak/willowbutbigger-2",
            "jigsaw/village/snowy/zombie/houses/small_house_1",
            "jigsaw/village/snowy/zombie/houses/small_house_3",
            "jigsaw/village/snowy/zombie/houses/small_house_2",
            "trees/bonsai/smbase1",
            "trees/mixed/serralutageneric8",
            "trees/mixed/serralutageneric9",
            "trees/mixed/serralutageneric1",
            "jigsaw/pillager-outpost/overgrown/pumpkins2",
            "trees/mixed/serralutageneric2",
            "jigsaw/pillager-outpost/overgrown/pumpkins1",
            "trees/mixed/serralutageneric3",
            "trees/mixed/serralutageneric4",
            "trees/mixed/serralutageneric5",
            "trees/mixed/serralutageneric6",
            "trees/mixed/serralutageneric7",
            "clutter/desertpost3",
            "clutter/tourmaclutt21",
            "trees/willow/t3",
            "clutter/tourmaclutt20",
            "trees/willow/t4",
            "clutter/tourmaclutt23",
            "trees/willow/t1",
            "clutter/tourmaclutt22",
            "jigsaw/stronghold/rooms/library-large",
            "trees/willow/t2",
            "clutter/tourmaclutt25",
            "jigsaw/village/taiga/streets/straight_02",
            "trees/oak/truegeneric22",
            "trees/willow/t7",
            "clutter/tourmaclutt24",
            "jigsaw/village/taiga/streets/straight_03",
            "trees/oak/truegeneric21",
            "trees/willow/t8",
            "trees/oak/truegeneric24",
            "trees/willow/t5",
            "jigsaw/village/taiga/streets/straight_01",
            "trees/oak/truegeneric23",
            "trees/willow/t6",
            "jigsaw/village/misc/hay-nes-4",
            "jigsaw/village/misc/hay-nes-5",
            "trees/spruce/pine12",
            "trees/oak/truegeneric20",
            "jigsaw/village/misc/hay-nes-1",
            "clutter/desertpost1",
            "jigsaw/village/misc/hay-nes-2",
            "trees/spruce/pine11",
            "clutter/desertpost2",
            "jigsaw/village/misc/hay-nes-3",
            "trees/spruce/pine10",
            "jigsaw/village/decays/grass_16x16",
            "trees/oak/truegeneric19",
            "trees/oak/troofedroot10",
            "trees/oak/truegeneric18",
            "clutter/tourmaclutt10",
            "trees/spruce/unfrostedlarge22",
            "trees/oak/truegeneric15",
            "trees/spruce/unfrostedlarge23",
            "trees/oak/truegeneric14",
            "clutter/tourmaclutt12",
            "trees/spruce/unfrostedlarge24",
            "trees/oak/truegeneric17",
            "clutter/tourmaclutt11",
            "trees/oak/truegeneric16",
            "clutter/tourmaclutt14",
            "trees/oak/truegeneric11",
            "clutter/tourmaclutt13",
            "trees/oak/truegeneric10",
            "clutter/tourmaclutt16",
            "trees/spruce/unfrostedlarge20",
            "trees/oak/truegeneric13",
            "clutter/tourmaclutt15",
            "trees/spruce/unfrostedlarge21",
            "trees/oak/truegeneric12",
            "clutter/doakspec1",
            "trees/mixed/AmySmol10",
            "jigsaw/village/snowy/houses/fisher_cottage",
            "trees/mixed/AmySmol12",
            "trees/mixed/AmySmol11",
            "clutter/doakspec3",
            "clutter/bincluster1",
            "clutter/doakspec2",
            "trees/oak/sloak1",
            "jigsaw/village/savanna/houses/medium_house_2",
            "jigsaw/village/savanna/houses/medium_house_1",
            "clutter/tourmaclutt18",
            "jigsaw/village/taiga/streets/straight_06",
            "clutter/tourmaclutt17",
            "jigsaw/village/taiga/streets/straight_04",
            "clutter/tourmaclutt19",
            "jigsaw/village/taiga/streets/straight_05",
            "structures/shipgenericplain",
            "jigsaw/village/taiga/houses/weaponsmith_2",
            "trees/spruce/denmyre5",
            "trees/spruce/denmyre6",
            "jigsaw/village/plains/zombie/houses/medium_house_1",
            "trees/spruce/denmyre7",
            "jigsaw/village/plains/zombie/houses/medium_house_2",
            "trees/spruce/denmyre8",
            "trees/spruce/denmyre1",
            "jigsaw/village/taiga/houses/weaponsmith_1",
            "trees/spruce/denmyre2",
            "trees/spruce/denmyre3",
            "trees/spruce/denmyre4",
            "jigsaw/village/savanna/houses/butchers_shop_1",
            "jigsaw/village/plains/houses/big_house_1",
            "jigsaw/village/savanna/houses/butchers_shop_2",
            "jigsaw/village/desert/houses/mason_1",
            "clutter/spikestone8",
            "trees/bonsai/medtilt4",
            "trees/willow/w6",
            "clutter/spikestone7",
            "trees/bonsai/medtilt5",
            "trees/willow/w7",
            "clutter/spikestone6",
            "trees/bonsai/medtilt2",
            "trees/willow/w4",
            "clutter/spikestone5",
            "trees/bonsai/medtilt3",
            "trees/willow/w5",
            "trees/bonsai/medtilt1",
            "structures/megaportal2",
            "trees/willow/w8",
            "structures/megaportal1",
            "trees/willow/w9",
            "jigsaw/village/snowy/houses/butchers_shop_1",
            "jigsaw/village/snowy/houses/butchers_shop_2",
            "clutter/rdesertpost3",
            "trees/willow/w2",
            "jigsaw/stronghold/path/stairs1",
            "trees/willow/w3",
            "clutter/rdesertpost1",
            "clutter/rdesertpost2",
            "trees/willow/w1",
            "structures/ruins-desert-1",
            "structures/ruins-desert-2",
            "trees/spruce/denmyre9",
            "jigsaw/village/snowy/zombie/town_centers/meeting_point_3",
            "jigsaw/village/snowy/zombie/town_centers/meeting_point_2",
            "jigsaw/dungeon/skeleton",
            "trees/spruce/sfrostgeneric1",
            "trees/spruce/sfrostgeneric2",
            "trees/oak/mponderosa20",
            "trees/oak/oakFancy2NS",
            "clutter/concretelith2",
            "jigsaw/village/misc/cross",
            "clutter/concretelith3",
            "clutter/concretelith1",
            "trees/oak/mponderosa15",
            "trees/oak/mponderosa16",
            "jigsaw/village/taiga/houses/large_farm_2",
            "trees/oak/mponderosa13",
            "jigsaw/village/taiga/houses/large_farm_1",
            "trees/oak/mponderosa14",
            "clutter/concretelith6",
            "trees/oak/mponderosa19",
            "clutter/concretelith7",
            "clutter/concretelith4",
            "trees/oak/mponderosa17",
            "clutter/concretelith5",
            "trees/oak/mponderosa18",
            "trees/spruce/sprucetree-15",
            "clutter/statue-villager-ocean",
            "trees/spruce/sprucetree-14",
            "jigsaw/village/plains/houses/fletcher_house_1",
            "jigsaw/village/plains/lamp_1",
            "trees/spruce/sprucetree-13",
            "clutter/honeynest10",
            "trees/spruce/sprucetree-12",
            "trees/oak/mponderosa11",
            "trees/spruce/sprucetree-11",
            "trees/oak/mponderosa12",
            "trees/spruce/sprucetree-10",
            "trees/oak/mponderosa10",
            "jigsaw/stronghold/rooms/chestroom1-trap",
            "structures/ruin1",
            "structures/ruin2",
            "jigsaw/village/desert/zombie/streets/turn_01",
            "structures/ruin3",
            "structures/ruin4",
            "trees/spruce/sfrostgeneric7",
            "trees/spruce/sfrostgeneric8",
            "trees/spruce/sfrostgeneric9",
            "clutter/spikestone4",
            "trees/spruce/sfrostgeneric3",
            "clutter/spikestone3",
            "trees/spruce/sfrostgeneric4",
            "clutter/spikestone2",
            "trees/spruce/sfrostgeneric5",
            "clutter/spikestone1",
            "trees/spruce/sfrostgeneric6",
            "trees/spruce/smol2",
            "trees/spruce/smol3",
            "trees/spruce/smol4",
            "trees/spruce/smol5",
            "trees/spruce/smol6",
            "jigsaw/village/medival/medival_9",
            "trees/spruce/smol7",
            "jigsaw/village/medival/medival_8",
            "trees/spruce/smol8",
            "jigsaw/village/medival/medival_7",
            "trees/spruce/smol9",
            "trees/mixed/AmySmol4",
            "trees/mixed/AmySmol5",
            "trees/spruce/smol13",
            "trees/mixed/AmySmol2",
            "trees/mixed/AmySmol3",
            "trees/spruce/smol10",
            "trees/mixed/AmySmol1",
            "trees/spruce/smol12",
            "trees/spruce/smol11",
            "trees/spruce/smol1",
            "trees/mushroom/froShroom2",
            "trees/mushroom/froShroom3",
            "trees/mushroom/froShroom4",
            "trees/mushroom/froShroom5",
            "structures/tentacleoak8",
            "trees/mushroom/froShroom1",
            "jigsaw/village/desert/houses/armorer_1",
            "structures/tentacleoak6",
            "structures/tentacleoak7",
            "structures/tentacleoak4",
            "structures/tentacleoak5",
            "structures/tentacleoak2",
            "structures/tentacleoak3",
            "structures/tentacleoak1",
            "jigsaw/village/snowy/houses/medium_house_1",
            "jigsaw/village/snowy/houses/medium_house_2",
            "clutter/coralred1",
            "jigsaw/village/snowy/houses/medium_house_3",
            "jigsaw/stronghold/ceiling/7x7/wood-beams",
            "trees/mushroom/redlumotall9",
            "trees/mushroom/redlumotall8",
            "structures/swampforearm1",
            "trees/darkoak/generic11",
            "structures/swampforearm2",
            "trees/darkoak/generic10",
            "structures/swampforearm3",
            "trees/mushroom/redlumotall5",
            "structures/swampforearm4",
            "trees/mixed/swampcorrupt10",
            "trees/mushroom/redlumotall4",
            "jigsaw/fossil/skull_4_coal",
            "structures/swampforearm5",
            "trees/mushroom/redlumotall7",
            "trees/mushroom/redlumotall6",
            "clutter/icecluster11",
            "jigsaw/village/taiga/houses/small_house_5",
            "jigsaw/village/medival/medival_6",
            "trees/mushroom/redlumotall1",
            "clutter/icecluster10",
            "jigsaw/village/medival/medival_5",
            "jigsaw/village/medival/medival_4",
            "trees/mushroom/redlumotall3",
            "jigsaw/village/medival/medival_3",
            "trees/mushroom/redlumotall2",
            "jigsaw/village/taiga/houses/small_house_1",
            "jigsaw/village/medival/medival_2",
            "jigsaw/village/taiga/houses/small_house_2",
            "jigsaw/village/savanna/houses/animal_pen_3",
            "jigsaw/village/medival/medival_1",
            "jigsaw/village/taiga/houses/small_house_3",
            "jigsaw/village/savanna/houses/animal_pen_2",
            "jigsaw/village/taiga/houses/small_house_4",
            "jigsaw/village/savanna/houses/animal_pen_1",
            "trees/acacia/savannas12",
            "trees/acacia/savannas11",
            "trees/acacia/savannas10",
            "trees/mixed/serralutageneric10",
            "trees/oak/smtoak1",
            "jigsaw/village/taiga/houses/armorer_2",
            "jigsaw/village/taiga/houses/masons_house_1",
            "jigsaw/stronghold/wall-fixture/5x3/brewing-shelf",
            "clutter/boulder1",
            "clutter/boulder2",
            "clutter/boulder5",
            "clutter/boulder6",
            "clutter/boulder3",
            "jigsaw/village/savanna/houses/tool_smith_1",
            "trees/jungle/smgeneric1",
            "clutter/boulder4",
            "jigsaw/village/taiga/houses/temple_1",
            "clutter/boulder9",
            "clutter/boulder7",
            "clutter/boulder8",
            "clutter/corazoncristal",
            "trees/birch/denmyre10",
            "trees/birch/denmyre11",
            "trees/birch/denmyre14",
            "trees/birch/denmyre15",
            "trees/birch/denmyre12",
            "trees/birch/denmyre13",
            "trees/birch/denmyre16",
            "clutter/rsphinx1",
            "jigsaw/village/savanna/houses/mason_1",
            "clutter/coralyellow3",
            "clutter/rbrksphinx1",
            "jigsaw/stronghold/rooms/boomtube-test",
            "trees/mixed/honey17",
            "trees/mixed/honey16",
            "trees/mixed/honey15",
            "structures/presentreda14",
            "trees/mixed/honey14",
            "trees/darkoak/willowgeneric2",
            "trees/darkoak/willowgeneric1",
            "trees/mixed/honey19",
            "trees/mixed/honey18",
            "trees/mixed/swampcorrupt6",
            "trees/oak/troofedroot4",
            "trees/mixed/swampcorrupt5",
            "trees/oak/troofedroot3",
            "trees/mixed/swampcorrupt4",
            "trees/oak/troofedroot2",
            "trees/mixed/swampcorrupt3",
            "trees/oak/troofedroot1",
            "jigsaw/village/plains/town_centers/meeting_point_3",
            "trees/mixed/honey13",
            "trees/oak/troofedroot8",
            "jigsaw/village/plains/town_centers/meeting_point_2",
            "trees/mixed/swampcorrupt9",
            "trees/mixed/honey12",
            "trees/oak/troofedroot7",
            "jigsaw/village/plains/town_centers/meeting_point_1",
            "trees/mixed/honey11",
            "trees/mixed/swampcorrupt8",
            "trees/oak/troofedroot6",
            "trees/mixed/swampcorrupt7",
            "trees/mixed/honey10",
            "trees/oak/troofedroot5",
            "jigsaw/village/medival/medival_10",
            "trees/mixed/swampcorrupt2",
            "trees/mixed/swampcorrupt1",
            "trees/spruce/unfrostedlarge11",
            "trees/spruce/unfrostedlarge12",
            "trees/spruce/unfrostedlarge13",
            "trees/spruce/unfrostedlarge14",
            "clutter/sbush1",
            "clutter/sbush2",
            "clutter/sbush3",
            "trees/spruce/unfrostedlarge10",
            "trees/spruce/unfrostedlarge19",
            "trees/spruce/unfrostedlarge15",
            "trees/spruce/unfrostedlarge16",
            "trees/spruce/unfrostedlarge17",
            "trees/spruce/unfrostedlarge18",
            "jigsaw/village/desert/streets/square_01",
            "structures/oruins1",
            "trees/mixed/honey20",
            "structures/oruins2",
            "jigsaw/village/snowy/houses/armorer_house_2",
            "jigsaw/village/snowy/houses/armorer_house_1",
            "jigsaw/village/desert/streets/square_02",
            "trees/sakura/mlarge11",
            "trees/sakura/mlarge10",
            "structures/oruins3",
            "jigsaw/woodland-mansion/woodland-mansion",
            "clutter/icespiresmol2",
            "jigsaw/village/snowy/streets/straight_02",
            "trees/acacia/savannaS3",
            "clutter/icespiresmol1",
            "jigsaw/village/snowy/streets/straight_03",
            "trees/acacia/savannaS2",
            "trees/acacia/savannaS1",
            "clutter/icespiresmol3",
            "jigsaw/village/snowy/streets/straight_01",
            "jigsaw/village/savanna/houses/fletcher_house_1",
            "jigsaw/stronghold/path/medium-cross",
            "jigsaw/stronghold/path/hazard-hall3",
            "structures/presentmediumblue17",
            "jigsaw/stronghold/path/hazard-hall1",
            "jigsaw/stronghold/path/hazard-hall2",
            "trees/oak/arid4",
            "trees/oak/dead1",
            "structures/tentacledarkwood1",
            "trees/oak/arid5",
            "structures/tentacledarkwood2",
            "trees/oak/dead3",
            "trees/oak/arid6",
            "structures/tentacledarkwood3",
            "trees/oak/arid7",
            "trees/oak/dead2",
            "trees/acacia/savannaS7",
            "trees/acacia/savannaS6",
            "trees/acacia/savannaS5",
            "trees/acacia/savannaS4",
            "trees/oak/arid1",
            "trees/oak/arid2",
            "trees/oak/arid3",
            "trees/acacia/savannaS8",
            "trees/acacia/denmyre10",
            "trees/acacia/denmyre11",
            "trees/mushroom/froShroom6",
            "trees/acacia/denmyre14",
            "trees/mushroom/froShroom7",
            "trees/acacia/denmyre15",
            "trees/mushroom/froShroom8",
            "trees/acacia/denmyre12",
            "trees/mushroom/froShroom9",
            "trees/acacia/denmyre13",
            "trees/acacia/denmyre16",
            "trees/oak/troofedroot9",
            "trees/oak/dead5",
            "trees/oak/dead4",
            "jigsaw/stronghold/stairs/med-vertical-complete2",
            "jigsaw/stronghold/stairs/med-vertical-complete1",
            "trees/oak/dead6",
            "jigsaw/village/savanna/houses/tannery_1",
            "structures/ship2",
            "structures/ship1",
            "jigsaw/village/snowy/streets/straight_06",
            "jigsaw/village/snowy/streets/straight_04",
            "jigsaw/village/misc/hall1",
            "jigsaw/village/snowy/streets/straight_08",
            "trees/mixed/AmyMed9",
            "trees/mixed/AmyMed7",
            "trees/mixed/AmyMed8",
            "trees/mixed/AmyMed5",
            "trees/mixed/AmyMed6",
            "trees/mixed/AmyMed3",
            "trees/mixed/AmyMed4",
            "trees/mixed/AmyMed1",
            "trees/mixed/AmyMed2",
            "jigsaw/village/desert/houses/animal_pen_1",
            "jigsaw/village/desert/houses/animal_pen_2",
            "jigsaw/village/snowy/houses/animal_pen_1",
            "jigsaw/village/snowy/houses/animal_pen_2",
            "jigsaw/stronghold/room/witch-room-end",
            "clutter/birchclutt1",
            "clutter/magmaspire3",
            "clutter/magmaspire2",
            "clutter/magmaspire1",
            "clutter/bone1",
            "jigsaw/village/desert/zombie/streets/corner_01",
            "jigsaw/village/desert/zombie/streets/corner_02",
            "jigsaw/village/plains/zombie/houses/butcher_shop_2",
            "jigsaw/village/taiga/houses/tool_smith_1",
            "clutter/bone6",
            "clutter/bone7",
            "clutter/bone4",
            "clutter/bone5",
            "clutter/bone2",
            "clutter/bone3",
            "jigsaw/village/taiga/zombie/streets/crossroad_01",
            "jigsaw/village/taiga/zombie/streets/crossroad_02",
            "jigsaw/village/taiga/zombie/streets/corner_01",
            "jigsaw/village/taiga/zombie/streets/corner_02",
            "jigsaw/village/taiga/zombie/streets/corner_03",
            "jigsaw/dungeon/zombie",
            "jigsaw/village/taiga/houses/library_1",
            "structures/BShip3",
            "structures/BShip4",
            "trees/acacia/savannaF9",
            "structures/BShip5",
            "trees/acacia/savannaF8",
            "structures/BShip6",
            "trees/acacia/savannaF7",
            "structures/BShip1",
            "structures/BShip2",
            "jigsaw/village/plains/houses/masons_house_1",
            "jigsaw/pillager-outpost/watchtower_overgrown",
            "structures/presentbluea20",
            "jigsaw/village/desert/zombie/houses/small_house_2",
            "trees/oak/toak10",
            "jigsaw/village/desert/zombie/houses/small_house_1",
            "jigsaw/swamp-hut/swamp-hut",
            "trees/oak/toak11",
            "jigsaw/village/desert/zombie/houses/small_house_8",
            "trees/oak/swoak5",
            "clutter/singleicespike5",
            "jigsaw/village/desert/zombie/houses/small_house_7",
            "jigsaw/mushhut/hut/hut1",
            "jigsaw/village/savanna/streets/crossroad_07",
            "jigsaw/mushhut/hut/hut2",
            "trees/sproak/generic1",
            "jigsaw/village/savanna/streets/crossroad_06",
            "jigsaw/mushhut/hut/hut3",
            "clutter/singleicespike2",
            "jigsaw/village/savanna/streets/crossroad_05",
            "jigsaw/village/desert/zombie/houses/small_house_4",
            "trees/sproak/generic3",
            "clutter/singleicespike1",
            "jigsaw/village/savanna/streets/crossroad_04",
            "jigsaw/village/desert/zombie/houses/small_house_3",
            "trees/sproak/generic2",
            "clutter/singleicespike4",
            "jigsaw/village/savanna/streets/crossroad_03",
            "jigsaw/village/desert/zombie/houses/small_house_6",
            "trees/sproak/generic5",
            "clutter/singleicespike3",
            "jigsaw/village/savanna/streets/crossroad_02",
            "jigsaw/village/desert/zombie/houses/small_house_5",
            "trees/sproak/generic4",
            "trees/mixed/tredwoodsmol1",
            "trees/mixed/tredwoodsmol2",
            "jigsaw/mushhut/hut/hut4",
            "trees/mixed/tredwoodsmol3",
            "jigsaw/mushhut/hut/hut5",
            "trees/mixed/tredwoodsmol4",
            "jigsaw/mushhut/hut/hut6",
            "structures/shipupsidedownfronthalfdegraded",
            "trees/mixed/tredwoodsmol5",
            "jigsaw/mushhut/hut/hut7",
            "jigsaw/village/savanna/terminators/terminator_05",
            "jigsaw/village/taiga/zombie/houses/temple_1",
            "trees/sproak/generic7",
            "trees/sproak/generic6",
            "trees/sproak/generic9",
            "trees/sproak/generic8",
            "trees/oak/swoak1",
            "structures/swordnp2",
            "trees/oak/swoak2",
            "jigsaw/stronghold/rooms/oreroom",
            "structures/swordnp1",
            "trees/oak/swoak3",
            "trees/oak/swoak4",
            "trees/oak/thoakgeneric1",
            "jigsaw/village/snowy/zombie/streets/corner_01",
            "jigsaw/village/snowy/zombie/streets/corner_03",
            "jigsaw/village/snowy/zombie/streets/corner_02",
            "jigsaw/village/plains/zombie/houses/small_house_4",
            "trees/sakura/ogabsurd1",
            "jigsaw/village/plains/zombie/houses/small_house_3",
            "trees/sakura/ogabsurd2",
            "jigsaw/village/plains/zombie/houses/small_house_6",
            "jigsaw/village/plains/zombie/houses/small_house_5",
            "jigsaw/village/plains/zombie/houses/small_house_2",
            "jigsaw/village/plains/zombie/houses/small_house_1",
            "trees/oak/thoakgeneric9",
            "trees/oak/thoakgeneric8",
            "trees/darkoak/large-3",
            "trees/oak/thoakgeneric7",
            "trees/oak/thoakgeneric6",
            "jigsaw/village/plains/zombie/houses/small_house_8",
            "trees/oak/thoakgeneric5",
            "jigsaw/village/plains/zombie/houses/small_house_7",
            "trees/oak/thoakgeneric4",
            "clutter/smoleicespike2",
            "trees/oak/thoakgeneric3",
            "clutter/smoleicespike1",
            "trees/oak/thoakgeneric2",
            "clutter/smoleicespike4",
            "clutter/smoleicespike3",
            "structures/shipsidewaysfull",
            "clutter/smoleicespike6",
            "clutter/smoleicespike5",
            "clutter/smoleicespike8",
            "clutter/smoleicespike7",
            "clutter/smoleicespike9",
            "jigsaw/stronghold/path/hall-5x7x5",
            "jigsaw/village/misc/logger-nes-4",
            "jigsaw/village/misc/logger-nes-5",
            "jigsaw/village/misc/logger-nes-1",
            "jigsaw/village/misc/logger-nes-2",
            "jigsaw/village/misc/logger-nes-3",
            "trees/darkoak/talldrift6/objects/-o",
            "jigsaw/village/desert/houses/library_1",
            "trees/sproak/msapling10",
            "jigsaw/village/snowy/streets/corner_01",
            "jigsaw/village/snowy/streets/corner_02",
            "jigsaw/village/snowy/streets/corner_03",
            "jigsaw/underwater-ruin/mossy_5",
            "jigsaw/underwater-ruin/mossy_6",
            "jigsaw/underwater-ruin/mossy_3",
            "jigsaw/underwater-ruin/mossy_4",
            "jigsaw/underwater-ruin/mossy_1",
            "jigsaw/underwater-ruin/mossy_2",
            "jigsaw/mineshaft/intersection",
            "jigsaw/village/plains/zombie/houses/shepherds_house_1",
            "jigsaw/stronghold/wall-fixture/5x3/double-chest",
            "jigsaw/underwater-ruin/mossy_7",
            "jigsaw/underwater-ruin/mossy_8",
            "trees/sakura/ogabsurdfallen1",
            "trees/oak/lponderosa13",
            "trees/oak/lponderosa12",
            "trees/oak/lponderosa15",
            "trees/oak/lponderosa14",
            "trees/oak/toak4",
            "trees/oak/toak3",
            "jigsaw/stronghold/wall-fixture/5x3/crafting-station",
            "trees/oak/toak2",
            "trees/oak/toak1",
            "trees/oak/hoakgeneric5",
            "jigsaw/village/plains/streets/corner_01",
            "trees/oak/hoakgeneric4",
            "trees/oak/hoakgeneric3",
            "trees/acacia/18",
            "trees/oak/hoakgeneric2",
            "trees/oak/hoakgeneric1",
            "jigsaw/village/savanna/zombie/streets/crossroad_05",
            "trees/jungle/denmyre5",
            "jigsaw/village/savanna/zombie/streets/crossroad_06",
            "trees/jungle/denmyre4",
            "jigsaw/village/savanna/zombie/streets/crossroad_07",
            "trees/jungle/denmyre7",
            "trees/jungle/denmyre6",
            "trees/jungle/denmyre9",
            "jigsaw/village/savanna/zombie/streets/crossroad_02",
            "trees/jungle/denmyre8",
            "jigsaw/village/plains/streets/corner_02",
            "jigsaw/village/savanna/zombie/streets/crossroad_03",
            "jigsaw/fossil/skull_2_coal",
            "jigsaw/village/plains/streets/corner_03",
            "jigsaw/village/savanna/zombie/streets/crossroad_04",
            "jigsaw/village/misc/bland-x-4",
            "jigsaw/village/misc/bland-x-3",
            "jigsaw/stronghold/stairs/casing",
            "jigsaw/village/misc/bland-x-5",
            "trees/jungle/denmyre1",
            "trees/spruce/levergreen2",
            "trees/spruce/levergreen3",
            "jigsaw/village/misc/bland-x-2",
            "trees/jungle/denmyre3",
            "jigsaw/village/misc/bland-x-1",
            "trees/jungle/denmyre2",
            "trees/spruce/levergreen1",
            "trees/spruce/levergreen6",
            "jigsaw/village/desert/zombie/terminators/terminator_02",
            "trees/spruce/levergreen4",
            "trees/spruce/levergreen5",
            "trees/oak/hoakgeneric9",
            "trees/oak/hoakgeneric8",
            "trees/oak/hoakgeneric7",
            "trees/oak/hoakgeneric6",
            "clutter/spruceclutt4",
            "clutter/spruceclutt5",
            "clutter/spruceclutt6",
            "jigsaw/village/taiga/zombie/houses/fisher_cottage_1",
            "clutter/rock2",
            "clutter/rock1",
            "clutter/spruceclutt1",
            "clutter/rock4",
            "clutter/spruceclutt2",
            "clutter/spruceclutt3",
            "clutter/rock3",
            "jigsaw/stronghold/wall-fixture/5x3/study",
            "jigsaw/stronghold/wall-fixture/5x3/shelf",
            "trees/mangrove/t2",
            "trees/mangrove/t3",
            "trees/mangrove/t1",
            "trees/mangrove/t4",
            "trees/mangrove/t5",
            "clutter/hive1",
            "trees/mixed/dotree10",
            "clutter/hive2",
            "structures/gall3",
            "trees/acacia/17",
            "structures/gall1",
            "structures/gall2",
            "trees/oak/toak8",
            "trees/sproak/msapling1",
            "trees/oak/toak7",
            "trees/sproak/msapling2",
            "trees/oak/toak6",
            "trees/sproak/msapling3",
            "trees/oak/toak5",
            "jigsaw/pyramid/pyramid-extreme",
            "trees/oak/toak9",
            "trees/sproak/msapling8",
            "trees/sproak/msapling9",
            "trees/sproak/msapling4",
            "trees/sproak/msapling5",
            "trees/sproak/msapling6",
            "trees/sproak/msapling7",
            "clutter/sshrubb1",
            "jigsaw/village/misc/lanterns-e-4",
            "clutter/sshrubb2",
            "jigsaw/village/misc/lanterns-e-5",
            "jigsaw/village/desert/houses/shepherd_house_1",
            "clutter/sshrubb3",
            "jigsaw/village/misc/lanterns-e-2",
            "jigsaw/village/misc/lanterns-e-3",
            "jigsaw/village/misc/lanterns-e-1",
            "trees/birch/largeponderosa9",
            "jigsaw/village/savanna/zombie/streets/corner_03",
            "trees/birch/largeponderosa8",
            "trees/birch/largeponderosa7",
            "trees/birch/largeponderosa6",
            "jigsaw/mineshaft/way_1",
            "trees/birch/largeponderosa5",
            "jigsaw/mineshaft/way_2",
            "trees/birch/largeponderosa4",
            "trees/birch/largeponderosa3",
            "jigsaw/village/savanna/zombie/streets/corner_01",
            "trees/birch/largeponderosa2",
            "trees/birch/largeponderosa1",
            "clutter/jungleclutt9",
            "jigsaw/pyramid/pyramid_1",
            "trees/acacia/savannaF2",
            "trees/acacia/savannaF1",
            "jigsaw/pyramid/pyramid_2",
            "structures/shipsidewaysbackhalfdegraded",
            "jigsaw/mushhut/paths/path2",
            "trees/acacia/savannaF6",
            "jigsaw/mushhut/paths/path1",
            "trees/acacia/savannaF5",
            "jigsaw/mushhut/paths/path4",
            "trees/acacia/savannaF4",
            "jigsaw/mushhut/paths/path3",
            "trees/acacia/savannaF3",
            "structures/landspike2",
            "structures/landspike3",
            "structures/landspike1",
            "jigsaw/fossil/spine_4_coal",
            "structures/giantportal2",
            "structures/giantportal3",
            "jigsaw/village/savanna/lamp_post_01",
            "structures/giantportal1",
            "jigsaw/village/misc/j10",
            "clutter/birchclutt5",
            "clutter/birchclutt4",
            "clutter/birchclutt3",
            "clutter/birchclutt2",
            "jigsaw/stronghold/rooms/maze1",
            "clutter/nportstone1",
            "jigsaw/stronghold/rooms/maze2",
            "jigsaw/stronghold/rooms/maze3",
            "trees/acacia/savannaD3",
            "trees/oak/lponderosa11",
            "trees/acacia/savannaD2",
            "trees/oak/lponderosa10",
            "trees/acacia/savannaD1",
            "jigsaw/pyramid/desert/top",
            "trees/bonsai/frolow8",
            "trees/darkoak/smdeadwillow1",
            "structures/woodhand3",
            "trees/bonsai/frolow9",
            "trees/bonsai/frolow6",
            "trees/bonsai/frolow7",
            "trees/oak/antioch1",
            "trees/darkoak/smdeadwillow2",
            "trees/bonsai/frolow4",
            "trees/bonsai/frolow5",
            "trees/bonsai/frolow2",
            "trees/bonsai/frolow3",
            "trees/jungle/spire7",
            "clutter/junglestone2",
            "trees/bonsai/frolow1",
            "structures/woodhand2",
            "structures/woodhand1",
            "jigsaw/stronghold/path/small-cross",
            "trees/jungle/spire1",
            "jigsaw/ocean-monument/ocean_monument",
            "trees/jungle/spire2",
            "trees/jungle/spire5",
            "trees/jungle/spire6",
            "trees/jungle/spire3",
            "trees/jungle/spire4",
            "trees/oak/antioch4",
            "trees/oak/antioch5",
            "trees/oak/antioch2",
            "trees/oak/antioch3",
            "trees/oak/antioch8",
            "trees/oak/antioch9",
            "trees/oak/antioch6",
            "trees/oak/antioch7",
            "structures/crystal9",
            "structures/crystal8",
            "structures/crystal7",
            "trees/mixed/sredwood4",
            "trees/mixed/sredwood3",
            "trees/mixed/sredwood2",
            "trees/mixed/sredwood1",
            "trees/mushroom/warped5",
            "trees/mushroom/warped4",
            "trees/mushroom/warped6",
            "trees/mushroom/warped1",
            "trees/mushroom/warped3",
            "trees/mushroom/warped2",
            "clutter/junglestone1",
            "structures/crystal2",
            "structures/crystal1",
            "structures/crystal6",
            "structures/crystal5",
            "structures/crystal4",
            "structures/crystal3",
            "jigsaw/village/japanese/japanese_4",
            "jigsaw/village/desert/houses/tool_smith_1",
            "jigsaw/village/japanese/japanese_3",
            "jigsaw/village/japanese/japanese_2",
            "jigsaw/village/japanese/japanese_1",
            "jigsaw/village/japanese/japanese_8",
            "jigsaw/village/japanese/japanese_7",
            "jigsaw/village/japanese/japanese_6",
            "jigsaw/village/japanese/japanese_5",
            "jigsaw/village/japanese/japanese_9",
            "jigsaw/village/desert/houses/farm_1",
            "jigsaw/village/desert/houses/farm_2",
            "clutter/jungleclutt8",
            "jigsaw/village/plains/houses/shepherds_house_1",
            "clutter/jungleclutt7",
            "jigsaw/village/taiga/lamp_post_1",
            "clutter/jungleclutt6",
            "clutter/jungleclutt5",
            "clutter/jungleclutt4",
            "clutter/jungleclutt3",
            "clutter/jungleclutt2",
            "clutter/jungleclutt1",
            "jigsaw/stronghold/wall-fixture/blank",
            "structures/ruins-greek-temple",
            "trees/spruce/unfrostedsmol1",
            "jigsaw/pillager-outpost/regular/feature_cage1",
            "trees/spruce/unfrostedsmol4",
            "trees/spruce/unfrostedsmol5",
            "trees/spruce/unfrostedsmol2",
            "jigsaw/pillager-outpost/regular/feature_cage2",
            "trees/spruce/unfrostedsmol3",
            "trees/mixed/AmyNormal2",
            "trees/spruce/unfrostedsmol8",
            "trees/mixed/AmyNormal3",
            "trees/spruce/unfrostedsmol9",
            "jigsaw/village/misc/lanterns-nes-1",
            "trees/mixed/AmyNormal4",
            "trees/spruce/unfrostedsmol6",
            "jigsaw/village/misc/lanterns-nes-2",
            "trees/mixed/AmyNormal5",
            "trees/spruce/unfrostedsmol7",
            "jigsaw/village/misc/lanterns-nes-3",
            "jigsaw/village/desert/streets/crossroad_03",
            "jigsaw/village/misc/lanterns-nes-4",
            "jigsaw/village/misc/lanterns-nes-5",
            "jigsaw/village/desert/streets/crossroad_01",
            "jigsaw/village/desert/streets/crossroad_02",
            "trees/mixed/AmyNormal1",
            "structures/presentsupermassiveyellow1",
            "trees/mixed/AmyNormal6",
            "trees/mixed/AmyNormal7",
            "trees/mixed/AmyNormal8",
            "trees/mixed/AmyNormal9",
            "jigsaw/stronghold/room/study",
            "jigsaw/village/desert/houses/butcher_shop_1",
            "trees/jungle/palm11",
            "trees/mushroom/greygeneric3",
            "trees/jungle/palm12",
            "trees/mushroom/greygeneric4",
            "trees/mushroom/greygeneric5",
            "trees/jungle/palm10",
            "trees/mushroom/greygeneric6",
            "trees/mushroom/greygeneric7",
            "trees/mushroom/greygeneric8",
            "trees/jungle/palm13",
            "trees/mushroom/greygeneric1",
            "trees/mushroom/greygeneric2",
            "jigsaw/village/snowy/lamp_post_02",
            "jigsaw/village/snowy/lamp_post_03",
            "jigsaw/village/snowy/lamp_post_01",
            "trees/sakura/smtaint1",
            "trees/mixed/purpletourmalinemed1",
            "trees/sakura/smtaint2",
            "jigsaw/village/plains/houses/cartographer_1",
            "jigsaw/pyramid/desert/bottom",
            "trees/mixed/purpletourmalinemed9",
            "trees/mixed/purpletourmalinemed8",
            "trees/mixed/purpletourmalinemed7",
            "trees/mixed/purpletourmalinemed6",
            "trees/mixed/purpletourmalinemed5",
            "clutter/oaklog3",
            "trees/mixed/purpletourmalinemed4",
            "clutter/oaklog2",
            "trees/mixed/purpletourmalinemed3",
            "clutter/oaklog1",
            "trees/mixed/purpletourmalinemed2",
            "structures/tentaclefire8",
            "structures/tentaclefire7",
            "jigsaw/village/taiga/zombie/houses/medium_house_3",
            "trees/mixed/elderredwood10",
            "jigsaw/village/taiga/zombie/houses/medium_house_2",
            "jigsaw/village/taiga/zombie/houses/medium_house_1",
            "clutter/icecluster1",
            "jigsaw/mineshaft/way_empty",
            "clutter/icecluster2",
            "clutter/icecluster3",
            "clutter/icecluster4",
            "jigsaw/village/plains/zombie/streets/turn_01",
            "jigsaw/stronghold/wall-fixture/5x3/mixed1",
            "trees/oak/smoak17",
            "trees/mushroom/lumo4",
            "trees/oak/smoak16",
            "trees/mushroom/lumo5",
            "trees/oak/smoak19",
            "trees/mushroom/lumo6",
            "trees/oak/smoak18",
            "trees/mushroom/lumo7",
            "trees/oak/smoak13",
            "trees/oak/smoak12",
            "trees/mushroom/lumo1",
            "trees/oak/smoak15",
            "trees/mushroom/lumo2",
            "trees/darkoak/talldrift4/objects/-o",
            "jigsaw/village/taiga/zombie/houses/medium_house_4",
            "trees/oak/smoak14",
            "trees/mushroom/lumo3",
            "clutter/oakclutt4",
            "trees/birch/smolponderosa10",
            "clutter/oakclutt3",
            "trees/birch/smolponderosa11",
            "clutter/oakclutt2",
            "trees/oak/smoak11",
            "clutter/oakclutt1",
            "trees/oak/smoak10",
            "clutter/cobblespike",
            "trees/mushroom/lumo8",
            "trees/birch/smolponderosa14",
            "trees/mushroom/lumo9",
            "trees/birch/smolponderosa15",
            "trees/birch/smolponderosa12",
            "clutter/oakclutt5",
            "trees/birch/smolponderosa13",
            "clutter/icecluster5",
            "clutter/icecluster6",
            "clutter/icecluster7",
            "clutter/icecluster8",
            "clutter/icecluster9",
            "jigsaw/stronghold/path/portal-hall",
            "clutter/oakdenclutt2",
            "clutter/oakdenclutt3",
            "clutter/oakdenclutt4",
            "clutter/oakdenclutt5",
            "clutter/oakdenclutt6",
            "clutter/oakdenclutt7",
            "clutter/oakdenclutt8",
            "clutter/oakdenclutt9",
            "jigsaw/village/desert/zombie/houses/medium_house_1",
            "jigsaw/village/desert/zombie/houses/medium_house_2",
            "trees/mixed/medbleedingserralita10",
            "jigsaw/stronghold/room/stairs-up-down",
            "trees/oak/smoak20",
            "jigsaw/stronghold/stairs/casing-tight",
            "trees/oak/smoak21",
            "clutter/oakdenclutt1",
            "jigsaw/village/desert/zombie/streets/square_01",
            "jigsaw/village/desert/zombie/streets/square_02",
            "structures/shipsidewaysbackhalf",
            "jigsaw/village/snowy/houses/fletcher_house_1",
            "jigsaw/village/savanna/zombie/terminators/terminator_05",
            "trees/spruce/omni1",
            "jigsaw/stronghold/wall-fixture/5x3x3/chains",
            "structures/presentsupermassiveblue11",
            "trees/oak/foakm4",
            "trees/oak/foakm3",
            "trees/oak/foakm2",
            "trees/mixed/smoakog160",
            "jigsaw/stronghold/ceiling/5x5/lamp",
            "jigsaw/village/desert/terminators/terminator_02",
            "trees/oak/foakm1",
            "jigsaw/village/desert/terminators/terminator_01",
            "trees/jungle/vgeneric6",
            "trees/jungle/vgeneric5",
            "trees/jungle/vgeneric8",
            "trees/jungle/vgeneric7",
            "trees/jungle/vgeneric2",
            "trees/jungle/vgeneric1",
            "trees/jungle/vgeneric4",
            "trees/jungle/vgeneric3",
            "structures/presentsupermassivered3",
            "trees/mixed/redrecluse9",
            "trees/mixed/redrecluse8",
            "jigsaw/village/plains/houses/small_farm_1",
            "trees/jungle/vgeneric9",
            "structures/shipupsidedownbackhalfdegraded",
            "trees/mixed/redrecluse1",
            "jigsaw/village/desert/houses/cartographer_house_1",
            "trees/mixed/redrecluse3",
            "trees/mixed/redrecluse2",
            "clutter/jungleclutt10",
            "trees/mixed/redrecluse5",
            "clutter/jungleclutt11",
            "trees/mixed/redrecluse4",
            "clutter/jungleclutt12",
            "trees/mixed/redrecluse7",
            "clutter/jungleclutt13",
            "trees/mixed/redrecluse6",
            "jigsaw/village/plains/houses/library_1",
            "jigsaw/village/plains/houses/library_2",
            "structures/brokmill1",
            "jigsaw/stronghold/jail/11",
            "jigsaw/stronghold/jail/12",
            "jigsaw/stronghold/jail/10",
            "trees/mixed/smoakog1",
            "clutter/twoicespike2",
            "clutter/twoicespike1",
            "clutter/twoicespike4",
            "clutter/twoicespike3",
            "structures/amethyst2",
            "structures/amethyst3",
            "structures/amethyst1",
            "jigsaw/village/plains/zombie/town_centers/meeting_point_1",
            "structures/amethyst6",
            "jigsaw/village/plains/zombie/town_centers/meeting_point_2",
            "jigsaw/village/plains/zombie/town_centers/meeting_point_3",
            "structures/amethyst4",
            "structures/amethyst5",
            "jigsaw/stronghold/path/iron-door",
            "jigsaw/village/plains/streets/crossroad_06",
            "jigsaw/village/plains/streets/crossroad_05",
            "jigsaw/stronghold/stairs/med-vertical-naked",
            "jigsaw/village/taiga/zombie/streets/crossroad_03",
            "structures/mlandstone5",
            "jigsaw/village/taiga/zombie/streets/crossroad_04",
            "structures/mlandstone4",
            "jigsaw/village/taiga/zombie/streets/crossroad_05",
            "jigsaw/village/taiga/zombie/streets/crossroad_06",
            "structures/mlandstone1",
            "structures/mlandstone3",
            "structures/mlandstone2",
            "trees/spruce/lfrostgeneric10",
            "jigsaw/village/plains/streets/crossroad_02",
            "trees/spruce/lfrostgeneric11",
            "jigsaw/village/plains/streets/crossroad_01",
            "trees/spruce/lfrostgeneric12",
            "jigsaw/village/plains/streets/crossroad_04",
            "trees/spruce/lfrostgeneric13",
            "jigsaw/village/plains/streets/crossroad_03",
            "trees/spruce/lfrostgeneric14",
            "trees/spruce/lfrostgeneric15",
            "trees/spruce/aridpine5",
            "trees/spruce/lfrostgeneric16",
            "trees/spruce/aridpine4",
            "trees/spruce/lfrostgeneric17",
            "trees/spruce/lfrostgeneric18",
            "trees/spruce/aridpine3",
            "trees/spruce/lfrostgeneric19",
            "trees/spruce/aridpine2",
            "trees/spruce/aridpine1",
            "jigsaw/stronghold/path/large-cross-stairs",
            "jigsaw/village/taiga/zombie/houses/library_1",
            "structures/snowulder",
            "trees/spruce/lfrostgeneric20",
            "trees/spruce/lfrostgeneric21",
            "trees/spruce/lfrostgeneric22",
            "trees/spruce/lfrostgeneric23",
            "trees/spruce/lfrostgeneric24",
            "trees/spruce/lfrostgeneric25",
            "trees/spruce/lfrostgeneric26",
            "trees/mixed/redrecluse10",
            "clutter/oakdenclutt10",
            "clutter/statue-villager-hell",
            "jigsaw/underwater-ruin/cracked_4",
            "jigsaw/underwater-ruin/cracked_3",
            "jigsaw/village/savanna/zombie/houses/medium_house_1",
            "jigsaw/underwater-ruin/cracked_2",
            "jigsaw/underwater-ruin/cracked_1",
            "jigsaw/village/savanna/zombie/houses/medium_house_2",
            "jigsaw/underwater-ruin/cracked_8",
            "jigsaw/underwater-ruin/cracked_7",
            "jigsaw/underwater-ruin/cracked_6",
            "jigsaw/underwater-ruin/cracked_5",
            "jigsaw/village/misc/lantern-ne-2",
            "structures/swordnpstr2",
            "jigsaw/village/misc/lantern-ne-1",
            "structures/swordnpstr1",
            "jigsaw/village/misc/lantern-ne-4",
            "jigsaw/village/snowy/houses/cartographer_house_1",
            "jigsaw/village/misc/lantern-ne-3",
            "jigsaw/village/misc/lantern-ne-5",
            "jigsaw/stronghold/path/large-spiral-staircase",
            "clutter/stoneboulder8",
            "jigsaw/village/misc/j4",
            "clutter/stoneboulder9",
            "jigsaw/village/misc/j5",
            "clutter/stoneboulder6",
            "jigsaw/village/misc/lanterns-ns-1",
            "jigsaw/village/misc/j6",
            "clutter/stoneboulder7",
            "jigsaw/village/misc/j7",
            "jigsaw/village/misc/j1",
            "jigsaw/village/misc/j2",
            "jigsaw/village/misc/j3",
            "jigsaw/village/savanna/zombie/streets/turn_01",
            "trees/mangrove/tree1",
            "jigsaw/village/misc/hay-ns-1",
            "trees/mangrove/tree2",
            "clutter/stoneboulder1",
            "jigsaw/village/misc/hay-ns-2",
            "trees/mangrove/tree3",
            "jigsaw/village/misc/hay-ns-3",
            "trees/mangrove/tree4",
            "jigsaw/village/misc/hay-ns-4",
            "trees/mangrove/tree5",
            "clutter/stoneboulder4",
            "jigsaw/village/misc/hay-ns-5",
            "jigsaw/village/misc/lanterns-ns-3",
            "trees/mangrove/tree6",
            "clutter/stoneboulder5",
            "jigsaw/village/misc/lanterns-ns-2",
            "trees/mangrove/tree7",
            "clutter/stoneboulder2",
            "jigsaw/village/misc/lanterns-ns-5",
            "trees/mangrove/tree8",
            "clutter/stoneboulder3",
            "jigsaw/village/misc/lanterns-ns-4",
            "trees/mangrove/tree9",
            "jigsaw/village/plains/houses/small_house_7",
            "jigsaw/village/plains/houses/small_house_6",
            "jigsaw/village/plains/houses/small_house_8",
            "jigsaw/village/plains/houses/small_house_1",
            "jigsaw/village/plains/houses/small_house_3",
            "jigsaw/village/plains/houses/small_house_2",
            "jigsaw/village/plains/houses/small_house_5",
            "jigsaw/village/plains/houses/small_house_4",
            "trees/oak/croak19",
            "trees/oak/croak6",
            "jigsaw/village/taiga/houses/armorer_house_1",
            "trees/oak/croak7",
            "trees/oak/croak17",
            "trees/oak/croak8",
            "trees/oak/croak18",
            "trees/oak/croak9",
            "trees/oak/croak2",
            "trees/oak/croak3",
            "trees/oak/croak4",
            "trees/oak/croak5",
            "trees/oak/denmyre12",
            "trees/oak/denmyre11",
            "trees/oak/denmyre14",
            "trees/oak/denmyre13",
            "trees/oak/croak1",
            "clutter/coralby3",
            "clutter/coralby2",
            "trees/oak/denmyre10",
            "clutter/coralby4",
            "jigsaw/village/savanna/zombie/streets/straight_10",
            "jigsaw/village/savanna/zombie/streets/straight_11",
            "jigsaw/village/misc/hay-e-4",
            "trees/mushroom/blackgeneric8",
            "jigsaw/village/misc/hay-e-3",
            "trees/mushroom/blackgeneric7",
            "trees/mushroom/blackgeneric6",
            "jigsaw/village/misc/hay-e-5",
            "trees/mushroom/blackgeneric5",
            "jigsaw/village/misc/hay-e-2",
            "jigsaw/village/misc/hay-e-1",
            "trees/mushroom/blackgeneric9",
            "jigsaw/stronghold/stairs/casing-floor-solid",
            "jigsaw/village/savanna/zombie/streets/straight_02",
            "clutter/coralby1",
            "trees/oak/denmyre16",
            "trees/oak/denmyre15",
            "jigsaw/village/taiga/houses/shepherds_house_1",
            "jigsaw/village/savanna/zombie/streets/straight_09",
            "jigsaw/village/savanna/zombie/streets/straight_08",
            "jigsaw/village/savanna/zombie/streets/straight_05",
            "jigsaw/village/savanna/zombie/streets/straight_06",
            "jigsaw/village/savanna/zombie/streets/straight_04",
            "trees/spruce/lfrostgeneric8",
            "trees/spruce/lfrostgeneric9",
            "trees/spruce/lfrostgeneric4",
            "trees/spruce/lfrostgeneric5",
            "trees/spruce/lfrostgeneric6",
            "trees/spruce/lfrostgeneric7",
            "trees/birch/smallgeneric9",
            "trees/mixed/elderredwood7",
            "trees/mixed/elderredwood6",
            "trees/spruce/lfrostgeneric1",
            "structures/shipsidewaysfronthalfdegraded",
            "trees/mixed/elderredwood9",
            "trees/spruce/lfrostgeneric2",
            "trees/mixed/elderredwood8",
            "trees/spruce/lfrostgeneric3",
            "trees/mixed/elderredwood3",
            "trees/mixed/elderredwood2",
            "trees/mixed/elderredwood5",
            "trees/mixed/elderredwood4",
            "trees/mixed/elderredwood1",
            "jigsaw/village/plains/houses/stable_2",
            "jigsaw/village/savanna/streets/corner_01",
            "trees/birch/smallgeneric8",
            "jigsaw/village/plains/houses/stable_1",
            "trees/birch/smallgeneric7",
            "jigsaw/village/savanna/streets/corner_03",
            "jigsaw/village/savanna/houses/large_farm_1",
            "trees/birch/smallgeneric6",
            "jigsaw/village/savanna/houses/large_farm_2",
            "trees/birch/smallgeneric5",
            "trees/birch/smallgeneric4",
            "trees/birch/smallgeneric3",
            "trees/birch/smallgeneric2",
            "trees/birch/smallgeneric1",
            "jigsaw/village/plains/streets/straight_02",
            "trees/mushroom/browngeneric1",
            "jigsaw/village/plains/streets/straight_01",
            "jigsaw/village/plains/streets/straight_04",
            "jigsaw/underwater-ruin/big_warm_6",
            "trees/oak/dadwood5",
            "trees/mushroom/blackgeneric4",
            "trees/birch/medponderosa9",
            "jigsaw/village/plains/streets/straight_03",
            "jigsaw/underwater-ruin/big_warm_7",
            "trees/oak/dadwood4",
            "trees/mushroom/blackgeneric3",
            "trees/mushroom/browngeneric2",
            "trees/birch/medponderosa8",
            "jigsaw/village/plains/streets/straight_06",
            "jigsaw/underwater-ruin/big_warm_4",
            "trees/mushroom/blackgeneric2",
            "jigsaw/village/plains/streets/straight_05",
            "jigsaw/underwater-ruin/big_warm_5",
            "trees/oak/dadwood6",
            "trees/mushroom/blackgeneric1",
            "jigsaw/village/savanna/zombie/houses/large_farm_2",
            "jigsaw/village/desert/lamp_1",
            "trees/jungle/lgeneric2",
            "trees/jungle/lgeneric1",
            "trees/jungle/lgeneric4",
            "trees/jungle/lgeneric3",
            "trees/jungle/lgeneric6",
            "trees/jungle/lgeneric5",
            "trees/jungle/lgeneric8",
            "trees/jungle/lgeneric7",
            "trees/jungle/lgeneric9",
            "trees/oak/dadwood1",
            "trees/birch/medponderosa5",
            "jigsaw/stronghold/path/small-spiral-staircase",
            "trees/birch/medponderosa4",
            "trees/oak/dadwood3",
            "trees/birch/medponderosa7",
            "jigsaw/village/savanna/houses/temple_1",
            "trees/oak/dadwood2",
            "trees/birch/medponderosa6",
            "jigsaw/village/savanna/houses/temple_2",
            "trees/birch/medponderosa1",
            "trees/birch/medponderosa3",
            "trees/birch/medponderosa2",
            "trees/mushroom/purplegeneric1",
            "trees/mixed/infestedpalm4",
            "trees/mushroom/purplegeneric5",
            "trees/mixed/infestedpalm5",
            "trees/mushroom/purplegeneric4",
            "trees/mushroom/purplegeneric3",
            "trees/mushroom/purplegeneric2",
            "jigsaw/village/snowy/town_centers/meeting_point_2",
            "trees/mushroom/purplegeneric9",
            "trees/acacia/denmyre3",
            "jigsaw/village/snowy/town_centers/meeting_point_1",
            "trees/mushroom/purplegeneric8",
            "trees/acacia/denmyre4",
            "trees/mushroom/purplegeneric7",
            "trees/acacia/denmyre5",
            "trees/mushroom/purplegeneric6",
            "trees/birch/largegeneric9",
            "trees/acacia/denmyre6",
            "trees/birch/largegeneric8",
            "trees/acacia/denmyre7",
            "trees/birch/largegeneric7",
            "trees/acacia/denmyre8",
            "trees/birch/largegeneric6",
            "trees/acacia/denmyre9",
            "jigsaw/village/plains/zombie/houses/big_house_1",
            "jigsaw/village/snowy/town_centers/meeting_point_3",
            "trees/birch/largegeneric5",
            "structures/presentsupermassiveorangea8",
            "jigsaw/fossil/spine_1",
            "jigsaw/fossil/spine_2",
            "jigsaw/pillager-outpost/overgrown/cage",
            "structures/shiprightsideupfull",
            "jigsaw/fossil/spine_3",
            "jigsaw/fossil/spine_4",
            "trees/mixed/infestedpalm1",
            "trees/mixed/infestedpalm2",
            "trees/mixed/infestedpalm3",
            "jigsaw/village/misc/j8",
            "jigsaw/village/misc/j9",
            "jigsaw/pyramid/pyramid-small",
            "structures/shiprightsideupfronthalfdegraded",
            "trees/birch/largegeneric4",
            "trees/birch/largegeneric3",
            "trees/birch/largegeneric2",
            "trees/birch/largegeneric1",
            "trees/acacia/denmyre1",
            "trees/acacia/denmyre2",
            "jigsaw/mineshaft/way_spawner",
            "jigsaw/village/taiga/streets/turn_01",
            "jigsaw/village/taiga/houses/fisher_cottage_1",
            "trees/darkoak/denmyre12",
            "trees/darkoak/denmyre11",
            "trees/darkoak/denmyre10",
            "trees/oak/truegeneric4",
            "trees/darkoak/denmyre16",
            "trees/oak/truegeneric3",
            "trees/darkoak/denmyre15",
            "trees/mixed/dead1",
            "trees/spruce/sup-pine-11",
            "trees/oak/truegeneric2",
            "trees/darkoak/denmyre14",
            "trees/spruce/sup-pine-10",
            "trees/oak/truegeneric1",
            "trees/darkoak/denmyre13",
            "trees/spruce/sup-pine-13",
            "trees/oak/truegeneric8",
            "trees/spruce/sup-pine-12",
            "trees/oak/truegeneric7",
            "trees/oak/truegeneric6",
            "trees/oak/truegeneric5",
            "trees/jungle/largegeneric4",
            "trees/birch/largegeneric14",
            "trees/jungle/largegeneric5",
            "trees/birch/largegeneric15",
            "trees/birch/largegeneric16",
            "trees/birch/largegeneric17",
            "trees/birch/largegeneric18",
            "trees/birch/largegeneric19",
            "jigsaw/village/savanna/houses/library_1",
            "trees/oak/smwiltedoak1",
            "trees/birch/largegeneric10",
            "trees/birch/largegeneric11",
            "trees/birch/largegeneric12",
            "trees/birch/largegeneric13",
            "void/void",
            "structures/presentmediumreda16",
            "jigsaw/village/desert/houses/weaponsmith_1",
            "trees/jungle/largegeneric1",
            "trees/jungle/largegeneric2",
            "trees/jungle/largegeneric3",
            "jigsaw/fossil/spine_2_coal",
            "trees/birch/largegeneric20",
            "jigsaw/village/savanna/houses/small_house_1",
            "jigsaw/village/savanna/houses/small_house_2",
            "jigsaw/village/savanna/houses/small_house_3",
            "clutter/rshrub1",
            "jigsaw/village/savanna/houses/small_house_4",
            "jigsaw/village/savanna/houses/small_house_5",
            "jigsaw/village/savanna/houses/small_house_6",
            "jigsaw/village/savanna/houses/small_house_7",
            "jigsaw/village/savanna/houses/small_house_8",
            "clutter/rshrub2",
            "jigsaw/village/savanna/houses/small_farm",
            "jigsaw/village/snowy/houses/shepherds_house_1",
            "trees/mixed/tredwood8",
            "trees/mixed/tredwood9",
            "trees/oak/thoakgeneric10",
            "jigsaw/stronghold/jail/blank",
            "clutter/stone2",
            "clutter/stone1",
            "jigsaw/village/misc/bland-ne-1",
            "trees/mixed/tredwood1",
            "jigsaw/village/misc/bland-ne-2",
            "trees/mixed/tredwood2",
            "jigsaw/village/misc/bland-ne-3",
            "trees/mixed/tredwood3",
            "clutter/stone6",
            "trees/mixed/tredwood4",
            "clutter/stone5",
            "jigsaw/ancient-city/ancient_city",
            "trees/mixed/tredwood5",
            "clutter/hay2",
            "clutter/stone4",
            "jigsaw/stronghold/wall-fixture/5x3x3/cobweb",
            "trees/mixed/tredwood6",
            "clutter/hay3",
            "clutter/stone3",
            "trees/mixed/tredwood7",
            "clutter/hay1",
            "clutter/stone7",
            "structures/landstone2",
            "structures/landstone1",
            "jigsaw/village/misc/bland-ne-4",
            "structures/landstone4",
            "jigsaw/village/misc/bland-ne-5",
            "structures/landstone3",
            "structures/landstone5",
            "trees/darkoak/smwillow4",
            "trees/darkoak/smwillow2",
            "trees/darkoak/smwillow3",
            "trees/mushroom/fantasygenericred2",
            "trees/mushroom/fantasygenericred1",
            "trees/darkoak/smwillow1",
            "jigsaw/village/savanna/streets/straight_11",
            "jigsaw/village/savanna/streets/straight_10",
            "trees/mushroom/fantasygenericred4",
            "trees/mushroom/fantasygenericred3",
            "trees/mixed/tourmalinelarge2",
            "trees/mixed/tourmalinelarge1",
            "trees/mixed/tourmalinelarge4",
            "trees/mixed/tourmalinelarge3",
            "trees/mixed/tourmalinelarge6",
            "trees/mixed/tourmalinelarge5",
            "trees/mixed/tourmalinelarge8",
            "trees/mixed/tourmalinelarge7",
            "trees/mixed/tourmalinelarge9",
            "jigsaw/stronghold/path/large-corridor",
            "clutter/savclutt1",
            "clutter/savclutt3",
            "jigsaw/village/savanna/streets/straight_09",
            "clutter/savclutt2",
            "jigsaw/village/savanna/streets/straight_08",
            "clutter/savclutt5",
            "clutter/savclutt4",
            "jigsaw/village/savanna/streets/straight_06",
            "clutter/savclutt7",
            "jigsaw/village/savanna/streets/straight_05",
            "clutter/savclutt6",
            "jigsaw/village/savanna/streets/straight_04",
            "clutter/savclutt8",
            "jigsaw/village/savanna/streets/straight_02",
            "jigsaw/stronghold/wall-fixture/5x3/chains",
            "clutter/icespiremed3",
            "structures/swreck1",
            "clutter/icespiremed2",
            "clutter/substat1",
            "clutter/substat3",
            "clutter/substat2",
            "clutter/substat5",
            "clutter/substat4",
            "jigsaw/village/desert/zombie/town_centers/meeting_point_2",
            "jigsaw/village/desert/zombie/town_centers/meeting_point_1",
            "clutter/icespiremed1",
            "jigsaw/pyramid/pyramid-red-extreme",
            "jigsaw/village/desert/zombie/town_centers/meeting_point_3",
            "trees/oak/smoak3",
            "trees/oak/smoak4",
            "trees/oak/smoak5",
            "trees/oak/smoak6",
            "clutter/literalgarbage4",
            "trees/oak/smoak1",
            "trees/oak/smoak2",
            "clutter/literalgarbage2",
            "trees/birch/arid6",
            "clutter/literalgarbage3",
            "trees/birch/arid5",
            "clutter/literalgarbage1",
            "trees/birch/arid7",
            "trees/oak/smoak7",
            "clutter/skull1",
            "trees/oak/smoak8",
            "trees/oak/smoak9",
            "trees/oak/truegeneric9",
            "trees/birch/arid2",
            "trees/birch/arid1",
            "jigsaw/stronghold/path/jail-room2",
            "trees/birch/arid4",
            "jigsaw/stronghold/path/jail-room1",
            "trees/birch/arid3",
            "structures/shipupsidedownfronthalf",
            "trees/darkoak/talldrift5/objects/-o"
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectmarker": {"anyOf": [
            {
                "description": "Find blocks to mark",
                "type": "object",
                "properties": {
                    "mark": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "mark\nFind block types to mark\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "maximumMarkers": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 16,
                        "description": "maximumMarkers\nThe maximum amount of markers to place. Use these sparingly!\n   \nInteger\n\n    \n* Default Value is 8\n* Minimum allowed is 1\n* Maximum allowed is 16"
                    },
                    "exact": {
                        "type": "boolean",
                        "description": "exact\nIf true, markers will only be placed if the block matches the mark list perfectly.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "marker": {
                        "type": "string",
                        "$ref": "#/definitions/erzmarkers",
                        "description": "marker\nThe marker to add\n   \nIris Marker\n\nMust be a valid markers (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzloot": {"enum": [
            "structures/village/plain",
            "structures/stronghold/generic",
            "structures/village/toolsmith",
            "ocean/clutter",
            "frozen/clutter",
            "tropical/treasure",
            "structures/village/taiga",
            "structures/stronghold/maze",
            "swamp/clutter",
            "cold/food",
            "structures/village/weaponsmith",
            "hot/treasure",
            "structures/ruined-portal",
            "structures/village/tannery",
            "structures/village/fletcher",
            "cold/treasure",
            "structures/ancient-city",
            "structures/igloo",
            "structures/pillager-outpost",
            "structures/village/snowy",
            "structures/village/armorer",
            "structures/village/shepherd",
            "swamp/food",
            "temperate/food",
            "cactus/clutter",
            "structures/ocean-ruins",
            "structures/village/savanna",
            "structures/pyramid-jungle",
            "temperate/clutter",
            "structures/amenhotep",
            "structures/shipwreck/map_chest",
            "tropical/dungeon",
            "structures/mineshaft",
            "beach/clutter",
            "snow/clutter",
            "structures/shipwreck/supply_chest",
            "structures/dungeon",
            "structures/woodland-mansion",
            "structures/end-city",
            "structures/village/temple",
            "structures/stronghold/library",
            "tropical/food",
            "cave/clutter",
            "global-treasure",
            "structures/village/butcher",
            "global-tools",
            "structures/village/mason",
            "hot/food",
            "structures/pyramid-desert",
            "structures/village/cartographer",
            "structures/village/desert",
            "mushroom/clutter",
            "frozen/food",
            "global-clutter",
            "mushroom/food",
            "forest/food",
            "structures/village/fisher",
            "structures/shipwreck/treasure_chest"
        ]},
        "erzravines": {"enum": [
            "sandstone/main",
            "drip/main",
            "red-sandstone/small",
            "swamp/main",
            "volcanic/small",
            "rocky/main",
            "jungle/main",
            "red-sandstone/main",
            "simple/main",
            "deep/main",
            "sandstone/small",
            "simple/small",
            "volcanic/main",
            "amethyst/main",
            "drip/small",
            "ice/main",
            "calcite/small",
            "mixed-sandstone/main",
            "swamp/small",
            "calcite/main",
            "rocky/small",
            "mixed-sandstone/small"
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectplacement": {"anyOf": [
            {
                "description": "Represents an iris object placer. It places objects.",
                "type": "object",
                "properties": {
                    "place": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/erzobjects"},
                        "description": "place\nList of objects to place\n   \nList<Object>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Object (use ctrl+space for auto complete!)"
                    },
                    "rotation": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectrotation",
                                "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-rotator",
                                "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "rotation\nRotate this objects placement\n   \nObjectRotation (Object)\nConfigures rotation for iris\n    \nYou can instead specify \"snippet/object-rotator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "clamp": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectlimit",
                                "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-limit",
                                "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "clamp\nLimit the max height or min height of placement.\n   \nObjectLimit (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-limit/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "snow": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "snow\nThe maximum layer level of a snow filter overtop of this placement. Set to 0 to disable. Max of 1.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "isDolphinTarget": {
                        "type": "boolean",
                        "description": "isDolphinTarget\nWhether or not this object can be targeted by a dolphin.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "rotateTowardsSlope": {
                        "type": "boolean",
                        "description": "rotateTowardsSlope\nSet to true to add the rotation of the direction of the slope of the terrain (wherever the slope is going down) to the y-axis rotation of the object.Rounded to 90 degrees. Adds the *min* rotation of the y axis as well (to still allow you to rotate objects nicely). Discards *max* and *interval* on *yaxis*\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance for this to place in a chunk. If you need multiple per chunk, set this to 1 and use density.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "density": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "density\nIf the chance check passes, place this many in a single chunk\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "densityStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "densityStyle\nIf the chance check passes, and you specify this, it picks a number in the range based on noise, and 'density' is ignored.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "stiltSettings": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstiltsettings",
                                "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-stilt-settings",
                                "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "stiltSettings\nWhen stilting is enabled, this object will define various properties related to it.\n   \nStiltSettings (Object)\nDefines stilting behaviour.\n    \nYou can instead specify \"snippet/stilt-settings/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "boreExtendMaxY": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "boreExtendMaxY\nWhen bore is enabled, expand max-y of the cuboid it removes\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "markers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectmarker"},
                        "description": "markers\nAdd markers to blocks in this object\n   \nList of ObjectMarkers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "boreExtendMinY": {
                        "type": "integer",
                        "minimum": -1,
                        "maximum": 64,
                        "description": "boreExtendMinY\nWhen bore is enabled, lower min-y of the cuboid it removes\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -1\n* Maximum allowed is 64"
                    },
                    "underwater": {
                        "type": "boolean",
                        "description": "underwater\nIf set to true, objects will place on the terrain height, ignoring the water surface.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "carvingSupport": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-carvingmode",
                        "description": "carvingSupport\nIf set to true, objects will place in carvings (such as underground) or under an overhang.\n   \nCarvingMode\nDefines if an object is allowed to place in carvings, surfaces or both.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid CarvingMode (use ctrl+space for auto complete!)"
                    },
                    "heightmap": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisnoisegenerator",
                                "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-generator",
                                "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "heightmap\nIf this is defined, this object wont place on the terrain heightmap, but instead on this virtual heightmap\n   \nNoiseGenerator (Object)\nA noise generator\n    \nYou can instead specify \"snippet/generator/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "smartBore": {
                        "type": "boolean",
                        "description": "smartBore\nIf set to true, Iris will try to fill the insides of 'rooms' and 'pockets' where air should fit based off of raytrace checks. This prevents a village house placing in an area where a tree already exists, and instead replaces the parts of the tree where the interior of the structure is. \n\nThis operation does not affect warmed-up generation speed however it does slow down loading objects.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "waterloggable": {
                        "type": "boolean",
                        "description": "waterloggable\nIf set to true, Blocks placed underwater that could be waterlogged are waterlogged.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "onwater": {
                        "type": "boolean",
                        "description": "onwater\nIf set to true, objects will place on the fluid height level Such as boats.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "meld": {
                        "type": "boolean",
                        "description": "meld\nIf set to true, this object will only place parts of itself where blocks already exist. Warning: Melding is very performance intensive!\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bottom": {
                        "type": "boolean",
                        "description": "bottom\nIf set to true, this object will place from the ground up instead of height checks when not y locked to the surface. This is not compatable with X and Z axis rotations (it may look off)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bore": {
                        "type": "boolean",
                        "description": "bore\nIf set to true, air will be placed before the schematic places.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "warp": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "warp\nUse a generator to warp the field of coordinates. Using simplex for example would make a square placement warp like a flag\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "translateCenter": {
                        "type": "boolean",
                        "description": "translateCenter\nIf the place mode is set to CENTER_HEIGHT_RIGID and you have an X/Z translation, Turning on translate center will also translate the center height check.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-objectplacemode",
                        "description": "mode\nThe placement mode\n   \nObjectPlaceMode\nObject Place modes are useful for positioning objects just right. The default value is CENTER_HEIGHT.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ObjectPlaceMode (use ctrl+space for auto complete!)"
                    },
                    "edit": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectreplace"},
                        "description": "edit\nFind and replace blocks\n   \nList of ObjectReplaces (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "translate": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjecttranslate",
                                "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-translator",
                                "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "translate\nTranslate this object's placement\n   \nObjectTranslate (Object)\nTranslate objects\n    \nYou can instead specify \"snippet/object-translator/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "scale": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectscale",
                                "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-object-scale",
                                "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "scale\nScale Objects\n   \nObjectScale (Object)\nScale objects\n    \nYou can instead specify \"snippet/object-scale/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "loot": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisobjectloot"},
                        "description": "loot\nThe loot tables to apply to these objects\n   \nList of ObjectLoots (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "overrideGlobalLoot": {
                        "type": "boolean",
                        "description": "overrideGlobalLoot\nWhether the given loot tables override any and all other loot tables available in the dimension, region or biome.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "trees": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristree"},
                        "description": "trees\nThis object / these objects override the following trees when they grow...\n   \nList of Trees (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisobjectlimit": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "minimumHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1024,
                        "description": "minimumHeight\nThe minimum height for placement (bottom of object)\n   \nInteger\n\n    \n* Default Value is -2048\n* Minimum allowed is 0\n* Maximum allowed is 1024"
                    },
                    "maximumHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1024,
                        "description": "maximumHeight\nThe maximum height for placement (top of object)\n   \nInteger\n\n    \n* Default Value is 2048\n* Minimum allowed is 0\n* Maximum allowed is 1024"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-object-scale": {"enum": []},
        "enum-snippet-command-registry": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisnoisegenerator": {"anyOf": [
            {
                "description": "A noise generator",
                "type": "object",
                "properties": {
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-4,
                        "description": "zoom\nThe coordinate input zoom\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4"
                    },
                    "negative": {
                        "type": "boolean",
                        "description": "negative\nReverse the output. So that noise = -noise + opacity\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "opacity": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "opacity\nThe output multiplier\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "offsetX": {
                        "type": "number",
                        "description": "offsetX\nCoordinate offset x\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "offsetY": {
                        "type": "number",
                        "description": "offsetY\nHeight output offset y. Avoid using with terrain generation.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "offsetZ": {
                        "type": "number",
                        "description": "offsetZ\nCoordinate offset z\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "seed": {
                        "type": "integer",
                        "description": "seed\nThe seed\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "parametric": {
                        "type": "boolean",
                        "description": "parametric\nApply a parametric curve on the output\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "bezier": {
                        "type": "boolean",
                        "description": "bezier\nApply a bezier curve on the output\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sinCentered": {
                        "type": "boolean",
                        "description": "sinCentered\nApply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "exponent": {
                        "type": "number",
                        "description": "exponent\nThe exponent noise^EXPONENT\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nEnable / disable. Outputs offsetY if disabled\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe Noise Style\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "octaves": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "octaves\nMultiple octaves for multple generators of changing zooms added together\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "fracture": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisnoisegenerator"},
                        "description": "fracture\nApply a child noise generator to fracture the input coordinates of this generator\n   \nList of NoiseGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriselipsoid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "xRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod": {"oneOf": [
            {
                "const": "NONE",
                "description": "No interpolation. Nearest Neighbor (bad for terrain, great for performance)."
            },
            {
                "const": "BILINEAR",
                "description": "Uses 4 nearby points in a square to calculate a 2d slope. Very fast but creates square artifacts. See: https://en.wikipedia.org/wiki/Bilinear_interpolation"
            },
            {
                "const": "STARCAST_3",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 3 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_6",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 6 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_9",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 9 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_12",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 12 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "BILINEAR_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "HERMITE_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "BILINEAR_BEZIER",
                "description": "Uses bilinear but on a bezier curve. See: https://en.wikipedia.org/wiki/Bezier_curve"
            },
            {
                "const": "BILINEAR_PARAMETRIC_2",
                "description": "Uses Bilinear but with parametric curves alpha 2."
            },
            {
                "const": "BILINEAR_PARAMETRIC_4",
                "description": "Uses Bilinear but with parametric curves alpha 4."
            },
            {
                "const": "BILINEAR_PARAMETRIC_1_5",
                "description": "Uses Bilinear but with parametric curves alpha 1.5."
            },
            {
                "const": "BICUBIC",
                "description": "Bicubic noise creates 4, 4-point splines for a total of 16 checks. Bcubic can go higher than expected and lower than expected right before a large change in slope."
            },
            {
                "const": "HERMITE",
                "description": "Hermite is similar to bicubic, but faster and it can be tuned a little bit"
            },
            {
                "const": "CATMULL_ROM_SPLINE",
                "description": "Essentially bicubic with zero tension"
            },
            {
                "const": "HERMITE_TENSE",
                "description": "Essentially bicubic with max tension"
            },
            {
                "const": "HERMITE_LOOSE",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            }
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisimagechannel": {"oneOf": [
            {
                "const": "RED",
                "description": "The red channel of the image"
            },
            {
                "const": "GREEN",
                "description": "Thge green channel of the image"
            },
            {
                "const": "BLUE",
                "description": "The blue channel of the image"
            },
            {
                "const": "SATURATION",
                "description": "The saturation as a channel of the image"
            },
            {
                "const": "HUE",
                "description": "The hue as a channel of the image"
            },
            {
                "const": "BRIGHTNESS",
                "description": "The brightness as a channel of the image"
            },
            {
                "const": "COMPOSITE_ADD_RGB",
                "description": "The composite of RGB as a channel of the image. Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_RGB",
                "description": "The composite of RGB as a channel of the image. Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_RGB",
                "description": "The composite of RGB as a channel of the image. Picks the highest channel"
            },
            {
                "const": "COMPOSITE_ADD_HSB",
                "description": "The composite of HSB as a channel of the image Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_HSB",
                "description": "The composite of HSB as a channel of the image Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_HSB",
                "description": "The composite of HSB as a channel of the image Picks the highest channel"
            },
            {
                "const": "RAW",
                "description": "The raw value as a channel (probably doesnt look very good)"
            }
        ]},
        "enum-snippet-generator": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisobjecttranslate": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "x": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "x\nThe x shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "y": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "y\nThe y shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "yRandom": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "yRandom\nAdds an additional amount of height randomly (translateY + rand(0 - yRandom))\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    },
                    "z": {
                        "type": "integer",
                        "minimum": -128,
                        "maximum": 128,
                        "description": "z\nThe z shift in blocks\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -128\n* Maximum allowed is 128"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-inventory-itemflag": {"enum": [
            "HIDE_ENCHANTS",
            "HIDE_ATTRIBUTES",
            "HIDE_UNBREAKABLE",
            "HIDE_DESTROYS",
            "HIDE_PLACED_ON",
            "HIDE_POTION_EFFECTS",
            "HIDE_DYE"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irislootmode": {"oneOf": [
            {
                "const": "ADD",
                "description": "Add to the existing parent loot tables"
            },
            {
                "const": "CLEAR",
                "description": "Clear all loot tables then add this table"
            },
            {
                "const": "REPLACE",
                "description": "Replace all loot tables with this table (same as clear)"
            }
        ]},
        "erzscripts": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisgeneratorstyle": {"anyOf": [
            {
                "description": "A gen style",
                "type": "object",
                "properties": {
                    "style": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-noisestyle",
                        "description": "style\nThe chance is 1 in CHANCE per interval\n   \nNoiseStyle\nStyles of noise\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid NoiseStyle (use ctrl+space for auto complete!)"
                    },
                    "cellularFrequency": {
                        "type": "number",
                        "description": "cellularFrequency\nIf set above 0, this style will be cellularized\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "cellularZoom": {
                        "type": "number",
                        "description": "cellularZoom\nCell zooms\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "zoom\nThe zoom of this style\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "expression": {
                        "type": "string",
                        "$ref": "#/definitions/erzexpressions",
                        "description": "expression\nInstead of using the style property, use a custom expression to represent this style.\n   \nIris Expression\n\nMust be a valid expressions (use ctrl+space for auto complete!)"
                    },
                    "imageMap": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisimagemap",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/image-map/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-image-map",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/image-map/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/image-map/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "multiplier\nThe Output multiplier. Only used if parent is fracture.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "axialFracturing": {
                        "type": "boolean",
                        "description": "axialFracturing\nIf set to true, each dimension will be fractured with a different order of input coordinates. This is usually 2 or 3 times slower than normal.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "fracture": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "exponent": {
                        "type": "number",
                        "minimum": 0.01562,
                        "maximum": 64,
                        "description": "exponent\nThe exponent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01562\n* Maximum allowed is 64.0"
                    },
                    "cacheSize": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "cacheSize\nIf the cache size is set above 0, this generator will be cached\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisobjectrotation": {"anyOf": [
            {
                "description": "Configures rotation for iris",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nIf this rotator is enabled or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "xAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xAxis\nThe x axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yAxis\nThe y axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zAxis": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisaxisrotationclamp",
                                "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-axis-rotation",
                                "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zAxis\nThe z axis rotation\n   \nAxisRotationClamp (Object)\nRepresents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.\n    \nYou can instead specify \"snippet/axis-rotation/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-object-translator": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-irisobjectplacementscaleinterpolator": {"oneOf": [
            {
                "const": "NONE",
                "description": "Don't interpolate, big cubes"
            },
            {
                "const": "TRILINEAR",
                "description": "Uses linear interpolation in 3 dimensions, generally pretty good, but slow"
            },
            {
                "const": "TRICUBIC",
                "description": "Uses cubic spline interpolation in 3 dimensions, even better, but extreme slowdowns"
            },
            {
                "const": "TRIHERMITE",
                "description": "Uses hermite spline interpolation in 3 dimensions, even better, but extreme slowdowns"
            }
        ]},
        "enum-snippet-loot-registry": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-inventoryslottype": {"oneOf": [
            {
                "const": "STORAGE",
                "description": "Typically the one you want to go with. Storage represnents most slots in inventories."
            },
            {
                "const": "FUEL",
                "description": "Used for the fuel slot in Furnaces, Blast furnaces, smokers etc."
            },
            {
                "const": "FURNACE",
                "description": "Used for the cook slot in furnaces"
            },
            {
                "const": "BLAST_FURNACE",
                "description": "Used for the cook slot in blast furnaces"
            },
            {
                "const": "SMOKER",
                "description": "Used for the cook slot in smokers"
            }
        ]},
        "enum-snippet-palette": {"enum": []},
        "obj-com-volmit-iris-util-collection-kmap": {
            "description": "",
            "type": "object",
            "properties": {}
        },
        "enum-org-bukkit-dyecolor": {"enum": [
            "WHITE",
            "ORANGE",
            "MAGENTA",
            "LIGHT_BLUE",
            "YELLOW",
            "LIME",
            "PINK",
            "GRAY",
            "LIGHT_GRAY",
            "CYAN",
            "PURPLE",
            "BLUE",
            "BROWN",
            "GREEN",
            "RED",
            "BLACK"
        ]},
        "enum-org-bukkit-attribute-attributemodifier-operation": {"enum": [
            "ADD_NUMBER",
            "ADD_SCALAR",
            "MULTIPLY_SCALAR_1"
        ]},
        "obj-com-volmit-iris-engine-object-irisjigsawstructureplacement": {"anyOf": [
            {
                "description": "Represents a jigsaw structure placer",
                "type": "object",
                "properties": {
                    "structure": {
                        "type": "string",
                        "$ref": "#/definitions/erzjigsaw-structures",
                        "description": "structure\nThe structure to place\n   \nIris Jigsaw Structure\n\nMust be a valid jigsaw-structures (use ctrl+space for auto complete!)"
                    },
                    "rarity": {
                        "type": "integer",
                        "description": "rarity\nThe 1 in X chance rarity\n   \nInteger\n\n    \n* Default Value is 100"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzimages": {"enum": [
            "Untitled",
            "regionmap",
            "continentmap"
        ]},
        "enum-snippet-style-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisstyledrange": {"anyOf": [
            {
                "description": "Represents a range styled with a custom generator",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisaxisrotationclamp": {"anyOf": [
            {
                "description": "Represents a rotation axis with intervals and maxes. The x and z axis values are defaulted to disabled. The Y axis defaults to on, rotating by 90 degree increments.",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nShould this axis be rotated at all?\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "min": {
                        "type": "number",
                        "minimum": -360,
                        "maximum": 360,
                        "description": "min\nThe minimum angle (from) or set this and max to zero for any angle degrees. Set both to the same non-zero value to force it to that angle only\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -360.0\n* Maximum allowed is 360.0"
                    },
                    "max": {
                        "type": "number",
                        "minimum": -360,
                        "maximum": 360,
                        "description": "max\nThe maximum angle (to) or set this and min to zero for any angle degrees. Set both to the same non-zero value to force it to that angle only\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -360.0\n* Maximum allowed is 360.0"
                    },
                    "interval": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 360,
                        "description": "interval\nIris spins the axis but not freely. For example an interval of 90 would mean 4 possible angles (right angles) degrees. \nSetting this to 0 means totally free rotation.\n\nNote that a lot of structures can have issues with non 90 degree intervals because the minecraft block resolution is so low.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 360.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irislootreference": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irislootmode",
                        "description": "mode\nAdd = add on top of parent tables, Replace = clear first then add these. Clear = Remove all and dont add loot from this or parent.\n   \nLootMode\nA loot mode is used to describe what to do with the existing loot layers before adding this loot. Using ADD will simply add this table to the building list of tables (i.e. add dimension tables, region tables then biome tables). By using clear or replace, you remove the parent tables before and add just your tables.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid LootMode (use ctrl+space for auto complete!)"
                    },
                    "tables": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/erzloot"},
                        "description": "tables\nAdd loot table registries here\n   \nList<Loot>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Loot (use ctrl+space for auto complete!)"
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 0,
                        "description": "multiplier\nIncrease the chance of loot in this area\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
